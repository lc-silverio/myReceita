%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Digital_PT_MS_4C_V_FC.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Diogo
%%CreationDate: 12/04/12
%%BoundingBox: 0 0 842 596
%%HiResBoundingBox: 0 0 841.8896 595.2754
%%CropBox: 0 0 841.8896 595.2754
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print_OG_MS_4C_V_FC</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2012-04-12T16:35:43+01:00</xmp:MetadataDate>
         <xmp:ModifyDate>2012-04-12T16:35:43+01:00</xmp:ModifyDate>
         <xmp:CreateDate>2012-04-12T16:35:43+01:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>120</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAeAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qk/mTzRp2hW3O4PqX&#xA;Lg/V7VftOR4n9lfE/dU7Zj6jUxxCy15MgiN3luu+cNb1hnWecw2hqBaRErHxPZ+79P2vopnP59dk&#xA;ydaHcHDnmlJO/wDla/lXyf5a0q21AzT301t9YhtrZORaN5XVW5sVjoSh/ar7Zu8GXgxRB509L2N2&#xA;Fn1mPihQgNrJ+Pv6sK1n/nJrWJC66NpEFsvRJbp2mb58U9ID7zidRI+T12n9i8Y/vZk/1dvvth2o&#xA;/nb+ZV8TXVzbJ2jto4ogP9kF5/8ADZWckjzP4+DuMPs1oYfwcXvJP7GPXfnPzfeMWutbv5id6Pcz&#xA;Eda7DlQZA783Y4+ztND6ccB/mh9PfklNNP8Aljo0s0jSyv8AWi0jksx/0ubqTvmfgHoD5h7SxEdd&#xA;kAFD0/7iLOMtdE7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUv17W&#xA;bbR9Lmvp/i4CkcVaF5DsqDr177bDfKs2YY4mR6MZy4RbwLzX5vSKWTUNTl9W7nJKQr1Pgqgk8UXO&#xA;bEcmomT+A6rLmrcsKNv5582I0lpaSLp3sRFBStN5HKh+mZBzabTGpSHF8z8hyYQ02fMLiPT8v7WQ&#xA;ebfJnmDWdN8tz6bAtwLLSIbKWMSIshkhmmLFFYgsvxbHvkcvbGAS4SSK8n1b2T1uLS6Xw8po8V8j&#xA;X0xHP4POb2xvbG4a2vIHt7hPtRSKVYfQczMeSMxcTYe5x5Y5I8USCPJQybY7FX1p+Rn/AJKzRP8A&#xA;o6/6i5sz8P0h8k9p/wDH8n+b/uIs7y10LsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVeQfnV5vhspltmblHZKD6IqC9zKvIA9vhjoa9qnNPr7yZBjHIblwNZlp5j+W3lu&#xA;Pzbrs+qa1ItxFbUb6mXUGQ12+CvL00+VD0r1zA7Q1XgCGOArjkBf7e8o7O0gyk5J8hyH46Jj53u7&#xA;nUjZRadawa8PRrc2Fmt4UtGUiiNFbXPEfa47qNwfoezAAZ/u+DfY73LzsvoeL2d0uYH8xLJjiD6b&#xA;kIiX+xH6eat5zsNZt4NAkt9BTUGtbFIQ0MOoxtbemAeBMdzX9qlW32OHRHiOTix8Fy636vPd2XYs&#xA;cGOE8QyGEAaFyxmxyHOHkr+ada8i3HllY/MOqWzqotYLC/tEnnmhurgSlo3Iku5GWkIND796Zhaf&#xA;Fm3nhxcEhLcXQlGj30Pk4MtXPQ5BOpQEpSuJ5SAqqAjHfcvJr2zuLO6ltbhGjmibi6OpVgfdWAYf&#xA;IiubzHMTiJDkXu9NqI5scckfpkFDJt768/JtFX8s9CCgKPRc0ApuZnJP0k5m6f6B8fvfIPaE3rsn&#xA;v/QGZ5e6VjP5jedIPJ3lK81p0EtwlIrKBq0knk2QGnYbs3sD3xVhGi/k9eeZ7OHWfzE1W9v9Ru1E&#xA;w0uOUw21ssgqIuAGzAfa48RXx64qj/Kv5Uy+UvzCivtEkm/wy9g8dxFPccytyX+EKm1V4AUriqW6&#xA;7f8AmH8w/P1/5P0u/m0nyvoIA1u8tSVmnmbb0Q46bhlAO3wsTXYYqqat/wA4+aRaWT3flHUr/S9f&#xA;gUva3H1glZJFBIEhAUjl0qp28DirC9caX8xPyquvM9yjx+cPLB+q37Rs6CWCJubMYlPBTxkLE06q&#xA;e1AFXsX5UQ6EvkHSZ9FiMNreQrPKhkklIuCAs/xSMx2kQjwxV5f5S8h+WvMf5ueY3t4JR5c0F1jE&#xA;IuJqSXxb4jy58+IdJDQN4fLFVmu/lh5Vb86dP8swrc22k32ltfTRR3Ehb1g8wqryGRgP3Y2xVl3l&#xA;/wDKTR9A/MDTdS8u6j6kGmxzjWrG5uTLcKbiErbFUVdg1WPx02G1cVYP/wAq08rz/ndc+VQlxDos&#xA;diLpII7iUsH4oftuXenxeOKU+sdNu/y//N3QvL2i6ldXeia7A7XWmXUhm9Pir0ddgFoYwQaV2IO2&#xA;KGM/m/5LbTfzC06Lyh61rqd3bXGqKiyyyM9xbF52MfJnIYrESoG1dsVeu+RvM+kfmR5F5XkYZpkN&#xA;prNkjuhWUD4gChV1Vx8S0PQ0rUHFWAflH5e8vaV5y876jP6gi8rXMkVjI8sjCKCk6yFhyo59OP8A&#xA;arilX8s6Bq/5uG48y+Zr+6s/LDTPFo+h2khiVkjNDJKdw29VJ6lq/ZAAKhT85fl/f/lpZf4v8i6j&#xA;cxQWLodS0i5kMsEkLNx6fDUAsAQd6bggjFXsPlzW7bXdBsNYtgVgv4I51QmpXmtShPip2OKvG/zc&#xA;8ieX2/MXykkaTQf4mu7hdWMc8lXKGGjKGLBD+8P2RT2xVkNz/wA4/wCi20LS+XNa1TSNUXeC6W4L&#xA;ryHTmoCMR8mGKpZ5Yv5fPXlnXvKnnmIza55UmZmmikaFnZElRJSYigYrRgf2SCDSuKpB+VP5U+T/&#xA;ADH5Ci8wa5c3cUoef6xKtz6USxwsfibkCFAUbmuKvVfyq8qXXljyu2nT3UV6klzLc2lxA7SI1vLQ&#xA;xHkwXfiO1R7nFXzX+aHmNtb84ajIkjPaQ3EqwcvDmRX6AAvyGa6MPVKXWR/see1WTimV88X5c3MX&#xA;k+C71yTTtd0xlniS1hYSSyXE4bgZn9NCo48fhY8TX5ZrcB1Iz5CIcWOUhzPIDy3/AGu/xcEcMNzd&#xA;d3fu9F8jahovkq/vdVtbg61JqSRx3lpbFOdtO7s/FqM3f4ACKlthuaZmdjTyZskoyjwCI2PeHsPa&#xA;TV5J4YCcDERlUT/OFc/x3si0jzRpehT6tbwWF3K2p30lsX4gKjioCnryk+Mk96dqCudFnxmUOY2i&#xA;8jilUx73l0uj+QNH0Gb9IeZP9GnmsJPrluI29G6Ed38DAMxpxqdt84yGo1OSEuHHuJcj1i+lavtP&#xA;IJxnkxxhw8dce1j0cr6pL+YWp6Pq2r2+q6VcrdwXVtF6twqPHzlQcWbjIFb4l4n+zJdl4smPGYTF&#xA;ESO3PY+5z/ZvUDJpyByjM17uf6WLZsnoH2H+U8XpflzoC8eNbVXof8slq/TWuZ2nHoHx+98c7dle&#xA;ty/1mWZc6l5J/wA5KJMvk7Srvd7W01WCS5hoKFfTlAYt2p9n/ZYq9Wtbq3u7WG6tpBLb3CLLDKvR&#xA;kcBlYexBxV5Jqmtfmnafmbp3lBfMNoYdThe8juvqKVjiQyEoU5btSL+bFK78m7iKH8wPzI0+WiXb&#xA;6o9yiH7TRGef4h7Dmv8AwWKHrruiIzuwVFBZmY0AA3JJOKvHvyFtrfVLTzpfGAHR9Y1OZIUNaPEw&#xA;Ysu/xU4TAVxVKvIPmqXyH5Y88+Xr5+Vz5Vlkm03n/uxLg+nDRT+wZSjH/XxVnH5H+W5NE/L+zluA&#xA;fr+rs2o3btuxM9DHU9f7sL9NcVYp5+0S41r8+dHsLfUrnSZX0MsL2ybhMvGa5JAPg3Q4qy38uvIu&#xA;teWfMvme5v76bVLbUxYfU9QupBJcSehHIsgk8OBcBfbFXl35k2fmm5/OXWG8r3Uttq9tpSXEXoEi&#xA;SVI0QvEpHdl3A7kU74qzf8jtM8q6np/+MI7i51LzNMPq+pXOoy+vNBIAOUcey8UYU4nrx28Riq7z&#xA;X/60F5J/5gb3/kxcYqkOuxv+VH5mx6/boV8m+Zn9PUoUBCQTE1LBRWnEkyKKfZ5KMVW+WVNzH+da&#xA;2/7wzG6EPDfkWiu+PGnWtcVZp+Ql7bXX5WaOsLAtbGeCdRX4ZBO7UNfFXDfTiqY/m9f2dj+WvmCS&#xA;6oUltHt41JpWWf8Adx08SGYH6MVb/KKyuLP8tPL0FwCsptFloaVCzMZE6U/ZcYqxn81//Jk/ln/z&#xA;HXX67bFXquKvE/I7LqX5j/mVrVnR9PSE2gmU1VpApU8TUgj9yTt4jxxSx38u/wAt9a8x/lRNPp/m&#xA;LULZp1u44dGSXhZSOCwCOvhIftYoe9+WLC40/wAtaTYXIC3NpZW8Eyg1AeKJUYAjruMVfEc0rTTP&#xA;K/2pGLN82NTmE8sTZtmCf4T1fy3ol1rOp2umXfl+V4vUuYjIzxc/Wi4BfiPFiRXoK+4rp+LNgzz8&#xA;OBnHJR2NUeRt3+nAzYY+rhMNj5/j9bN/y+1fy/5RudS81nVYbzRdSm9OKBF5SPA8nOGaI1+J1aoZ&#xA;abcW3qMuhq549RHGYGuHn+P1vomqyHtXDjhijuI3xdLGxB7vv3G26fWP5oeWYEv7G015tRvtYnZL&#xA;Oa4W4ENqrqw9RzOkfE0anBKjYfEASRtO0NcI4iYRsgdHVaf2Z1UDx5Y+mO9Agk+Qon+zv5PPdN0L&#xA;8uF1O98ga9qCTatqM0Vzo9wVAQGJXSCtSwWWT1XKq32loQfiXNBqdVqo4I54Roc5DrX6vudj2n23&#xA;DLnx3CJ4BvGW4uXMfID3JB+YOo2l35jkislC2OnxRWNqFFBwgXj0/wBauXdmYpQw3L6pEyPxeu7F&#xA;wHHpxfOXq+f7GOoju6oilnYgKoFSSdgABmwdoSALL7c8uaZ+ivL+maZtWytYbc07mOMKTt4kZscY&#xA;qIBfD9Zn8XNPJ/OkT8ymOTcdAa/oWm69o91pGpxetY3ienMlaHqCrA9mVgCD44q8x0vyL+cXk2M2&#xA;PlbW7DVtDiNbay1VXWSMMalVKDoPaQDwAxVHaB5A/MC4/MCx84+bdR095bCCS3htNPSXjwkRwByk&#xA;VKUMpPfFVfzv+VmrXvmeLzh5P1RdH8yKgjuRKC0FwqjiPUoHp8ICn4SCAOhFcVS6/wDKP53eZ7Vt&#xA;J1/WtN0vSJKxXr6akjTzx9/thaK42+0u3UeKr0by35c0ry5otro2lRelZWq8UBNWYk1Z3PdmY1OK&#xA;vN/zI/JW/wDNXne11qyuoLbTbiOCHXoXeRZZkhlDEoFRlYmNVA5MN1GKvWkRERURQqKAqqooABsA&#xA;AMVeP6p5G/Oi887W/m6K58v2+oWlqbG3RWvDH6JZ2qytExLfvT0NMVTHSvJv5qXnnvQPMHmu90ma&#xA;z0QXYSKxM6v/AKVA0RIV4lU/Fx/aG2Kpfa+Q/wA3U/MI+dJZPL/1uWFbWa3V730/RAUEqDHy50Xu&#xA;1MVRs/5b+dPL/nm/8w+Q7nTobDVkB1DS9RadYvW5EsyLArd/iU8hQswpTFUNrHkr84b/AM86d5sW&#xA;Ty8txpCTQ2UJe94NHMrofVHp1LcZD9lgK4qz7zR5Vg81eU59E1hUEt1CvOWIFliuAKiSLlv8L9K9&#xA;RseuKsR/Jb8stf8AJEOsJrNza3J1BoDCbZ5HoIRIDz9SOP8AnFKVxVLv+VV+efKesXt9+XWrWsOm&#xA;XzGWbRdQDGJW3IWNlV/kp+E02JOKq5/LLzx5t1K1ufzF1W2l0m0cTxaDpgdYWkp/u12Ctt0/aNK0&#xA;Irir1VEREVEUKigKqqKAAbAADFXlXnzyR+anmDzVpmrWE+iW9voE8s2keq116rCUp/vQBG6E/uhs&#xA;uKqtz5T/ADw1qJrLV/M2naVYSjjO+kxSNOy+AaRYmWvSqsMVTs+SNQ8teS10DyFFYpM7kXc2qmWk&#xA;iyRsskrNAvIyk8abcafRirEPKXkX88/KuiR6NpWoaB9Tid3X1frTvWRuTVPojvirMvyp8oa55W0C&#xA;8s9bnt7i/u7+e+eS1Z2j/fKneRIzXkp7Yq+QMwnlUw0PW7rSLwzwok0UqNFdWkyh4ZoX2aORDsVO&#xA;Y+p00csaO3UEcwe8OTptTLDKx8R3sp06z8j3Ecv6Du4NGjuCZLjy/qau9n6hADPBMp/dk0pyXi9N&#xA;q0zA8fU4vTkj4oH8UefxD0Wj7Uljlx6fL4UusTy+3b7/AHBPr3y15ftbTTrmN9K0OW5tBLcS3TTz&#xA;ziXkyM1tBLLIpQ8fgYgn3yiWvyiUo+HKW+1DavMn7X0Ds3tLUanDeQZMh/oVGPL+cAJfbyYnqmoe&#xA;T9Ogurfy9Z/XdRvq/pHzFfp6lzLybm3p+pyZeTbljv8Ary3Fi1GWQnmlQHKETt8e9ztD7OwE/Eyw&#xA;jHugN/8ATE3f3MXzZPVPTPyN8hXHmDzNFq1zF/uH0mRZndh8Mk6/FHGvjQ0Zvb55ZihxHyeZ9p+1&#xA;Rp8BxxP7zIK9w6n9A/Y+o82D5Y7FWPefNJ8y6t5bns/LeoDTNWZ42iu2ZkAVWBdSyK7Co9sVfMej&#xA;61+b2uebX8s2XmW8OpiSaKpu5Y4SbcMXoR2ohp8OKp1/ysb84Py38ww2PmiaS+t3Cyva3TrOJYiS&#xA;C0VwOTKRv+116jFXs/5i/mvpvlTylaazboLq71ZFbSLZ6qHDIH9SSm/BFdagbkkD3CrxfS2/5yC8&#xA;/RvrGn395DZMSIpIrn9HwNxNOMSo0fMClK7+5riqzSvzU/NH8v8AzGNM82NcXtupU3VlesJpDG3+&#xA;7ILirE7dPiKnFXo35xnzvcaLF5x8p+YTZeXobCOaWCOSSKSUSOWWRAqkVKyL1I6Yq8u8m/8AK7/O&#xA;FpeXOh6/ezLZMqSrJfvGxZwSAvJgO3jirK/yl/N7znF50i8o+bZGuhPK9oHnUC4t7lK0VmUfGCy8&#xA;Ty+daYqxHylrf52+a47+XRtcu5Y9MRZLtnuBGFVwxWnLrX02xVZ5O8xfnT5v1Caw0TXrqW5giM8i&#xA;yXAjHAMqVq3uwxVlP5Wa1+Zfm7T/ADVpEevzJq8UVr9RubmRwsLrcVl+JVZhyRCuwxVj3kPzD+bX&#xA;m3zOuiWfmieGZFeaR55X4FIiAwHFWJJr4Yq9x/OWx85yeWm1Lyzq36L/AETHcXl/R3RpYYoufFSq&#xA;tVhxNAaD3xV5l+RmrfmV5r8yNeXHmGWXSdHeNtRtLiRyZVnWUIqKFKmhj3qRiqY/mp+fWrQ61J5a&#xA;8lAG4ik9CfUQgmd568TFboQymh25EGp6eJVY7N5R/wCckGsX1WbUdRiVIzO0P6SKOFA5H90klK0/&#xA;Z69qYqzf/nG7zZ5k1+y1xda1CbUPqb2wt2nbmyiQScviPxGvAdTirL/zl83TeV/IN9e2sph1C5K2&#xA;djIvVZZq1YHsVjV2HuMVeFflj+b3m+HzzpUWvavcXel3kgtp4rh6oPXHBJNxtxcqa+FcVfUmow3M&#xA;+n3UNrL6N1LDIkE38kjKQrbeB3xV8recNb/N/wAq+Zo/L195pmmu5VidJYJpDHSZiq1LIjdt9sVf&#xA;RP5d6J5t0fQGtfNOprq2ptO8guVd3AiKqFTk6odiCenfFXxrmE8qzHyH+Wmq+avVvZJk0zQLSpvd&#xA;WuNo1C7sqVKhmA67gDuckI/JzdJoZ55ARHP8bM2Xz3+Vfkb/AEfyjpH6b1WHY6zd048wftIxHLt+&#xA;wqj3OROUD6R8/wAfqfRuy/YeZAlkIx/bL9Q/Gzz7zj5w1zztrceoX8Mf1tYhbQwWqMBwVncAAl2J&#xA;q575VOZO5e+7P7PxaLEYQJ4bsmR9w8u5U0n8s/P2rFfqeh3RRvsyTJ6CH35zcFwCJPIMc/bWkxfV&#xA;kj8N/ut6X5S/5xsumlS4803qxwihNjZnk7b9HlYAL/sQfmMuhpyeezzOv9so1WCO/wDOl+gfr+T3&#xA;LStJ03SbCHT9Nt0tbOAcYoYxQD+JJ7k7nMuMREUHhc+eeWZnM8Uj1ReSanYq7FXx95V81ab5V/N+&#xA;61zUlleztru/WRYFDSVk9WNaBmQdW8cVRf5j+cLv81fOGnWfl/TpQkSm3sopKGVy7cnkk48lRQAK&#xA;7mgFa4qu/P8AimsPMei6EX5w6No1paxsNgxXkGenblQfdir6n0XTLTS9HstNswBa2cEcMPEAAqig&#xA;A7ePXFXif/OVdhanT9Av6KLpZpoK/tNGyq/3KV/HFUTZTSzf84ss8teQtJUFf5UvmRf+FUYq8z/K&#xA;v83x5C07U7ZdL/SEt+6SRuZvSVCilfiHBy32vbFWWfk/5A8z+ZPOyfmDrcIttPe4lv4mFFM88hYr&#xA;6aAlhGrNWp60pvvir3u70rTLDR9RFjZwWgkt5PU9CNI+XFGpy4gVpXFXzx/zi1/ymuqf9s1v+T8W&#xA;KvpK00rTLKSSSzs4LaSX+9eGNIy3f4ioFevfFXzD/wA46/8Ak1Jv+YW6/wCJLir6I/MP/lAPM3/b&#xA;Jvv+oZ8VeGf846X02n+XPP1/DtNaWcE8Z/yoortx+IxVLf8AnGjTLW/8/wB1eXaiWaxspJ7fnuRK&#xA;8iRmTfuFdh9OKvdPzE/NDy95GWwXWba6uF1MTCEWqROAIeHPn6kkXX1RSlcVYt5G/Of8s7/XbfQ/&#xA;L+h3Om3OpuE5Ja2sEZZFZgZDDKSaCtNjirCf+cldcn1bzZpPlOx/evaqrPEvU3V2QsaH3CBSP9bF&#xA;Uu/Pn8vIvLFn5ZvrBQsMdomm3csY4g3FuvJZSf5pQWP+xxV79+XXmZfM3krSdYLcp54Al10qJ4v3&#xA;cuw6VdSR7Yq8B/Pz/wAnDY/8YbL/AJONir6hxV8WeTPLkGs6jJJqExtdD06P61q94OqQqacE8ZJG&#xA;+BB4/LML3uk7N0E9VmGOAsl6xe+V9b812MEms3cPkj8v7UKNK0yZljdoxururMg5t1q7d9gdyRwy&#xA;nudg+m4tfouyYcOMDLm6y5RHkD+rn1KO8saZ/wA4922q2mkWbjW9VuZBFHJcLNOpc9K/AlvQ+wyy&#xA;OOHvdJqPa7U5pcIycN9I7fbz+17JY6Xplgnp2NpDaJSnCCNIxTwooGZEYRHIU63JnnkNzkZe82ic&#xA;k1OxV2KuxV2KoHWtc0jQ9Pk1HVrpLOyiIDzyGigsaAbVNScVfInlO48nXP5pz3HmR4pPLk1zeySP&#xA;Lz9Ng4kMR+D4t2K0xV9XeVvL3lDTLCK48t2FrbWt3EkkdxbIoMsTgMjGSnJwQQRU4q8V/wCcofKN&#xA;211p3mq3iL2wiFjfMo/u2V2eJ2p2bmy19gO4xVNfIX/ORflaLy1Z2XmT17fU7KJYHmSMypMIxxVw&#xA;VNQxA+IEdcVee/mX551H81PNWnaT5fspTaQFotPt2A9WSSWnqSyUJCqFQdT8IBJO5xV6n+Ys3lry&#xA;h+UL+Spb+JNT/R8aW9ua85m9QGSRRTYM4c74q8g8geVtL81+Ttc0eOWMeaYJFvtFtztJKsUbevEu&#xA;3R1p/sgO2Ksm/IP82bLy8tx5b8x3P1bS2LTWNzJyKwy1/eRNQGiv9oeDV/mxV7v5x81+XdF0KSbV&#xA;L+K1jvYZEtGcn94xTYJQGv2hir5x/wCcd/MmhaD5uvp9YvY7KG4sjBDJLUK0jTRkLUA9lPXFX1fi&#xA;r5E8ka3H+XH5r3J1yJ1gt5Lizu2RauqufglVajkCQp/1Ttir1f8AMr88/Idx5L1TT9FvjqOoalbS&#xA;WkcaQzIqLOpR3dpVjAojGgFTXtiqB/5xq8qTf4R129voytlrzLbRA1BeKFZEd19i0zKD4g4q8u0i&#xA;/wBf/KL8x5PrVuZRbl4J490W6tJDs8bHseIdfcUPfFXrPmr88/yu13ytf2zLK97PaTx2kNxa8mjm&#xA;kjKoeXxop5U3DYqwr/nHLVdB0e78watrU0NtbWsFvxuphXgXdl+E0LVbptirErCKy/MP8xr2bWdW&#xA;TRo9UmkliuJV9TcsFggUErvxIUVPQYqy/wA9/kHovlPy/canc+aV9dVb6nbTW4j9eVRy9JWEj/EQ&#xA;NtsVTD/nHD8w9J0m31Hy9rF4lpFLKtzpzS7KXZeEqcu2yIQPnirFvzm8z6Dq/wCZltqul3iXmnxR&#xA;WweeKpFY3JcbgHYYq9A88/8AOS9pbJZf4MWG9dzJ9e+vwTKEA4+nw4vF1q1euKsVGq2fkXyHo0MU&#xA;KXHmTWf9y7RzLyihjPwWksi1pIVTk0at8IZixGy1w5RGzr9PrZaTERD68g590f2/redavrWraxeP&#xA;e6pdy3t0/WWZix+Qr0HsNsSXUTySkbJtPfyr/wDJi+X/APmMjwx5hu0n97F9kZlvQuxV2KuxV2Ku&#xA;xVLPMflrRPMmlvpWtW31qwkZXeHnJHVkNVPKNkbY++KsS/5UF+Uv/Vi/6e7z/qtirONO0+007T7X&#xA;T7OP0rOziS3toqs3GOJQiLyYljRR1JriqpcW1vcwSW9zEk9vKpSWGRQ6Mp2KsrVBBxV59e/84/8A&#xA;5XXVwZhpb25b7UcE8ypXxCljT6NsVZN5W8h+UfKqOuhabFaPIOMs/wAUkzDY0aWQs9KitK0xVD+a&#xA;fy08k+ar2K+17Tfrl1DEIYpPWnipGGLcaRSRjqx7Yqo+XPyn8geW9UTVNF0r6rfxqyJN69zJRXFG&#xA;HGSR13HtiqE1L8k/yw1LULjULzRFe7upGmndbi6jDO5qzcI5VUVPgMVTjzL5B8peZrO0s9bsPrdt&#xA;YV+qR+rNHwqoXrE6E7KOuKpAn5C/lOjq66FRlIIP1q86j/ntirP8VY15s/LfyX5rdZdb01Li5ReC&#xA;XSM8UwHYc4ypYDsGqMVSCw/IH8rrO4Wf9FtcMv2UnnldK+JXkA301GKvQYIILeFIII1ihiUJHEgC&#xA;qqgUCqo2AGKpZ5j8peW/MtqLXXNPivokqYzICHSvXhIpV0rTfiRirCx/zjx+Vol5/o+Yry5el9Zm&#xA;40rXj9rlT6a4qniflN+XaaNPo0eixR6fcsj3CI8qySGI8k5TBxKQp6DlTFUFafkZ+VlpdQ3VvonC&#xA;e3dZYX+tXZo6EMpoZiDQjvirIPNXkvyz5rtYbXX7P67Bbv6sKepLFxcjjWsTxk7HvirHrb8i/wAq&#xA;7adJ4dE4SxnkjfWrw0PyMxGKqf8AyoL8pf8Aqxf9Pd5/1WxV3/Kgvyl/6sX/AE93n/VbFXk/58+Q&#xA;9asNeGs21u82hNbQQRzRgsIPq8axcJafZrxqD038cxskaLp9fhlxcQ5PJcrdayr8q/8AyYvl/wD5&#xA;jI8lHmHJ0n97F9kZlvQuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuIBFDuD1GKsX1b8r/y/1VzJe6FamQ/aeFTAx9y0JjJPucgYAtM9PjlzAS3TPyV8&#xA;gaXrFrq2nWk1vdWcomhAnkdAw6AiQvUfTgGMMIaTHE2BuzrLHJdirsVdirsVdiqWeY/MuieW9LfV&#xA;daufqthGyo83CSSjOaKOMau259sVYl/yv38pf+r7/wBOl5/1RxV3/K/fyl/6vv8A06Xn/VHFXf8A&#xA;K/fyl/6vv/Tpef8AVHFXf8r9/KX/AKvv/Tpef9UcVd/yv38pf+r7/wBOl5/1RxV3/K/fyl/6vv8A&#xA;06Xn/VHFXf8AK/fyl/6vv/Tpef8AVHFXf8r9/KX/AKvv/Tpef9UcVd/yv38pf+r7/wBOl5/1RxV3&#xA;/K/fyl/6vv8A06Xn/VHFXf8AK/fyl/6vv/Tpef8AVHFXf8r9/KX/AKvv/Tpef9UcVd/yv38pf+r7&#xA;/wBOl5/1RxV3/K/fyl/6vv8A06Xn/VHFXf8AK/fyl/6vv/Tpef8AVHFXf8r9/KX/AKvv/Tpef9Uc&#xA;Vd/yv38pf+r7/wBOl5/1RxV3/K/fyl/6vv8A06Xn/VHFXf8AK/fyl/6vv/Tpef8AVHFXf8r9/KX/&#xA;AKvv/Tpef9UcVd/yv38pf+r7/wBOl5/1RxV3/K/fyl/6vv8A06Xn/VHFXoGKuxV2KuxV2KuxV2Ku&#xA;xV2KqN3Z2l5CYLuCO4gYgtFKiuhI3FVYEYqgf8K+V/8Aqz2P/SNF/wA04q7/AAr5X/6s9j/0jRf8&#xA;04q7/Cvlf/qz2P8A0jRf804q7/Cvlf8A6s9j/wBI0X/NOKu/wr5X/wCrPY/9I0X/ADTirv8ACvlf&#xA;/qz2P/SNF/zTirv8K+V/+rPY/wDSNF/zTirv8K+V/wDqz2P/AEjRf804q7/Cvlf/AKs9j/0jRf8A&#xA;NOKu/wAK+V/+rPY/9I0X/NOKu/wr5X/6s9j/ANI0X/NOKu/wr5X/AOrPY/8ASNF/zTirv8K+V/8A&#xA;qz2P/SNF/wA04q7/AAr5X/6s9j/0jRf804q7/Cvlf/qz2P8A0jRf804q7/Cvlf8A6s9j/wBI0X/N&#xA;OKu/wr5X/wCrPY/9I0X/ADTirv8ACvlf/qz2P/SNF/zTirv8K+V/+rPY/wDSNF/zTirv8K+V/wDq&#xA;z2P/AEjRf804q7/Cvlf/AKs9j/0jRf8ANOKu/wAK+V/+rPY/9I0X/NOKppirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdiqD1rVItJ0a/1SZS8Nhby3UiLsSsKGQgV9lxVhWlfnLomofl5qHnP6q8MOnSNDNYl1Mhlq&#xA;gjUNQD4/VXemKrbf85NOn0rynqKafIV81XpsI4/UWsDif0Cz7fFvvtiqp5L/ADh0XzP5p1Hy2LZ7&#xA;G+smkEBkdWE4hcpJxpShFOVN9q+GKqGj/nPYanb+WZk0yWMeZbueziUyKfRa3ZVLNt8QPPFWtE/O&#xA;GfX75/0H5Y1C90YPLEmriixs8SFvs0NAx2FT3FfDFUFZfnZq93r76EvkvUBqUISS6t/UQvFE5Wkj&#xA;rx+z8YOKpZoX5hedfM/nq2u7Cz1BfKtveGzlghihMAcL6cjzz/bZV58+NBTFKM07/nIXT5zDc3ug&#xA;Xtnokt19ROrgrLCk/Xi1Avbc71p0BxQn6fnBoEQ81S6jDJZ23la5W0mkqJGuJHZ0URIOO7GPoT86&#xA;AHFUt0788IG1TTrXXPL2oaFZ6uwTTdQugPSkLEBeWy8QeQ6VpUHpvirI/wAwPPo8oW+muumy6pca&#xA;pdLZ21tAwRzI4+ECoNanYDFUD5T/ADWs9a8wN5c1PSrzQNeMZmhs71RSWMAkmNhSuwJ6djQ4q15c&#xA;/NvRNc896j5RggeOex9VYrtmUxzvbsFkVABXbcjxAxVM/Pfnyw8o2dpJLazX99qM62unafbCsk0r&#xA;U2qdh1A8akbYqssvPEw8oaj5j1vSLjRBpwlZ7K6I9R1jQOpU0H2y3Ee+KpPo/wCcmlap+X+p+b4b&#xA;KRRpTmO508yL6lRw4kNTowk608cVS3zD5z1jRbLR/P8Ac6hNP5f1QWwtfLMUUUfp/XbXnWW53aTg&#xA;wqPhGKq2pfnVcW2t61ptl5WvtTi0GX09QurVlcIu9HKBagEIx+jFVTVfzx0aLStC1DRdOuNY/T8s&#xA;tvb2qMsUyTRFAYnU8/jJkHQ4qzPyrreoazpQvb/SZ9GuPUZPqVyQZOK0o+wGxriqb4q7FXYq7FXY&#xA;q7FXYq7FXYq7FXYqwf8AO28e1/K/XWjqZJoo7dFXcn1pkjYAf6rHFXidt5J1i086ab5DET/oPXH0&#xA;zVLsU2MdvbsbgV+JRVvUHzVcUrfLiXMVv5M0qRH9TSfOLQkFW2T1Ldga0p9rliq218sawlrr/nbR&#xA;FdNa8ta/PNxCmslqTV9v2gnUj+UtiqP8lwTjTvysrGw46xflqg7D1IuuKq2h6lpll5+0mD8rL7UT&#xA;b317/ub0KeNzaww81V3NQQFCcvi3Zafa7YoZ/wCXo5B/zkP5pcqQh0qABqGhPG274qwP8pb/AEC0&#xA;14W19ret2Wqy6xJ9X0i1eRdOmDsqoZ0CFTyaob4ugGKWLeVrC4tE0jU/MS3F15HOtTR3VihcRw3S&#xA;qhSeRAPiUq3zorD5qpxr+iapqkP5h3OnWzXa2XmK31CSJBy9S3T62rFQPtKPUDGnbfFWTed/O+nf&#xA;mmmheWPK1pcy3Zvoby+uJYyiWkcasjc236eoakbbUFScUMm/Pe/t9NfyZqd1yFnYa7b3Ny6qWKxx&#xA;EOxoPYYqxHzJ5xPmDznH590K0ul0TyrpswGoSxmNZ7qZXSCJAftKZJ0DD+Xl7VUsdtNG84eTrDyl&#xA;5uudGFvBYXXr3l9FP6lxcxX5DMssQBKUiqn074q9e/Of/lX9x5f0/wDxXPcW9vLPy07ULJS0kUnA&#xA;nnsG+Aildj2xQ8kk1/z1rvktPKQkutWg1zVhBol9dgxzz2NsebmRm5ELz9M8iTT4hU0xSr3ml+at&#xA;J1TzX5am0YWB816Z9bsdNtZPrEYmtDzojgfaZI5fh61oN9sVRmtea9K84/l/5O8kaEtxceYbaWwi&#xA;vbX0HX0BawGGR3cgJxqa1B6fapihM9C/MPRPJn5i/mF+k47iW61C8hNha28Zd5WiM1VB6D+8Xrir&#xA;Db/y3qHl/wAt+TZNeF3pK3esXmoTG15Ld2kDraqClAxSQCIsopUfPFX0J+Wl7pF55Xjk0rUtQ1a0&#xA;WaRPrmrMz3RatSrMyoSorttirKsVdir/AP/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:A172D08C0920681197A5EB4135DC37EA</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:A172D08C0920681197A5EB4135DC37EA</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:6C0B404220121168A11E9206F0BD5E26</stRef:instanceID>
            <stRef:documentID>xmp.did:6C0B404220121168A11E9206F0BD5E26</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D27F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:15+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F1174072068118D4ED246B3ADB1C6</stEvt:instanceID>
                  <stEvt:when>2008-05-15T16:23:06-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F1174072068118D4ED246B3ADB1C6</stEvt:instanceID>
                  <stEvt:when>2008-05-15T17:10:45-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EF7F117407206811A46CA4519D24356B</stEvt:instanceID>
                  <stEvt:when>2008-05-15T22:53:33-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F07F117407206811A46CA4519D24356B</stEvt:instanceID>
                  <stEvt:when>2008-05-15T23:07:07-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T10:35:43-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T10:40:59-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:26:55-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:29:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:29:20-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:30:54-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:31:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B233668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T12:23:46-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B333668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T13:27:54-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B433668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T13:46:13-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:47:57-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:51:06-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:52:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T13:28:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FF7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T16:23:53-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:07C3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T16:45:26-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F1174072068119098B097FDA39BEF</stEvt:instanceID>
                  <stEvt:when>2008-06-02T13:25:25-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T14:58:36-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811ACAFB8DA80854E76</stEvt:instanceID>
                  <stEvt:when>2008-06-11T14:31:27-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0180117407206811834383CD3A8D2303</stEvt:instanceID>
                  <stEvt:when>2008-06-11T22:37:35-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811818C85DF6A1A75C3</stEvt:instanceID>
                  <stEvt:when>2008-06-27T14:40:42-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:74117FD920071168ABEA941BA8C9B3E1</stEvt:instanceID>
                  <stEvt:when>2009-09-21T13:48:43+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:74117FCF2007116898DBAD415CFB600B</stEvt:instanceID>
                  <stEvt:when>2009-09-30T11:35:09+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:74117FD02007116898DBAD415CFB600B</stEvt:instanceID>
                  <stEvt:when>2009-09-30T11:37:03+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:74117FBB200711689F7781B2C8D92B77</stEvt:instanceID>
                  <stEvt:when>2009-09-30T14:47:52+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:74117FD9200711688012E01008C60883</stEvt:instanceID>
                  <stEvt:when>2011-09-21T11:25:30+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:74117FDA200711688012E01008C60883</stEvt:instanceID>
                  <stEvt:when>2011-09-21T11:33:17+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:74117FDD200711688012E01008C60883</stEvt:instanceID>
                  <stEvt:when>2011-09-21T11:46:55+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:74117FE1200711688012E01008C60883</stEvt:instanceID>
                  <stEvt:when>2011-09-21T12:10:59+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0BB0187A2012116893E6872A62A608B6</stEvt:instanceID>
                  <stEvt:when>2011-09-22T12:56:01+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8821AAAC2016116893E6872A62A608B6</stEvt:instanceID>
                  <stEvt:when>2011-09-22T12:59:05+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:804E211B201711689A82C3DE9D018903</stEvt:instanceID>
                  <stEvt:when>2011-09-26T12:14:26+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:804E211E201711689A82C3DE9D018903</stEvt:instanceID>
                  <stEvt:when>2011-09-26T12:16:21+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:DE2FC7CD203C11689A82E445A5151B7E</stEvt:instanceID>
                  <stEvt:when>2011-09-28T16:43:57+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:74117FCC20071168AD209BB0CBF4E3A0</stEvt:instanceID>
                  <stEvt:when>2011-09-30T11:05:51+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:462FF6D120081168AD209BB0CBF4E3A0</stEvt:instanceID>
                  <stEvt:when>2011-09-30T11:12:23+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6C0B404220121168A11E9206F0BD5E26</stEvt:instanceID>
                  <stEvt:when>2011-11-09T12:33:39Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:A172D08C0920681197A5EB4135DC37EA</stEvt:instanceID>
                  <stEvt:when>2012-04-12T16:35:43+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>29.699996</stDim:w>
            <stDim:h>20.999993</stDim:h>
            <stDim:unit>Centimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 1</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=30 B=30</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>3.430200</xmpG:cyan>
                           <xmpG:magenta>99.093597</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.314300</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=170 B=0</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.003100</xmpG:cyan>
                           <xmpG:magenta>38.058998</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.003100</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=245 B=0</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>4.416000</xmpG:cyan>
                           <xmpG:magenta>0.003100</xmpG:magenta>
                           <xmpG:yellow>92.922905</xmpG:yellow>
                           <xmpG:black>0.003100</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=130 G=180 B=70</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>55.156796</xmpG:cyan>
                           <xmpG:magenta>9.378200</xmpG:magenta>
                           <xmpG:yellow>97.454796</xmpG:yellow>
                           <xmpG:black>0.100700</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=100 B=50</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>90.411201</xmpG:cyan>
                           <xmpG:magenta>34.634899</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>28.751001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=70 B=130</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>80.828598</xmpG:magenta>
                           <xmpG:yellow>22.665800</xmpG:yellow>
                           <xmpG:black>6.698700</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>75.020996</xmpG:cyan>
                           <xmpG:magenta>67.968300</xmpG:magenta>
                           <xmpG:yellow>67.022202</xmpG:yellow>
                           <xmpG:black>90.164001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=60 G=60 B=60</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>68.224594</xmpG:cyan>
                           <xmpG:magenta>61.522800</xmpG:magenta>
                           <xmpG:yellow>60.503502</xmpG:yellow>
                           <xmpG:black>50.334900</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255 1</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.003099</xmpG:cyan>
                           <xmpG:magenta>0.003099</xmpG:magenta>
                           <xmpG:yellow>0.003099</xmpG:yellow>
                           <xmpG:black>0.003099</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -595.275 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 595.275 li
841.89 595.275 li
841.89 0 li
cp
clp
[1 0 0 1 0 0 ]ct
146.311 137.579 mo
101.579 151.993 78.8857 190.007 78.8857 248.644 cv
78.8857 337.574 li
78.8857 337.574 86.3652 280.41 146.311 263.929 cv
146.311 137.579 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.904112 .346349 1 .28751 cmyk
f
151.294 154.375 mo
151.294 154.375 185.342 141.475 233.792 138.734 cv
233.792 138.734 233.641 179.212 232.346 212.09 cv
228.256 315.986 135.42 262.606 89.9312 317.858 cv
99.0601 293.942 130.105 276.926 151.294 272.741 cv
151.294 154.375 li
cp
.034302 .990936 1 .003143 cmyk
f
138.738 302.727 mo
138.738 302.727 89.394 306.733 85.1812 334.874 cv
81.8594 356.931 138.738 357.509 138.738 357.509 cv
138.738 302.727 li
cp
.904112 .346349 1 .28751 cmyk
f
80.9956 219.91 mo
91.2119 196.05 108.518 171.64 146.311 156.358 cv
146.311 137.579 li
109.372 149.488 87.5078 177.519 80.9956 219.91 cv
cp
.551568 .093782 .974548 .001007 cmyk
f
147.495 263.255 mo
147.495 263.626 li
147.495 263.888 li
147.495 263.956 147.466 264.026 147.398 264.026 cv
146.421 264.026 li
146.366 264.026 146.311 263.956 146.311 263.888 cv
146.311 263.2 li
146.311 262.071 li
146.311 259.524 li
146.311 251.809 li
146.71 251.838 147.109 251.865 147.495 251.893 cv
147.495 258.436 li
147.495 259.58 li
147.495 262.125 li
147.495 263.255 li
cp
145.853 263.171 mo
145.853 263.171 li
131.754 262.275 119.45 254.815 111.932 243.811 cv
111.877 243.729 111.795 243.619 111.74 243.522 cv
111.74 243.522 111.74 243.522 111.74 243.508 cv
112.097 243.343 112.456 243.206 112.828 243.081 cv
120.097 253.795 132.026 261.065 145.69 262.044 cv
145.853 263.171 li
cp
109.478 240.479 mo
109.262 240.466 109.134 240.37 109.097 240.301 cv
109.042 240.19 108.573 239.363 108.573 239.363 cv
108.556 239.351 108.556 239.322 108.556 239.309 cv
108.573 239.088 108.697 238.868 108.876 238.648 cv
106.26 233.444 104.635 227.647 104.25 221.548 cv
104.635 221.355 105.007 221.204 105.361 221.094 cv
105.709 227.083 107.265 232.756 109.767 237.891 cv
110.359 237.492 111.134 237.079 112.015 236.693 cv
109.605 231.792 108.146 226.34 107.885 220.612 cv
108.367 220.571 108.752 220.598 109.027 220.626 cv
109.289 226.202 110.734 231.488 113.075 236.252 cv
114.534 235.661 116.184 235.11 117.811 234.655 cv
119.34 234.215 120.909 233.802 122.52 233.444 cv
122.654 233.83 122.808 234.215 122.974 234.587 cv
121.294 234.958 119.67 235.372 118.1 235.839 cv
118.004 235.839 117.921 235.868 117.838 235.895 cv
117.811 235.895 117.811 235.895 117.783 235.909 cv
117.698 235.95 117.632 235.963 117.535 235.991 cv
117.522 235.991 117.508 235.991 117.508 236.005 cv
117.425 236.018 117.343 236.045 117.26 236.074 cv
117.26 236.074 117.248 236.087 117.232 236.087 cv
117.15 236.101 117.063 236.128 116.972 236.143 cv
116.958 236.17 116.944 236.17 116.93 236.17 cv
116.751 236.225 116.572 236.281 116.407 236.349 cv
116.393 236.349 116.38 236.349 116.365 236.349 cv
116.283 236.391 116.184 236.405 116.104 236.446 cv
116.09 236.446 116.09 236.446 116.09 236.446 cv
116.008 236.473 115.911 236.5 115.828 236.542 cv
115.815 236.542 li
115.718 236.583 115.636 236.597 115.539 236.638 cv
115.539 236.638 li
115.343 236.707 115.167 236.763 114.989 236.831 cv
114.975 236.831 li
114.52 237.01 114.066 237.161 113.652 237.354 cv
113.652 237.354 li
113.652 237.354 li
113.268 237.52 112.924 237.657 112.58 237.822 cv
112.58 237.822 li
112.58 237.822 li
112.538 237.836 112.483 237.863 112.428 237.891 cv
112.411 237.891 li
112.369 237.905 112.318 237.933 112.263 237.96 cv
112.263 237.96 li
112.208 237.987 112.153 238.015 112.097 238.043 cv
112.097 238.043 li
111.837 238.167 111.588 238.291 111.354 238.415 cv
111.354 238.415 li
111.312 238.442 111.271 238.469 111.23 238.496 cv
111.217 238.496 111.217 238.496 111.217 238.496 cv
111.161 238.51 111.134 238.537 111.092 238.565 cv
111.079 238.565 li
111.037 238.593 110.996 238.62 110.955 238.634 cv
110.955 238.634 li
110.734 238.772 110.542 238.882 110.359 239.006 cv
110.359 239.006 li
110.359 239.006 li
109.95 239.295 109.634 239.57 109.455 239.833 cv
109.455 239.86 109.436 239.873 109.423 239.888 cv
109.423 239.901 109.413 239.915 109.413 239.929 cv
109.399 239.929 li
109.399 239.929 li
109.345 240.025 109.248 240.19 109.262 240.272 cv
109.274 240.37 109.33 240.425 109.478 240.479 cv
cp
111.409 243.274 mo
111.327 243.356 111.161 243.646 111.53 243.88 cv
111.34 243.825 111.12 243.715 111.01 243.536 cv
110.896 243.343 110.514 242.737 110.514 242.737 cv
110.514 242.723 110.514 242.696 110.514 242.668 cv
110.542 242.503 110.624 242.338 110.775 242.173 cv
110.789 242.158 110.789 242.131 110.804 242.131 cv
110.804 242.117 110.817 242.117 110.817 242.117 cv
111.023 241.883 111.327 241.622 111.712 241.36 cv
111.74 241.347 111.76 241.32 111.808 241.292 cv
111.818 241.292 111.818 241.292 111.818 241.292 cv
111.863 241.264 111.89 241.236 111.919 241.236 cv
111.919 241.236 111.919 241.223 111.932 241.21 cv
112.002 241.168 112.081 241.127 112.153 241.071 cv
112.167 241.071 li
112.208 241.058 112.235 241.03 112.277 241.003 cv
112.291 240.989 li
112.332 240.961 112.359 240.934 112.4 240.934 cv
112.411 240.92 li
112.497 240.865 112.58 240.81 112.675 240.783 cv
112.689 240.769 112.689 240.769 112.689 240.769 cv
112.73 240.741 112.772 240.728 112.813 240.7 cv
112.828 240.686 112.828 240.686 112.828 240.686 cv
113.002 240.576 113.212 240.466 113.433 240.37 cv
113.433 240.37 li
113.598 240.301 113.763 240.218 113.928 240.121 cv
113.928 240.121 li
114.259 239.983 114.617 239.833 114.999 239.681 cv
115.126 239.625 115.264 239.57 115.415 239.502 cv
115.415 239.502 li
115.485 239.488 115.553 239.446 115.622 239.433 cv
115.622 239.419 115.636 239.419 115.636 239.419 cv
115.787 239.363 115.925 239.309 116.077 239.254 cv
116.09 239.254 li
116.159 239.226 116.228 239.198 116.297 239.185 cv
116.311 239.171 116.311 239.171 116.338 239.171 cv
116.473 239.116 116.627 239.061 116.774 239.006 cv
116.774 239.006 116.792 239.006 116.816 239.006 cv
116.875 238.979 116.944 238.95 117.012 238.938 cv
117.027 238.923 117.047 238.923 117.063 238.923 cv
117.219 238.868 117.367 238.813 117.522 238.772 cv
117.549 238.758 117.563 238.758 117.577 238.744 cv
117.646 238.731 117.698 238.69 117.77 238.69 cv
117.783 238.69 117.811 238.675 117.824 238.662 cv
117.99 238.634 118.142 238.565 118.307 238.524 cv
118.334 238.51 118.361 238.51 118.375 238.51 cv
118.444 238.496 118.5 238.469 118.555 238.442 cv
118.579 238.442 118.609 238.442 118.637 238.442 cv
118.72 238.4 118.803 238.386 118.885 238.359 cv
120.661 237.851 122.392 237.423 124.144 237.038 cv
124.351 237.423 124.557 237.809 124.778 238.18 cv
122.836 238.565 120.978 239.033 119.171 239.558 cv
116.38 240.313 112.369 241.938 111.409 243.274 cv
cp
104.209 220.942 mo
104.209 220.942 li
104.126 221.039 104.057 221.107 103.988 221.204 cv
103.905 221.328 103.63 221.672 103.864 221.92 cv
103.767 221.852 103.548 221.741 103.548 221.548 cv
103.548 220.337 li
103.548 220.337 103.548 220.323 103.558 220.31 cv
103.63 220.075 103.795 219.842 104.03 219.607 cv
104.057 219.58 104.084 219.567 104.126 219.511 cv
104.126 219.511 li
104.415 219.249 104.829 218.96 105.31 218.685 cv
105.32 218.67 105.337 218.67 105.352 218.657 cv
105.378 218.629 105.419 218.617 105.461 218.588 cv
105.475 218.575 105.489 218.575 105.502 218.561 cv
105.544 218.547 105.572 218.534 105.609 218.505 cv
105.609 218.505 105.64 218.492 105.654 218.478 cv
105.682 218.464 105.723 218.437 105.764 218.437 cv
105.779 218.423 105.792 218.41 105.806 218.395 cv
105.847 218.382 105.888 218.354 105.929 218.34 cv
105.929 218.327 105.953 218.313 105.971 218.313 cv
106.012 218.285 106.054 218.272 106.095 218.244 cv
106.109 218.244 106.122 218.244 106.136 218.244 cv
106.242 218.189 106.356 218.134 106.473 218.065 cv
106.49 218.051 106.521 218.051 106.521 218.038 cv
106.577 218.01 106.618 217.997 106.659 217.982 cv
106.687 217.969 106.7 217.969 106.715 217.955 cv
106.756 217.941 106.793 217.914 106.835 217.886 cv
106.865 217.886 106.893 217.886 106.893 217.873 cv
106.949 217.844 106.99 217.832 107.031 217.817 cv
107.058 217.803 107.072 217.79 107.083 217.79 cv
107.141 217.762 107.196 217.734 107.25 217.72 cv
107.265 217.708 107.279 217.693 107.279 217.693 cv
107.416 217.637 107.554 217.583 107.692 217.528 cv
107.692 217.514 107.705 217.514 107.705 217.514 cv
108.132 217.349 108.573 217.17 109.042 217.005 cv
109.083 216.978 109.134 216.964 109.192 216.937 cv
109.22 216.922 109.262 216.922 109.289 216.909 cv
109.345 216.881 109.399 216.867 109.455 216.84 cv
109.495 216.827 109.51 216.827 109.55 216.827 cv
109.62 216.785 109.702 216.757 109.799 216.73 cv
109.799 216.73 li
109.895 216.703 109.977 216.662 110.074 216.633 cv
110.102 216.633 110.115 216.62 110.142 216.62 cv
110.211 216.579 110.28 216.564 110.349 216.538 cv
110.376 216.524 110.417 216.509 110.444 216.497 cv
110.5 216.482 110.555 216.455 110.624 216.44 cv
110.648 216.427 110.692 216.414 110.734 216.399 cv
110.789 216.385 110.845 216.373 110.896 216.344 cv
110.94 216.332 110.982 216.332 111.01 216.317 cv
111.064 216.303 111.134 216.275 111.186 216.262 cv
111.23 216.248 111.271 216.234 111.299 216.22 cv
111.354 216.207 111.409 216.193 111.475 216.166 cv
111.505 216.152 111.56 216.138 111.602 216.138 cv
111.657 216.11 111.712 216.083 111.76 216.083 cv
111.818 216.069 111.85 216.042 111.89 216.042 cv
111.96 216.027 112.015 216.014 112.066 216 cv
112.112 215.973 112.153 215.973 112.194 215.959 cv
112.25 215.945 112.304 215.917 112.359 215.89 cv
112.411 215.89 112.456 215.877 112.497 215.862 cv
112.552 215.849 112.621 215.835 112.675 215.807 cv
112.704 215.794 112.758 215.794 112.8 215.766 cv
112.854 215.752 112.924 215.739 112.979 215.725 cv
113.02 215.711 113.075 215.711 113.103 215.697 cv
113.171 215.67 113.237 215.642 113.292 215.642 cv
113.336 215.629 113.392 215.615 113.419 215.6 cv
113.487 215.587 113.57 215.574 113.64 215.546 cv
113.667 215.532 113.708 215.518 113.735 215.518 cv
113.829 215.491 113.915 215.463 113.983 215.45 cv
114.01 215.435 114.039 215.435 114.052 215.435 cv
114.163 215.394 114.272 215.367 114.382 215.34 cv
114.396 215.34 114.403 215.34 114.421 215.34 cv
114.52 215.312 114.617 215.284 114.71 215.27 cv
114.741 215.257 114.782 215.243 114.824 215.229 cv
114.878 215.215 114.96 215.188 115.03 215.175 cv
115.085 215.16 115.113 215.146 115.154 215.146 cv
115.237 215.133 115.301 215.119 115.374 215.078 cv
115.415 215.078 115.457 215.078 115.498 215.05 cv
115.567 215.037 115.636 215.022 115.705 215.009 cv
115.76 214.995 115.802 214.981 115.842 214.968 cv
115.911 214.954 115.967 214.939 116.035 214.927 cv
116.09 214.912 116.146 214.899 116.184 214.899 cv
116.255 214.885 116.324 214.857 116.38 214.844 cv
116.435 214.83 116.486 214.83 116.527 214.816 cv
116.585 214.802 116.655 214.774 116.725 214.774 cv
116.774 214.762 116.834 214.747 116.875 214.733 cv
116.944 214.705 117.012 214.705 117.082 214.692 cv
117.137 214.679 117.192 214.665 117.232 214.65 cv
117.302 214.637 117.367 214.624 117.439 214.609 cv
117.48 214.582 117.535 214.582 117.59 214.582 cv
117.656 214.555 117.714 214.555 117.783 214.527 cv
117.838 214.527 117.879 214.527 117.927 214.499 cv
118.004 214.485 118.072 214.472 118.142 214.458 cv
118.196 214.444 118.249 214.43 118.29 214.417 cv
118.375 214.402 118.444 214.402 118.513 214.375 cv
118.555 214.375 118.609 214.348 118.665 214.348 cv
118.733 214.334 118.809 214.32 118.898 214.292 cv
118.94 214.292 118.981 214.279 119.022 214.279 cv
119.147 214.251 119.257 214.224 119.381 214.21 cv
119.863 214.1 120.373 214.017 120.868 213.921 cv
120.868 213.921 li
120.868 213.921 li
120.868 215.16 li
120.427 215.257 119.987 215.325 119.56 215.408 cv
115.911 216.138 112.015 217.17 108.973 218.327 cv
108.973 218.327 li
108.587 218.478 108.201 218.629 107.843 218.782 cv
107.843 218.782 li
106.865 219.195 105.999 219.621 105.337 220.063 cv
105.337 220.063 li
104.965 220.295 104.649 220.53 104.387 220.777 cv
104.387 220.777 li
104.333 220.832 104.264 220.887 104.209 220.942 cv
cp
194.003 220.31 mo
194.003 220.323 194.003 220.337 194.003 220.337 cv
194.003 221.548 li
194.003 221.741 193.796 221.852 193.707 221.92 cv
193.934 221.672 193.686 221.328 193.575 221.204 cv
193.521 221.107 193.434 221.039 193.355 220.942 cv
193.355 220.942 li
193.315 220.915 193.273 220.86 193.232 220.819 cv
193.232 220.805 193.218 220.805 193.203 220.792 cv
193.203 220.792 li
193.146 220.736 193.08 220.681 193.025 220.626 cv
192.79 220.447 192.515 220.24 192.226 220.063 cv
192.226 220.063 li
191.551 219.621 190.712 219.208 189.748 218.795 cv
189.748 218.795 li
189.662 218.753 189.583 218.727 189.5 218.685 cv
189.239 218.575 188.963 218.478 188.688 218.368 cv
188.66 218.354 188.605 218.327 188.605 218.327 cv
185.563 217.17 181.652 216.138 178.018 215.408 cv
177.574 215.34 177.15 215.257 176.724 215.16 cv
176.724 213.921 li
177.219 214.017 177.701 214.1 178.197 214.21 cv
178.308 214.224 178.432 214.251 178.555 214.279 cv
178.597 214.279 178.624 214.292 178.665 214.292 cv
178.744 214.32 178.83 214.334 178.913 214.348 cv
178.955 214.348 179.01 214.375 179.046 214.375 cv
179.133 214.402 179.202 214.402 179.285 214.417 cv
179.326 214.43 179.377 214.444 179.422 214.458 cv
179.492 214.472 179.56 214.485 179.625 214.499 cv
179.684 214.527 179.725 214.527 179.78 214.527 cv
179.849 214.555 179.915 214.555 179.969 214.582 cv
180.042 214.582 180.083 214.582 180.125 214.609 cv
180.204 214.624 180.258 214.637 180.332 214.65 cv
180.386 214.665 180.441 214.679 180.482 214.692 cv
180.548 214.705 180.62 214.705 180.689 214.733 cv
180.73 214.747 180.795 214.762 180.84 214.774 cv
180.909 214.774 180.977 214.789 181.033 214.816 cv
181.088 214.83 181.14 214.83 181.184 214.844 cv
181.253 214.857 181.322 214.885 181.37 214.899 cv
181.419 214.899 181.473 214.912 181.529 214.927 cv
181.597 214.939 181.652 214.954 181.721 214.968 cv
181.777 214.981 181.818 214.995 181.859 215.009 cv
181.928 215.022 181.997 215.037 182.065 215.064 cv
182.107 215.078 182.163 215.078 182.189 215.078 cv
182.269 215.119 182.354 215.133 182.423 215.146 cv
182.465 215.146 182.506 215.16 182.535 215.175 cv
182.63 215.202 182.712 215.215 182.81 215.257 cv
182.823 215.257 182.851 215.257 182.861 215.27 cv
182.975 215.284 183.084 215.312 183.195 215.34 cv
183.208 215.34 183.222 215.34 183.237 215.34 cv
183.333 215.381 183.415 215.394 183.512 215.422 cv
183.553 215.435 183.58 215.45 183.608 215.45 cv
183.69 215.477 183.759 215.491 183.828 215.518 cv
183.869 215.518 183.91 215.532 183.938 215.546 cv
184.007 215.574 184.071 215.587 184.145 215.587 cv
184.185 215.615 184.227 215.629 184.268 215.642 cv
184.32 215.642 184.392 215.67 184.46 215.697 cv
184.502 215.697 184.53 215.711 184.584 215.725 cv
184.64 215.739 184.709 215.752 184.764 215.766 cv
184.805 215.78 184.847 215.794 184.888 215.807 cv
184.943 215.835 185.012 215.849 185.067 215.862 cv
185.108 215.877 185.15 215.89 185.191 215.89 cv
185.245 215.917 185.315 215.945 185.37 215.959 cv
185.411 215.959 185.452 215.973 185.491 215.987 cv
185.563 216 185.617 216.027 185.673 216.042 cv
185.714 216.042 185.755 216.069 185.777 216.083 cv
185.852 216.083 185.907 216.11 185.976 216.138 cv
186.018 216.138 186.059 216.152 186.083 216.166 cv
186.155 216.193 186.224 216.207 186.278 216.22 cv
186.307 216.234 186.348 216.248 186.375 216.262 cv
186.444 216.275 186.513 216.303 186.582 216.332 cv
186.596 216.332 186.623 216.332 186.658 216.344 cv
186.732 216.373 186.815 216.385 186.897 216.427 cv
186.913 216.427 186.913 216.44 186.939 216.44 cv
187.119 216.497 187.308 216.564 187.49 216.633 cv
187.504 216.633 187.518 216.633 187.532 216.647 cv
187.615 216.674 187.683 216.703 187.765 216.716 cv
187.792 216.745 187.807 216.745 187.834 216.757 cv
187.89 216.757 187.958 216.799 188.026 216.827 cv
188.055 216.827 188.082 216.827 188.109 216.84 cv
188.165 216.867 188.22 216.881 188.274 216.909 cv
188.315 216.922 188.344 216.922 188.371 216.937 cv
188.419 216.964 188.481 216.978 188.537 217.005 cv
188.977 217.156 189.404 217.321 189.803 217.487 cv
189.831 217.501 189.858 217.514 189.885 217.528 cv
189.927 217.542 189.968 217.555 190.01 217.569 cv
190.038 217.583 190.065 217.597 190.092 217.61 cv
190.133 217.637 190.183 217.652 190.23 217.679 cv
190.257 217.679 190.257 217.679 190.286 217.693 cv
190.34 217.72 190.41 217.749 190.464 217.776 cv
190.478 217.776 190.501 217.79 190.533 217.803 cv
190.561 217.817 190.616 217.832 190.658 217.859 cv
190.67 217.873 190.699 217.886 190.712 217.886 cv
190.768 217.9 190.791 217.927 190.832 217.941 cv
190.85 217.941 190.877 217.969 190.905 217.969 cv
190.947 217.982 190.974 218.01 191.015 218.024 cv
191.028 218.038 191.056 218.038 191.081 218.051 cv
191.121 218.079 191.152 218.092 191.18 218.12 cv
191.208 218.134 191.222 218.134 191.249 218.134 cv
191.291 218.162 191.345 218.189 191.369 218.203 cv
191.383 218.203 191.4 218.216 191.415 218.216 cv
191.468 218.244 191.524 218.272 191.58 218.299 cv
191.592 218.313 191.606 218.313 191.634 218.327 cv
191.662 218.34 191.703 218.368 191.73 218.382 cv
191.757 218.395 191.772 218.41 191.799 218.423 cv
191.827 218.437 191.854 218.451 191.882 218.464 cv
191.896 218.478 191.938 218.492 191.944 218.505 cv
191.978 218.52 192.005 218.534 192.033 218.547 cv
192.061 218.561 192.075 218.575 192.088 218.575 cv
192.129 218.602 192.158 218.617 192.17 218.629 cv
192.199 218.644 192.212 218.657 192.24 218.67 cv
192.722 218.947 193.121 219.236 193.424 219.497 cv
193.424 219.497 li
193.452 219.538 193.493 219.567 193.507 219.58 cv
193.769 219.814 193.934 220.075 194.003 220.31 cv
cp
194.003 216.468 mo
194.003 216.482 194.003 216.482 194.003 216.497 cv
194.003 217.652 li
194.003 217.803 193.92 217.9 193.769 217.941 cv
193.947 217.762 193.724 217.472 193.521 217.252 cv
193.521 217.252 li
193.521 217.252 li
193.476 217.212 193.434 217.17 193.41 217.143 cv
193.369 217.115 193.355 217.074 193.315 217.061 cv
193.038 216.757 192.639 216.455 192.185 216.179 cv
192.185 216.179 li
192.17 216.179 li
192.143 216.152 192.103 216.125 192.061 216.097 cv
192.061 216.097 192.047 216.083 192.033 216.083 cv
192.005 216.069 191.961 216.042 191.922 216.027 cv
191.91 216.014 191.896 216.014 191.896 216.014 cv
191.854 215.987 191.813 215.959 191.772 215.945 cv
191.757 215.932 li
191.713 215.904 191.672 215.89 191.634 215.862 cv
191.621 215.849 li
191.58 215.835 191.524 215.794 191.482 215.766 cv
191.468 215.766 li
191.415 215.739 191.369 215.711 191.332 215.697 cv
191.317 215.683 li
191.263 215.656 191.222 215.642 191.18 215.615 cv
191.18 215.615 191.167 215.615 191.152 215.6 cv
191.11 215.587 191.063 215.56 191.015 215.532 cv
191 215.532 191 215.518 190.987 215.518 cv
190.947 215.491 190.891 215.477 190.832 215.45 cv
190.823 215.435 li
190.777 215.422 190.726 215.394 190.685 215.367 cv
190.67 215.367 li
190.616 215.34 190.561 215.312 190.501 215.284 cv
190.501 215.284 190.489 215.284 190.478 215.284 cv
190.437 215.257 190.382 215.229 190.327 215.202 cv
190.313 215.202 li
190.257 215.175 190.199 215.146 190.147 215.133 cv
190.133 215.133 li
190.092 215.092 190.038 215.078 189.968 215.037 cv
189.968 215.037 189.951 215.037 189.951 215.022 cv
189.9 215.022 189.831 214.995 189.79 214.968 cv
189.776 214.968 189.776 214.954 189.776 214.954 cv
189.335 214.774 188.867 214.582 188.385 214.402 cv
188.385 214.402 li
188.385 214.402 li
188.289 214.375 188.189 214.348 188.109 214.32 cv
188.096 214.307 188.096 214.307 188.082 214.307 cv
188 214.279 187.899 214.237 187.82 214.21 cv
187.807 214.21 187.807 214.21 187.807 214.196 cv
187.71 214.169 187.615 214.142 187.518 214.1 cv
187.504 214.1 li
187.408 214.072 187.308 214.031 187.215 213.989 cv
187.202 213.989 li
187.119 213.962 187.019 213.921 186.913 213.894 cv
186.913 213.894 li
186.815 213.852 186.72 213.824 186.623 213.797 cv
186.609 213.797 186.596 213.797 186.596 213.797 cv
186.402 213.729 186.196 213.66 186.003 213.59 cv
185.989 213.59 185.976 213.59 185.976 213.59 cv
185.865 213.563 185.77 213.522 185.687 213.507 cv
185.673 213.495 185.659 213.495 185.659 213.495 cv
185.563 213.466 185.452 213.425 185.357 213.397 cv
185.342 213.397 li
185.245 213.37 185.135 213.342 185.039 213.302 cv
185.026 213.302 li
184.913 213.274 184.819 213.232 184.722 213.205 cv
184.709 213.205 184.695 213.205 184.682 213.205 cv
184.599 213.165 184.489 213.15 184.392 213.109 cv
184.392 213.109 184.375 213.109 184.365 213.109 cv
184.158 213.054 183.938 212.972 183.729 212.917 cv
183.718 212.917 183.718 212.917 183.704 212.917 cv
183.608 212.889 183.512 212.861 183.402 212.834 cv
183.388 212.834 183.373 212.834 183.373 212.834 cv
183.264 212.792 183.167 212.778 183.057 212.737 cv
183.042 212.737 li
182.947 212.709 182.823 212.668 182.712 212.654 cv
182.712 212.654 li
182.603 212.613 182.506 212.6 182.382 212.572 cv
182.382 212.572 182.369 212.572 182.369 212.559 cv
182.251 212.544 182.163 212.503 182.052 212.477 cv
182.038 212.477 182.038 212.477 182.021 212.477 cv
181.915 212.447 181.804 212.42 181.708 212.407 cv
181.691 212.393 li
181.584 212.365 181.473 212.337 181.364 212.324 cv
181.349 212.311 181.349 212.311 181.349 212.311 cv
181.239 212.297 181.14 212.27 181.033 212.228 cv
181.019 212.228 181.005 212.228 181.005 212.228 cv
180.895 212.2 180.795 212.172 180.689 212.159 cv
180.675 212.159 180.661 212.159 180.661 212.159 cv
180.548 212.131 180.441 212.104 180.332 212.077 cv
180.317 212.077 li
180.216 212.049 180.11 212.035 180.001 212.007 cv
179.987 212.007 179.969 211.994 179.969 211.994 cv
179.877 211.98 179.767 211.952 179.67 211.925 cv
179.67 211.925 179.642 211.911 179.625 211.911 cv
179.519 211.897 179.422 211.87 179.326 211.856 cv
179.312 211.856 li
179.188 211.828 179.078 211.801 178.968 211.787 cv
178.955 211.787 li
178.845 211.746 178.744 211.732 178.638 211.719 cv
178.624 211.719 178.609 211.719 178.609 211.704 cv
178.497 211.677 178.403 211.663 178.293 211.65 cv
178.279 211.65 li
178.167 211.622 178.06 211.609 177.949 211.58 cv
177.55 211.498 177.137 211.429 176.724 211.36 cv
176.724 210.107 li
177.219 210.19 177.701 210.287 178.183 210.382 cv
181.997 211.113 185.48 212.049 188.206 213.054 cv
187.615 208.786 186.334 204.737 184.502 201.035 cv
184.502 201.035 li
184.103 200.236 183.677 199.438 183.237 198.653 cv
183.222 198.653 183.222 198.639 183.222 198.639 cv
183.195 198.626 183.181 198.57 183.167 198.542 cv
183.373 198.542 183.842 198.515 184.475 198.529 cv
187.036 203.059 188.757 208.125 189.432 213.507 cv
190.464 213.921 191.369 214.348 192.088 214.762 cv
191.58 209.047 189.968 203.664 187.462 198.804 cv
187.944 198.887 188.437 198.997 188.935 199.134 cv
188.935 199.122 188.935 199.122 188.935 199.122 cv
188.99 199.259 189.059 199.382 189.115 199.52 cv
189.115 199.52 li
191.468 204.449 192.928 209.874 193.3 215.587 cv
193.672 215.89 193.92 216.193 194.003 216.468 cv
cp
193.315 221.548 mo
193.3 221.755 193.3 221.962 193.273 222.168 cv
193.273 222.168 li
192.818 227.937 191.276 233.388 188.84 238.332 cv
189.128 238.95 189.197 239.446 189.005 239.846 cv
189.005 239.846 188.633 240.383 188.454 240.673 cv
188.274 240.934 188.206 241.058 187.899 241.099 cv
188.109 241.044 188.468 240.603 188.315 239.915 cv
188.315 239.915 li
188.302 239.818 188.262 239.695 188.22 239.57 cv
188.206 239.57 li
188.206 239.57 li
188.137 239.392 188.041 239.198 187.89 239.006 cv
187.586 238.524 187.174 238.001 186.706 237.45 cv
186.692 237.45 li
186.658 237.396 186.623 237.368 186.596 237.326 cv
186.596 237.326 186.596 237.326 186.582 237.326 cv
186.54 237.258 186.513 237.216 186.472 237.175 cv
186.472 237.161 li
185.935 236.583 185.342 235.963 184.654 235.316 cv
184.654 235.302 184.64 235.302 184.623 235.302 cv
184.572 235.233 184.502 235.178 184.447 235.11 cv
184.434 235.11 184.434 235.11 184.434 235.11 cv
184.227 234.903 184.007 234.71 183.783 234.504 cv
183.773 234.49 183.759 234.49 183.759 234.477 cv
183.69 234.422 183.622 234.353 183.567 234.297 cv
183.553 234.285 183.539 234.285 183.539 234.285 cv
183.319 234.078 183.072 233.871 182.836 233.665 cv
182.823 233.65 182.823 233.637 182.823 233.624 cv
182.741 233.568 182.671 233.5 182.603 233.444 cv
182.589 233.444 182.572 233.417 182.572 233.417 cv
182.328 233.21 182.08 233.003 181.832 232.797 cv
181.818 232.783 181.804 232.77 181.79 232.756 cv
181.732 232.7 181.652 232.632 181.584 232.59 cv
181.57 232.577 181.556 232.563 181.543 232.55 cv
181.46 232.479 181.388 232.425 181.295 232.355 cv
181.295 232.343 181.295 232.343 181.295 232.343 cv
181.115 232.205 180.95 232.054 180.785 231.916 cv
180.758 231.902 180.744 231.888 180.73 231.875 cv
180.648 231.819 180.579 231.765 180.506 231.709 cv
180.489 231.682 180.469 231.668 180.455 231.668 cv
180.386 231.6 180.303 231.53 180.216 231.475 cv
180.216 231.475 180.204 231.461 180.194 231.447 cv
180.11 231.378 180.014 231.296 179.915 231.228 cv
179.915 231.228 li
179.835 231.158 179.753 231.09 179.67 231.035 cv
179.642 231.007 179.609 230.993 179.602 230.965 cv
179.532 230.925 179.464 230.87 179.395 230.801 cv
179.377 230.801 179.353 230.773 179.326 230.76 cv
179.257 230.705 179.188 230.649 179.105 230.58 cv
179.088 230.553 179.064 230.553 179.046 230.539 cv
178.955 230.47 178.857 230.401 178.774 230.333 cv
178.774 230.318 178.774 230.318 178.762 230.318 cv
178.679 230.25 178.597 230.182 178.497 230.098 cv
178.486 230.085 178.456 230.058 178.417 230.043 cv
178.362 230.002 178.293 229.933 178.225 229.892 cv
178.197 229.878 178.167 229.851 178.142 229.822 cv
178.073 229.768 178.004 229.727 177.935 229.672 cv
177.922 229.645 177.895 229.63 177.863 229.617 cv
177.77 229.547 177.674 229.465 177.591 229.396 cv
177.574 229.396 177.574 229.382 177.564 229.368 cv
177.481 229.313 177.399 229.245 177.302 229.19 cv
177.285 229.176 177.247 229.135 177.233 229.12 cv
177.165 229.065 177.095 229.024 177.023 228.97 cv
176.999 228.942 176.958 228.928 176.93 228.9 cv
176.862 228.859 176.793 228.804 176.733 228.749 cv
176.71 228.722 176.669 228.708 176.642 228.68 cv
176.545 228.612 176.445 228.556 176.366 228.459 cv
176.445 227.978 176.518 227.497 176.559 226.987 cv
180.179 229.645 183.25 232.122 185.439 234.215 cv
186.815 230.993 187.765 227.538 188.247 223.945 cv
188.247 223.945 li
188.262 223.875 188.274 223.78 188.274 223.724 cv
188.274 223.71 li
188.302 223.545 188.315 223.407 188.344 223.257 cv
188.344 223.228 188.344 223.201 188.344 223.173 cv
188.357 223.05 188.371 222.912 188.385 222.774 cv
188.398 222.719 188.398 222.637 188.412 222.567 cv
188.419 222.472 188.419 222.36 188.437 222.265 cv
188.437 222.168 188.454 222.085 188.468 221.989 cv
188.468 221.935 188.468 221.865 188.468 221.81 cv
188.481 221.728 188.495 221.645 188.495 221.548 cv
188.495 221.48 188.509 221.397 188.509 221.328 cv
188.509 221.259 188.522 221.19 188.522 221.122 cv
188.537 220.957 188.55 220.792 188.564 220.612 cv
188.84 220.598 189.225 220.571 189.707 220.612 cv
189.472 225.72 188.274 230.622 186.32 235.083 cv
187.063 235.839 187.669 236.528 188.123 237.148 cv
190.451 232.232 191.868 226.794 192.185 221.08 cv
192.554 221.19 192.928 221.355 193.315 221.548 cv
cp
183.783 246.33 mo
183.69 246.468 183.58 246.592 183.47 246.716 cv
183.453 246.73 li
183.373 246.84 183.277 246.964 183.181 247.088 cv
175.498 256.358 164.126 262.499 151.309 263.2 cv
151.309 263.888 li
151.309 263.929 151.294 263.956 151.267 263.985 cv
151.253 263.985 151.226 264.026 151.171 264.026 cv
150.221 264.026 li
150.152 264.026 150.111 263.956 150.111 263.888 cv
150.111 263.626 li
150.111 263.255 li
150.111 262.113 li
150.111 259.58 li
150.111 258.436 li
150.111 251.865 li
150.523 251.865 150.909 251.838 151.309 251.797 cv
151.309 258.381 li
161.222 257.734 170.157 253.49 176.793 246.923 cv
176.793 246.923 li
176.807 246.908 176.82 246.896 176.848 246.881 cv
176.93 246.785 177.023 246.688 177.124 246.592 cv
177.137 246.578 177.15 246.578 177.15 246.565 cv
177.962 245.738 178.744 244.886 179.492 243.976 cv
179.904 244.086 180.303 244.225 180.675 244.348 cv
173.654 253.049 163.162 258.809 151.309 259.524 cv
151.309 262.071 li
164.126 261.329 175.457 255.049 182.933 245.56 cv
183.36 245.89 183.649 246.165 183.783 246.33 cv
cp
185.053 245.188 mo
185.122 245.463 185.095 245.71 184.957 245.863 cv
184.957 245.863 184.599 246.468 184.46 246.661 cv
184.334 246.854 184.103 247.115 183.69 247.143 cv
183.783 247.088 184.502 247.033 184.09 245.945 cv
184.09 245.945 li
184.09 245.945 li
184.062 245.834 184.007 245.725 183.952 245.615 cv
183.842 245.394 183.69 245.146 183.47 244.844 cv
183.484 244.844 li
183.084 244.334 182.506 243.673 181.762 242.943 cv
181.762 242.943 li
181.502 242.682 181.225 242.42 180.923 242.145 cv
180.923 242.145 li
179.202 240.548 176.82 238.578 173.833 236.322 cv
174.025 235.95 174.205 235.55 174.382 235.165 cv
174.382 235.165 li
174.382 235.165 li
177.895 237.78 180.772 240.121 182.658 241.966 cv
182.658 241.966 li
182.81 242.103 182.947 242.255 183.072 242.393 cv
183.084 242.406 183.098 242.406 183.098 242.42 cv
183.125 242.462 183.181 242.489 183.208 242.53 cv
183.222 242.545 183.222 242.545 183.237 242.558 cv
183.264 242.586 183.305 242.613 183.333 242.668 cv
183.347 242.668 183.36 242.682 183.36 242.682 cv
183.388 242.723 183.429 242.765 183.453 242.793 cv
183.47 242.793 183.47 242.806 183.484 242.82 cv
183.512 242.861 183.553 242.888 183.567 242.916 cv
183.58 242.93 183.594 242.943 183.594 242.958 cv
183.635 242.985 183.663 243.012 183.69 243.053 cv
183.69 243.053 183.704 243.068 183.718 243.068 cv
183.759 243.109 183.783 243.15 183.814 243.191 cv
183.814 243.191 183.814 243.191 183.814 243.206 cv
183.897 243.288 183.965 243.356 184.014 243.425 cv
184.031 243.453 li
184.062 243.495 184.09 243.522 184.131 243.563 cv
184.131 243.578 184.131 243.578 184.145 243.578 cv
184.172 243.619 184.185 243.646 184.214 243.673 cv
184.227 243.688 184.227 243.701 184.241 243.715 cv
184.557 244.142 184.792 244.5 184.929 244.83 cv
184.929 244.844 184.943 244.871 184.957 244.899 cv
184.957 244.913 184.97 244.913 184.97 244.913 cv
184.97 244.94 184.985 244.954 184.985 244.968 cv
184.998 244.981 184.998 245.009 184.998 245.009 cv
185.026 245.078 185.039 245.133 185.053 245.188 cv
cp
146.311 177.768 mo
146.311 175.248 li
146.311 174.078 li
146.311 173.334 li
146.311 173.265 146.366 173.223 146.421 173.223 cv
147.398 173.223 li
147.466 173.223 147.495 173.265 147.495 173.334 cv
147.495 173.83 li
147.495 174.036 li
147.495 175.192 li
147.495 177.712 li
147.495 178.868 li
147.495 186.757 li
146.311 186.743 li
146.311 177.768 li
cp
103.548 217.652 mo
103.548 216.497 li
103.548 216.482 103.548 216.482 103.558 216.468 cv
103.644 216.193 103.892 215.89 104.264 215.587 cv
104.581 210.837 105.64 206.294 107.334 202.054 cv
107.347 202.039 107.354 202.012 107.354 201.985 cv
107.389 201.944 107.403 201.902 107.43 201.847 cv
107.457 201.764 107.485 201.696 107.527 201.613 cv
107.527 201.599 li
107.582 201.461 107.65 201.296 107.716 201.145 cv
107.733 201.104 107.747 201.062 107.775 201.035 cv
107.964 201.089 108.367 201.2 108.845 201.406 cv
107.058 205.564 105.888 210.052 105.489 214.762 cv
106.201 214.348 107.114 213.921 108.146 213.507 cv
108.627 209.749 109.592 206.156 111.01 202.797 cv
111.312 203.072 111.602 203.389 111.877 203.719 cv
111.63 204.312 111.409 204.903 111.186 205.522 cv
111.186 205.537 111.175 205.564 111.161 205.592 cv
110.335 207.987 109.726 210.479 109.372 213.04 cv
112.097 212.049 115.58 211.113 119.381 210.382 cv
119.863 210.272 120.373 210.19 120.868 210.107 cv
120.868 211.347 li
120.441 211.429 120.028 211.498 119.615 211.58 cv
119.505 211.609 119.408 211.622 119.285 211.65 cv
119.27 211.65 li
119.16 211.663 119.064 211.677 118.968 211.704 cv
118.954 211.719 118.94 211.719 118.927 211.719 cv
118.809 211.732 118.72 211.746 118.623 211.787 cv
118.596 211.787 li
118.485 211.801 118.375 211.828 118.265 211.856 cv
118.249 211.856 li
118.142 211.87 118.045 211.897 117.927 211.911 cv
117.921 211.911 117.921 211.925 117.907 211.925 cv
117.811 211.952 117.688 211.98 117.604 211.994 cv
117.59 211.994 117.577 212.007 117.563 212.007 cv
117.467 212.035 117.354 212.049 117.248 212.077 cv
117.248 212.077 117.248 212.077 117.232 212.077 cv
117.137 212.104 117.012 212.131 116.902 212.159 cv
116.89 212.159 li
116.774 212.172 116.668 212.2 116.572 212.228 cv
116.545 212.228 li
116.435 212.255 116.338 212.297 116.228 212.311 cv
116.214 212.311 116.214 212.311 116.214 212.311 cv
116.09 212.337 115.98 212.365 115.87 212.393 cv
115.87 212.393 li
115.76 212.42 115.663 212.447 115.539 212.477 cv
115.539 212.477 115.539 212.477 115.526 212.477 cv
115.415 212.503 115.32 212.544 115.223 212.559 cv
115.209 212.572 115.195 212.572 115.195 212.572 cv
115.085 212.6 114.975 212.613 114.865 212.654 cv
114.865 212.654 li
114.754 212.668 114.645 212.709 114.534 212.737 cv
114.52 212.737 li
114.403 212.765 114.314 212.792 114.204 212.834 cv
114.204 212.834 114.19 212.834 114.173 212.834 cv
114.08 212.848 113.983 212.889 113.874 212.917 cv
113.859 212.917 113.859 212.917 113.859 212.917 cv
113.64 212.972 113.419 213.054 113.2 213.109 cv
113.2 213.109 li
113.089 213.15 112.979 213.165 112.882 213.205 cv
112.87 213.205 li
112.758 213.232 112.659 213.274 112.552 213.302 cv
112.552 213.302 112.552 213.302 112.538 213.302 cv
112.442 213.342 112.332 213.37 112.235 213.397 cv
112.235 213.397 li
112.122 213.425 112.015 213.466 111.919 213.495 cv
111.905 213.495 li
111.795 213.522 111.698 213.563 111.602 213.59 cv
111.588 213.59 111.588 213.59 111.588 213.59 cv
111.382 213.66 111.175 213.714 110.982 213.797 cv
110.969 213.797 li
110.857 213.824 110.775 213.852 110.665 213.894 cv
110.648 213.894 li
110.555 213.921 110.473 213.962 110.376 213.989 cv
110.359 213.989 110.359 213.989 110.359 213.989 cv
110.169 214.072 109.963 214.127 109.767 214.196 cv
109.767 214.21 109.757 214.21 109.757 214.21 cv
109.675 214.237 109.578 214.265 109.495 214.292 cv
109.478 214.307 109.478 214.307 109.478 214.307 cv
109.385 214.334 109.289 214.375 109.207 214.402 cv
109.207 214.402 li
109.207 214.402 li
108.779 214.555 108.395 214.705 108.006 214.885 cv
108.006 214.885 li
108.006 214.885 li
107.951 214.899 107.899 214.927 107.829 214.954 cv
107.829 214.954 107.815 214.954 107.802 214.968 cv
107.747 214.981 107.692 215.022 107.65 215.022 cv
107.637 215.022 107.622 215.037 107.622 215.037 cv
107.499 215.092 107.389 215.146 107.279 215.202 cv
107.265 215.202 li
107.209 215.229 107.155 215.257 107.083 215.284 cv
107.083 215.284 107.083 215.284 107.072 215.284 cv
107.017 215.312 106.962 215.34 106.907 215.367 cv
106.907 215.367 li
106.852 215.394 106.793 215.422 106.742 215.45 cv
106.742 215.45 li
106.687 215.477 106.632 215.505 106.59 215.518 cv
106.562 215.532 li
106.521 215.56 106.452 215.587 106.411 215.615 cv
106.397 215.615 li
106.302 215.67 106.188 215.725 106.095 215.766 cv
106.081 215.766 li
106.04 215.794 105.985 215.835 105.944 215.862 cv
105.929 215.862 li
105.833 215.917 105.737 215.973 105.654 216.027 cv
105.654 216.027 li
105.592 216.042 105.558 216.083 105.517 216.097 cv
105.502 216.097 105.502 216.097 105.502 216.097 cv
105.461 216.138 105.419 216.152 105.361 216.193 cv
105.361 216.193 li
105.361 216.193 li
104.924 216.482 104.525 216.757 104.25 217.061 cv
104.222 217.074 104.209 217.102 104.18 217.129 cv
104.18 217.129 li
103.933 217.377 103.575 217.708 103.782 217.941 cv
103.657 217.9 103.548 217.803 103.548 217.652 cv
cp
146.269 174.078 mo
146.201 174.091 146.124 174.105 146.076 174.105 cv
146.124 174.091 146.214 174.091 146.269 174.078 cv
cp
187.985 197.138 mo
188.419 197.358 188.74 197.564 188.894 197.744 cv
188.894 197.744 189.432 198.667 189.555 198.887 cv
189.679 199.107 189.528 199.382 189.239 199.479 cv
189.404 199.424 189.583 199.217 189.128 198.942 cv
189.005 198.874 188.867 198.804 188.74 198.736 cv
188.74 198.736 li
188.715 198.722 188.702 198.708 188.688 198.708 cv
187.462 198.074 185.687 197.441 183.439 196.779 cv
183.439 196.794 li
182.902 196.642 182.354 196.491 181.762 196.339 cv
181.762 196.326 li
180.235 195.94 178.542 195.542 176.724 195.156 cv
176.724 193.931 li
176.944 193.971 177.178 194.027 177.384 194.081 cv
177.399 194.081 177.412 194.081 177.425 194.081 cv
177.481 194.096 177.55 194.109 177.605 194.123 cv
177.632 194.123 177.646 194.137 177.674 194.151 cv
177.715 194.151 177.784 194.164 177.839 194.164 cv
177.845 194.178 177.88 194.178 177.895 194.178 cv
177.962 194.206 178.018 194.206 178.073 194.219 cv
178.101 194.219 178.114 194.234 178.142 194.234 cv
178.197 194.247 178.252 194.261 178.293 194.274 cv
178.334 194.274 178.349 194.288 178.39 194.288 cv
178.432 194.302 178.486 194.316 178.542 194.329 cv
178.569 194.329 178.609 194.329 178.638 194.344 cv
178.679 194.357 178.727 194.371 178.774 194.371 cv
178.845 194.399 178.927 194.412 178.995 194.44 cv
179.01 194.44 179.033 194.44 179.046 194.453 cv
179.12 194.453 179.175 194.467 179.244 194.481 cv
179.257 194.494 179.285 194.494 179.312 194.509 cv
179.367 194.522 179.422 194.522 179.477 194.536 cv
179.505 194.55 179.519 194.564 179.546 194.564 cv
179.602 194.577 179.657 194.577 179.712 194.591 cv
179.739 194.605 179.753 194.605 179.78 194.619 cv
179.835 194.632 179.89 194.646 179.945 194.66 cv
179.969 194.66 179.987 194.66 180.001 194.674 cv
180.069 194.688 180.125 194.701 180.194 194.715 cv
180.204 194.715 180.216 194.715 180.235 194.729 cv
180.303 194.742 180.373 194.757 180.441 194.771 cv
180.441 194.771 180.455 194.771 180.469 194.771 cv
180.537 194.812 180.62 194.825 180.702 194.839 cv
181.295 194.991 181.887 195.142 182.452 195.293 cv
182.535 195.321 182.63 195.334 182.7 195.362 cv
182.7 195.362 li
182.877 195.404 183.057 195.444 183.222 195.5 cv
183.222 195.5 li
183.484 195.583 183.718 195.639 183.965 195.707 cv
183.965 195.707 li
184.764 195.955 185.491 196.201 186.155 196.421 cv
186.155 196.421 li
186.843 196.669 187.435 196.876 187.89 197.11 cv
187.917 197.124 187.931 197.124 187.972 197.138 cv
187.985 197.138 li
cp
150.111 174.036 mo
150.111 173.83 li
150.111 173.334 li
150.111 173.306 150.124 173.265 150.152 173.251 cv
150.152 173.251 150.179 173.223 150.221 173.223 cv
151.171 173.223 li
151.253 173.223 151.294 173.265 151.294 173.334 cv
151.294 174.078 li
165.407 174.875 177.757 182.214 185.37 193.09 cv
185.92 193.352 186.375 193.614 186.72 193.889 cv
186.732 193.889 186.747 193.889 186.761 193.903 cv
186.761 193.903 187.449 195.06 187.642 195.308 cv
187.807 195.527 187.669 195.816 187.449 195.926 cv
187.596 195.816 187.669 195.679 187.229 195.308 cv
187.092 195.197 186.939 195.073 186.774 194.977 cv
186.774 194.977 li
186.774 194.977 li
186.732 194.949 186.706 194.936 186.674 194.907 cv
186.674 194.907 li
186.623 194.881 186.596 194.854 186.54 194.825 cv
186.54 194.825 li
185.962 194.481 185.257 194.151 184.475 193.821 cv
184.475 193.821 li
184.475 193.821 li
184.392 193.779 184.32 193.765 184.255 193.724 cv
184.241 193.724 184.241 193.709 184.227 193.709 cv
184.158 193.682 184.09 193.655 184.007 193.627 cv
184.007 193.627 183.993 193.614 183.979 193.614 cv
183.91 193.586 183.842 193.558 183.759 193.531 cv
183.759 193.531 li
183.677 193.517 183.608 193.476 183.525 193.449 cv
183.512 193.449 183.494 193.434 183.484 193.434 cv
183.415 193.407 183.333 193.393 183.25 193.352 cv
183.25 193.352 li
183.181 193.324 183.098 193.283 183.016 193.269 cv
183.016 193.269 183.001 193.255 182.988 193.255 cv
182.902 193.228 182.823 193.214 182.754 193.173 cv
182.741 193.159 182.727 193.159 182.712 193.146 cv
182.547 193.104 182.382 193.048 182.217 192.994 cv
182.204 192.994 182.189 192.994 182.175 192.98 cv
182.107 192.966 182.01 192.938 181.928 192.898 cv
181.915 192.898 li
181.832 192.87 181.732 192.842 181.667 192.814 cv
181.652 192.814 li
181.556 192.787 181.473 192.759 181.388 192.732 cv
181.37 192.718 181.364 192.718 181.349 192.718 cv
181.267 192.705 181.17 192.664 181.088 192.649 cv
181.088 192.649 li
180.992 192.622 180.909 192.595 180.826 192.554 cv
180.809 192.554 180.795 192.554 180.795 192.554 cv
180.702 192.525 180.607 192.499 180.524 192.484 cv
180.506 192.471 180.506 192.471 180.489 192.471 cv
179.753 192.25 179.01 192.044 178.238 191.866 cv
178.238 191.866 li
178.238 191.866 li
178.114 191.837 177.99 191.796 177.845 191.783 cv
177.845 191.783 li
177.729 191.742 177.605 191.713 177.481 191.672 cv
177.481 191.672 li
177.357 191.659 177.233 191.631 177.109 191.604 cv
177.109 191.604 177.109 191.604 177.095 191.604 cv
176.965 191.562 176.848 191.536 176.733 191.507 cv
176.724 191.507 li
176.724 190.282 li
176.724 190.282 li
176.724 188.684 li
177.453 189.373 178.142 190.075 178.816 190.792 cv
180.489 191.231 182.01 191.713 183.292 192.182 cv
175.829 182.461 164.319 176.003 151.294 175.261 cv
151.294 177.768 li
160.078 178.304 168.091 181.594 174.521 186.784 cv
172.649 186.784 li
166.619 182.283 159.279 179.418 151.294 178.938 cv
151.294 186.757 li
150.111 186.757 li
150.111 178.868 li
150.111 177.712 li
150.111 175.192 li
150.111 174.036 li
cp
120.537 246.675 mo
126.939 253.132 135.544 257.404 145.126 258.284 cv
145.302 259.456 li
133.093 258.449 122.392 252.032 115.591 242.64 cv
116.338 242.613 116.875 242.682 117.082 242.71 cv
118.127 244.073 119.243 245.367 120.441 246.592 cv
120.482 246.633 120.51 246.648 120.537 246.675 cv
120.537 246.675 li
cp
107.031 201.544 mo
106.949 201.2 107.017 200.855 107.072 200.787 cv
107.637 199.726 li
107.65 199.699 107.65 199.685 107.65 199.685 cv
107.829 199.562 108.077 199.492 108.407 199.465 cv
108.407 199.465 108.422 199.465 108.436 199.465 cv
108.449 199.465 108.462 199.465 108.477 199.465 cv
108.477 199.465 li
108.556 199.451 108.642 199.438 108.725 199.438 cv
109.014 199.438 109.345 199.479 109.712 199.52 cv
109.712 199.52 li
110.432 199.645 111.285 199.823 112.263 200.126 cv
112.607 200.222 112.979 200.346 113.365 200.469 cv
113.365 200.469 li
113.502 200.498 113.625 200.552 113.763 200.593 cv
113.763 200.593 li
113.829 200.607 113.9 200.634 113.969 200.663 cv
113.969 200.663 li
114.039 200.676 114.107 200.717 114.163 200.731 cv
114.163 200.731 li
114.231 200.746 114.3 200.787 114.369 200.787 cv
114.382 200.799 114.382 200.799 114.382 200.799 cv
114.452 200.829 114.52 200.855 114.575 200.869 cv
114.589 200.869 li
114.658 200.896 114.724 200.924 114.782 200.952 cv
114.795 200.952 li
114.865 200.979 114.933 200.994 114.999 201.021 cv
114.999 201.035 115.013 201.035 115.013 201.035 cv
115.085 201.048 115.154 201.089 115.223 201.104 cv
115.237 201.104 li
115.301 201.145 115.374 201.171 115.443 201.186 cv
115.457 201.186 li
115.526 201.227 115.591 201.241 115.663 201.269 cv
115.663 201.269 115.663 201.282 115.677 201.282 cv
115.746 201.296 115.815 201.324 115.87 201.351 cv
115.884 201.351 115.884 201.351 115.894 201.351 cv
115.967 201.392 116.035 201.406 116.09 201.447 cv
116.104 201.447 116.118 201.447 116.132 201.461 cv
116.184 201.475 116.255 201.489 116.324 201.516 cv
116.338 201.531 116.338 201.544 116.353 201.544 cv
116.42 201.557 116.486 201.599 116.545 201.599 cv
116.559 201.613 116.572 201.613 116.585 201.626 cv
116.655 201.654 116.71 201.667 116.774 201.696 cv
116.792 201.709 116.807 201.709 116.816 201.723 cv
116.89 201.75 116.944 201.764 117.012 201.792 cv
117.041 201.792 117.047 201.806 117.063 201.806 cv
117.137 201.847 117.192 201.861 117.248 201.888 cv
117.26 201.902 117.288 201.902 117.302 201.902 cv
117.367 201.929 117.425 201.957 117.48 201.971 cv
117.508 201.985 117.522 201.998 117.549 201.998 cv
117.604 202.039 117.656 202.054 117.729 202.067 cv
117.742 202.081 117.755 202.095 117.783 202.095 cv
117.853 202.122 117.907 202.164 117.977 202.177 cv
117.99 202.191 118.004 202.204 118.03 202.204 cv
118.086 202.219 118.155 202.246 118.21 202.274 cv
118.225 202.287 118.249 202.301 118.279 202.301 cv
118.334 202.329 118.39 202.342 118.444 202.37 cv
118.472 202.384 118.5 202.398 118.524 202.411 cv
118.579 202.425 118.637 202.452 118.692 202.481 cv
118.733 202.481 118.747 202.494 118.788 202.508 cv
118.844 202.535 118.898 202.564 118.954 202.576 cv
118.981 202.59 119.009 202.604 119.037 202.617 cv
119.092 202.646 119.147 202.659 119.202 202.687 cv
119.229 202.701 119.257 202.714 119.285 202.742 cv
119.34 202.756 119.408 202.783 119.45 202.797 cv
119.477 202.81 119.518 202.839 119.546 202.839 cv
119.601 202.866 119.656 202.893 119.708 202.907 cv
119.738 202.934 119.766 202.949 119.807 202.962 cv
119.849 202.976 119.904 203.004 119.96 203.031 cv
119.997 203.031 120.028 203.059 120.07 203.072 cv
120.125 203.086 120.18 203.114 120.22 203.141 cv
120.262 203.155 120.299 203.155 120.331 203.182 cv
120.4 203.209 120.455 203.224 120.523 203.265 cv
120.551 203.279 120.565 203.279 120.588 203.306 cv
120.688 203.347 120.772 203.389 120.868 203.402 cv
120.868 204.725 li
117.742 203.333 115.03 202.246 112.828 201.544 cv
112.828 201.544 li
112.828 201.544 li
112.456 201.406 112.081 201.296 111.725 201.2 cv
111.74 201.2 li
110.748 200.911 109.88 200.731 109.192 200.634 cv
109.151 200.634 109.117 200.634 109.083 200.622 cv
109.083 200.622 109.083 200.622 109.068 200.622 cv
109.042 200.622 109 200.607 108.973 200.607 cv
108.958 200.607 108.958 200.607 108.958 200.607 cv
108.917 200.607 108.886 200.607 108.862 200.607 cv
108.845 200.607 108.834 200.607 108.834 200.593 cv
108.808 200.593 108.779 200.593 108.766 200.593 cv
108.738 200.593 108.738 200.593 108.71 200.593 cv
108.697 200.593 108.669 200.593 108.642 200.581 cv
108.642 200.581 108.614 200.581 108.598 200.581 cv
108.587 200.581 108.573 200.581 108.542 200.581 cv
108.518 200.581 108.504 200.581 108.49 200.581 cv
108.462 200.581 108.449 200.581 108.449 200.581 cv
108.407 200.581 108.38 200.581 108.339 200.581 cv
108.215 200.581 108.077 200.581 107.951 200.593 cv
107.951 200.593 li
107.527 200.634 107.155 200.829 107.031 201.544 cv
cp
145.141 179.006 mo
137.609 179.681 130.698 182.461 124.97 186.743 cv
123.112 186.743 li
129.293 181.746 136.935 178.538 145.302 177.836 cv
145.141 179.006 li
cp
113.75 192.883 mo
113.777 192.898 113.791 192.898 113.805 192.898 cv
113.791 192.898 113.777 192.898 113.75 192.883 cv
113.75 192.883 li
cp
111.147 194.068 mo
111.147 194.068 li
111.147 194.068 111.161 194.068 111.175 194.054 cv
111.186 194.054 111.199 194.054 111.217 194.054 cv
111.23 194.027 111.241 194.027 111.271 194.027 cv
111.285 194.027 li
111.299 194.027 111.327 194.027 111.327 194.027 cv
111.34 194.013 111.354 194.013 111.354 194.013 cv
111.368 194.013 111.395 194.013 111.409 193.999 cv
111.423 193.999 li
111.475 193.999 111.53 193.986 111.588 193.971 cv
111.588 193.971 li
111.588 193.971 li
111.777 193.944 112.002 193.931 112.25 193.931 cv
112.332 193.931 li
112.524 193.931 112.745 193.944 112.979 193.957 cv
112.979 193.957 li
112.979 193.957 li
113.02 193.971 113.075 193.971 113.117 193.986 cv
113.117 193.986 113.117 193.986 113.13 193.999 cv
113.268 194.013 113.419 194.027 113.57 194.054 cv
113.57 194.054 li
113.625 194.054 113.667 194.068 113.735 194.081 cv
113.735 194.081 li
113.884 194.109 114.052 194.151 114.217 194.164 cv
114.217 194.164 li
114.272 194.178 114.328 194.192 114.382 194.206 cv
114.396 194.206 li
114.562 194.247 114.741 194.288 114.919 194.329 cv
114.919 194.329 li
115.512 194.467 116.159 194.66 116.848 194.881 cv
116.848 194.881 li
116.848 194.881 li
116.902 194.895 116.972 194.921 117.041 194.936 cv
117.063 194.949 117.082 194.949 117.095 194.949 cv
117.165 194.977 117.219 195.004 117.288 195.019 cv
117.302 195.032 117.315 195.032 117.33 195.046 cv
117.535 195.101 117.742 195.184 117.927 195.252 cv
117.977 195.267 118.004 195.267 118.045 195.279 cv
118.1 195.293 118.155 195.321 118.21 195.334 cv
118.249 195.349 118.279 195.362 118.32 195.39 cv
118.375 195.39 118.431 195.417 118.485 195.444 cv
118.568 195.473 118.665 195.5 118.747 195.527 cv
118.788 195.556 118.844 195.568 118.885 195.583 cv
118.94 195.597 118.995 195.624 119.037 195.639 cv
119.092 195.651 119.129 195.679 119.188 195.692 cv
119.243 195.707 119.298 195.734 119.353 195.761 cv
119.408 195.761 119.435 195.789 119.477 195.802 cv
119.573 195.844 119.683 195.884 119.78 195.926 cv
119.807 195.94 119.822 195.955 119.849 195.955 cv
119.931 195.996 120.011 196.009 120.097 196.05 cv
120.125 196.064 120.152 196.079 120.208 196.091 cv
120.276 196.12 120.358 196.146 120.441 196.174 cv
120.468 196.201 120.496 196.201 120.537 196.215 cv
120.629 196.256 120.757 196.312 120.854 196.354 cv
120.854 195.06 li
120.854 193.821 li
120.482 193.903 120.11 193.971 119.753 194.054 cv
119.435 194.123 119.105 194.206 118.788 194.274 cv
118.788 194.274 li
118.692 194.247 118.596 194.206 118.5 194.178 cv
118.458 194.164 118.402 194.151 118.361 194.137 cv
118.32 194.109 118.265 194.096 118.225 194.081 cv
118.183 194.068 118.127 194.054 118.059 194.027 cv
118.03 194.013 118.004 193.999 117.962 193.999 cv
117.907 193.957 117.853 193.957 117.797 193.931 cv
117.755 193.916 117.729 193.903 117.688 193.903 cv
116.958 193.655 116.27 193.449 115.636 193.269 cv
115.636 193.269 115.622 193.269 115.604 193.269 cv
115.553 193.269 115.498 193.255 115.443 193.228 cv
115.415 193.228 115.415 193.228 115.402 193.214 cv
115.343 193.214 115.285 193.201 115.223 193.187 cv
115.223 193.187 115.223 193.173 115.209 193.173 cv
115.14 193.146 115.072 193.146 115.013 193.131 cv
115.013 193.131 li
114.999 193.131 114.999 193.131 114.989 193.118 cv
114.999 193.131 114.999 193.131 115.013 193.131 cv
115.099 193.104 115.182 193.076 115.264 193.048 cv
115.278 193.048 115.278 193.036 115.278 193.036 cv
115.374 193.007 115.457 192.98 115.539 192.966 cv
115.539 192.966 115.553 192.953 115.567 192.953 cv
115.663 192.911 115.746 192.883 115.842 192.856 cv
115.842 192.856 li
116.035 192.801 116.214 192.746 116.42 192.691 cv
116.42 192.676 li
116.518 192.649 116.613 192.635 116.71 192.595 cv
116.725 192.595 li
117.977 192.224 119.353 191.866 120.854 191.536 cv
120.854 190.296 li
120.854 190.296 120.84 190.296 120.826 190.309 cv
120.84 190.296 120.854 190.296 120.854 190.282 cv
120.854 188.699 li
120.125 189.387 119.408 190.103 118.733 190.819 cv
117.027 191.273 115.512 191.742 114.231 192.236 cv
121.583 182.641 132.873 176.183 145.678 175.275 cv
145.853 174.119 li
132.044 175 119.96 182.173 112.4 192.801 cv
111.76 192.829 111.299 192.966 110.982 193.187 cv
110.982 193.214 110.982 193.228 110.969 193.228 cv
110.318 194.399 li
110.304 194.412 110.211 194.701 110.267 194.963 cv
110.318 194.564 110.569 194.234 111.147 194.068 cv
cp
3.09999e-05 .38059 1 3.09999e-05 cmyk
f
108.146 213.507 mo
108.627 209.749 109.592 206.156 111.01 202.797 cv
110.28 202.109 109.478 201.682 108.845 201.406 cv
107.058 205.564 105.888 210.052 105.489 214.762 cv
106.201 214.348 107.114 213.921 108.146 213.507 cv
cp
186.32 235.083 mo
187.063 235.839 187.669 236.528 188.123 237.148 cv
190.451 232.232 191.868 226.794 192.185 221.08 cv
191.249 220.777 190.41 220.654 189.707 220.612 cv
189.472 225.72 188.274 230.622 186.32 235.083 cv
cp
112.015 236.693 mo
109.605 231.792 108.146 226.34 107.885 220.612 cv
107.196 220.64 106.315 220.777 105.361 221.094 cv
105.709 227.083 107.265 232.756 109.767 237.891 cv
110.359 237.492 111.134 237.079 112.015 236.693 cv
cp
151.309 259.524 mo
151.309 262.071 li
164.126 261.329 175.457 255.049 182.933 245.56 cv
182.396 245.175 181.639 244.72 180.675 244.348 cv
173.654 253.049 163.162 258.809 151.309 259.524 cv
cp
115.591 242.64 mo
114.837 242.655 113.859 242.765 112.828 243.081 cv
120.097 253.795 132.026 261.065 145.69 262.044 cv
145.302 259.456 li
133.093 258.449 122.392 252.032 115.591 242.64 cv
cp
151.294 177.768 mo
160.078 178.304 168.091 181.594 174.521 186.784 cv
176.724 186.784 li
176.724 188.684 li
177.453 189.373 178.142 190.075 178.816 190.792 cv
180.489 191.231 182.01 191.713 183.292 192.182 cv
175.829 182.461 164.319 176.003 151.294 175.261 cv
151.294 177.768 li
cp
187.462 198.804 mo
186.292 198.597 185.245 198.542 184.475 198.529 cv
187.036 203.059 188.757 208.125 189.432 213.507 cv
190.464 213.921 191.369 214.348 192.088 214.762 cv
191.58 209.047 189.968 203.664 187.462 198.804 cv
cp
114.231 192.236 mo
121.583 182.641 132.873 176.183 145.678 175.275 cv
145.302 177.836 li
136.935 178.538 129.293 181.746 123.112 186.743 cv
120.854 186.743 li
120.854 188.699 li
120.125 189.387 119.408 190.103 118.733 190.819 cv
117.027 191.273 115.512 191.742 114.231 192.236 cv
cp
.04416 3.09999e-05 .929229 3.09999e-05 cmyk
f
186.774 194.977 mo
184.737 193.641 180.675 192.401 176.724 191.507 cv
176.724 193.931 li
181.677 194.963 186.096 196.243 188.026 197.166 cv
186.774 194.977 li
cp
f
118.788 194.274 mo
119.45 194.123 120.138 193.957 120.854 193.821 cv
120.854 191.536 li
118.637 192.031 116.641 192.581 115.013 193.131 cv
116.077 193.393 117.343 193.765 118.788 194.274 cv
cp
f
120.868 211.347 mo
120.441 211.429 120.028 211.498 119.615 211.58 cv
113.323 212.792 106.274 215.009 104.25 217.061 cv
104.191 217.129 104.112 217.197 104.03 217.252 cv
104.03 219.607 li
105.806 217.859 111.877 215.697 119.381 214.21 cv
119.863 214.1 120.373 214.017 120.868 213.921 cv
120.868 211.347 li
cp
ef
193.315 217.061 mo
191.291 215.009 184.255 212.792 177.949 211.58 cv
177.55 211.498 177.137 211.429 176.724 211.36 cv
176.724 213.921 li
177.219 214.017 177.701 214.1 178.197 214.21 cv
185.673 215.697 191.713 217.844 193.521 219.594 cv
193.521 217.252 li
193.434 217.185 193.369 217.115 193.315 217.061 cv
cp
ef
122.974 234.587 mo
121.294 234.958 119.67 235.372 118.1 235.839 cv
114.314 236.913 110.211 238.593 109.423 239.888 cv
109.423 239.901 109.413 239.915 109.399 239.929 cv
110.775 242.173 li
111.615 241.14 114.438 239.625 118.885 238.359 cv
120.661 237.851 122.392 237.423 124.144 237.038 cv
123.703 236.252 123.318 235.426 122.974 234.587 cv
cp
ef
150.111 186.757 mo
150.111 173.83 li
147.495 173.83 li
147.495 186.757 li
150.111 186.757 li
cp
ef
148.748 251.92 mo
148.334 251.92 147.904 251.908 147.495 251.893 cv
147.495 263.626 li
150.111 263.626 li
150.111 251.865 li
149.648 251.908 149.202 251.92 148.748 251.92 cv
cp
ef
187.89 239.006 mo
186.169 236.308 181.691 232.467 176.366 228.459 cv
175.994 230.801 175.305 233.045 174.382 235.165 cv
180.303 239.57 184.406 243.191 184.998 245.009 cv
188.315 239.915 li
188.274 239.653 188.137 239.351 187.89 239.006 cv
cp
ef
120.854 196.354 mo
116.972 194.771 114.08 193.957 112.332 193.931 cv
112.25 193.931 li
111.795 193.931 111.437 193.986 111.147 194.068 cv
108.395 199.465 li
108.49 199.465 108.614 199.438 108.725 199.438 cv
110.857 199.438 115.223 200.911 120.868 203.402 cv
120.854 196.354 li
cp
ef
184.145 246.11 mo
184.145 246.11 li
184.145 246.083 184.131 246.069 184.131 246.028 cv
184.131 246.028 li
184.117 246 184.103 245.958 184.09 245.945 cv
184.09 245.945 li
184.062 245.834 184.007 245.725 183.952 245.615 cv
183.58 244.844 182.52 243.619 180.923 242.145 cv
180.909 242.131 180.895 242.117 180.895 242.103 cv
180.895 242.103 180.867 242.103 180.867 242.09 cv
180.867 242.103 li
179.161 240.493 176.793 238.565 173.833 236.322 cv
172.469 239.075 170.651 241.581 168.504 243.729 cv
165.999 246.22 163.011 248.259 159.693 249.689 cv
163.988 249.304 168.077 248.752 171.368 248.065 cv
172.552 247.887 174.547 247.46 176.793 246.923 cv
177.729 245.986 178.638 245.009 179.492 243.976 cv
181.956 244.583 183.415 245.903 183.783 246.33 cv
183.58 246.592 183.36 246.854 183.133 247.143 cv
183.25 247.143 183.36 247.143 183.453 247.143 cv
183.553 247.143 183.635 247.143 183.729 247.115 cv
183.883 247.061 184.375 246.964 184.158 246.124 cv
184.145 246.124 184.145 246.124 184.145 246.11 cv
cp
193.724 221.397 mo
193.724 221.397 li
193.724 221.397 193.724 221.397 193.707 221.397 cv
193.707 221.397 193.707 221.397 193.707 221.383 cv
193.707 221.383 193.707 221.369 193.7 221.355 cv
193.7 221.355 li
193.686 221.355 193.686 221.355 193.686 221.342 cv
193.686 221.342 li
193.672 221.328 li
193.672 221.314 li
193.672 221.3 li
193.658 221.3 li
193.645 221.3 li
193.645 221.287 li
193.631 221.273 li
193.631 221.273 li
193.631 221.259 193.631 221.259 193.631 221.259 cv
193.617 221.245 li
193.617 221.245 li
193.617 221.232 193.617 221.232 193.617 221.232 cv
193.603 221.232 193.603 221.232 193.603 221.232 cv
193.603 221.232 li
193.59 221.232 li
193.59 221.232 193.59 221.204 193.575 221.204 cv
193.562 221.19 193.548 221.177 193.534 221.149 cv
193.534 221.149 li
193.493 221.107 193.434 221.039 193.383 220.984 cv
193.3 220.873 193.187 220.777 193.067 220.667 cv
192.295 220.021 191.042 219.332 189.5 218.685 cv
189.225 218.561 188.908 218.451 188.605 218.327 cv
188.605 218.437 188.605 218.547 188.605 218.629 cv
188.605 218.685 188.605 218.74 188.605 218.795 cv
184.584 220.048 179.739 220.984 176.724 221.507 cv
176.724 224.055 li
176.724 224.839 176.679 225.625 176.614 226.395 cv
181.17 225.678 185.201 224.784 188.247 223.945 cv
188.398 222.843 188.495 221.728 188.564 220.612 cv
189.404 220.544 191.291 220.544 193.315 221.548 cv
193.3 221.755 193.3 221.962 193.273 222.168 cv
193.465 222.071 193.617 221.975 193.74 221.893 cv
193.837 221.728 193.796 221.563 193.74 221.424 cv
193.74 221.424 193.724 221.424 193.724 221.397 cv
cp
187.538 241.113 mo
187.596 241.113 187.642 241.113 187.669 241.113 cv
187.765 241.113 187.858 241.113 187.931 241.085 cv
188.137 241.003 188.454 240.562 188.315 239.915 cv
187.538 241.113 li
cp
187.504 195.884 mo
187.615 195.789 187.627 195.639 187.229 195.308 cv
187.092 195.197 186.939 195.073 186.774 194.977 cv
187.325 195.955 li
187.395 195.94 187.449 195.926 187.504 195.884 cv
cp
193.769 217.941 mo
193.947 217.762 193.724 217.472 193.521 217.252 cv
193.521 217.982 li
193.617 217.982 193.724 217.969 193.796 217.941 cv
193.796 217.941 193.782 217.941 193.769 217.941 cv
cp
176.724 197.826 mo
176.724 202.893 li
179.753 202.287 182.41 201.626 184.502 201.035 cv
184.09 200.181 183.635 199.354 183.167 198.542 cv
183.759 198.556 186.138 198.349 188.935 199.134 cv
188.935 199.122 188.935 199.122 188.935 199.122 cv
188.99 199.259 189.059 199.382 189.115 199.52 cv
189.142 199.52 189.17 199.492 189.197 199.492 cv
189.225 199.492 189.253 199.479 189.28 199.465 cv
189.418 199.396 189.569 199.204 189.128 198.942 cv
189.005 198.874 188.881 198.804 188.74 198.736 cv
188.74 198.736 li
187.215 197.936 184.832 197.138 181.762 196.339 cv
181.804 196.395 181.845 196.463 181.887 196.531 cv
180.441 196.959 178.72 197.427 176.724 197.826 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
109.399 239.929 mo
109.345 240.025 109.248 240.19 109.262 240.272 cv
109.274 240.37 109.33 240.425 109.478 240.479 cv
109.436 240.479 109.413 240.466 109.385 240.466 cv
109.51 240.493 109.634 240.493 109.757 240.493 cv
109.399 239.929 li
cp
129.073 243.646 mo
128.976 243.549 128.894 243.467 128.798 243.371 cv
124.584 242.737 120.276 241.925 115.815 240.906 cv
115.76 240.851 115.718 240.796 115.677 240.741 cv
113.667 241.526 112.042 242.406 111.409 243.274 cv
111.327 243.356 111.161 243.646 111.53 243.88 cv
111.53 243.88 111.519 243.88 111.505 243.88 cv
111.725 243.976 111.946 244.059 112.139 244.142 cv
112.002 243.921 111.877 243.729 111.74 243.508 cv
114.204 242.365 116.585 242.64 117.082 242.71 cv
118.142 244.128 119.298 245.45 120.537 246.675 cv
125.356 247.887 131.193 248.906 137.596 249.524 cv
134.43 248.106 131.538 246.083 129.073 243.646 cv
cp
145.853 263.171 mo
146.008 263.185 146.142 263.2 146.311 263.214 cv
146.311 258.395 li
145.911 258.366 145.526 258.325 145.126 258.284 cv
145.853 263.171 li
cp
120.868 223.999 mo
120.868 221.507 li
117.853 220.984 113.002 220.048 108.985 218.795 cv
108.985 218.74 108.985 218.685 108.985 218.629 cv
108.985 218.547 108.985 218.437 108.985 218.327 cv
108.518 218.505 108.091 218.685 107.675 218.864 cv
107.306 219.015 106.949 219.18 106.618 219.332 cv
106.604 219.346 106.59 219.36 106.59 219.36 cv
106.562 219.373 106.549 219.373 106.521 219.387 cv
105.609 219.842 104.882 220.323 104.387 220.777 cv
104.305 220.832 104.236 220.915 104.18 220.97 cv
104.126 221.039 104.084 221.094 104.03 221.149 cv
104.03 221.149 li
104.015 221.177 104.002 221.19 103.988 221.204 cv
103.974 221.232 li
103.974 221.232 li
103.961 221.232 li
103.961 221.232 li
103.961 221.232 li
103.961 221.245 103.961 221.245 103.961 221.245 cv
103.947 221.245 li
103.947 221.245 103.947 221.259 103.933 221.273 cv
103.933 221.273 li
103.933 221.287 li
103.933 221.3 li
103.919 221.3 li
103.905 221.3 li
103.905 221.314 li
103.905 221.328 103.905 221.328 103.905 221.328 cv
103.892 221.342 li
103.878 221.342 li
103.878 221.355 li
103.878 221.355 103.878 221.355 103.864 221.369 cv
103.864 221.383 li
103.864 221.397 103.864 221.397 103.864 221.397 cv
103.848 221.397 li
103.848 221.424 li
103.83 221.424 li
103.83 221.438 li
103.83 221.438 103.83 221.438 103.83 221.452 cv
103.83 221.452 li
103.823 221.465 103.823 221.48 103.823 221.48 cv
103.823 221.48 li
103.809 221.493 li
103.809 221.507 li
103.809 221.521 li
103.795 221.534 li
103.795 221.548 103.795 221.548 103.795 221.548 cv
103.795 221.548 li
103.782 221.563 103.782 221.563 103.782 221.575 cv
103.782 221.575 li
103.782 221.604 li
103.767 221.604 li
103.767 221.617 li
103.767 221.63 103.767 221.63 103.767 221.63 cv
103.767 221.645 li
103.767 221.645 103.767 221.658 103.767 221.672 cv
103.767 221.672 li
103.767 221.687 li
103.767 221.699 li
103.767 221.699 li
103.767 221.714 103.767 221.728 103.767 221.728 cv
103.767 221.728 li
103.767 221.741 li
103.767 221.755 103.767 221.755 103.767 221.769 cv
103.782 221.782 li
103.782 221.796 li
103.782 221.796 103.782 221.796 103.782 221.81 cv
103.795 221.81 li
103.809 221.837 li
103.809 221.852 li
103.809 221.852 li
103.823 221.852 li
103.823 221.865 103.823 221.865 103.83 221.879 cv
103.83 221.879 li
103.83 221.906 103.83 221.906 103.83 221.906 cv
103.961 221.989 104.112 222.085 104.292 222.168 cv
104.277 221.962 104.264 221.755 104.25 221.548 cv
106.302 220.544 108.201 220.544 109.027 220.626 cv
109.083 221.741 109.179 222.843 109.33 223.945 cv
112.369 224.797 116.407 225.678 120.978 226.395 cv
120.892 225.61 120.868 224.812 120.868 223.999 cv
cp
107.279 202.204 mo
107.444 201.806 107.595 201.419 107.775 201.035 cv
108.325 201.171 110.417 201.819 111.877 203.719 cv
111.53 204.531 111.23 205.344 110.969 206.184 cv
112.524 207.533 114.547 209.075 117.041 210.865 cv
117.811 210.685 118.579 210.534 119.381 210.382 cv
119.863 210.272 120.373 210.19 120.868 210.107 cv
120.868 204.725 li
117.865 203.389 115.223 202.329 113.075 201.613 cv
113.075 201.613 113.075 201.613 113.062 201.613 cv
113.035 201.599 112.993 201.599 112.961 201.584 cv
112.938 201.572 112.896 201.557 112.854 201.544 cv
112.854 201.544 112.84 201.544 112.828 201.544 cv
110.879 200.911 109.372 200.581 108.339 200.581 cv
108.215 200.581 108.077 200.581 107.951 200.593 cv
107.926 200.593 107.912 200.593 107.899 200.607 cv
107.899 200.607 li
107.857 200.607 107.843 200.607 107.829 200.607 cv
107.815 200.607 li
107.802 200.607 107.775 200.622 107.747 200.622 cv
107.747 200.622 li
107.747 200.634 li
107.416 200.717 107.141 200.938 107.031 201.544 cv
107.017 201.489 107.017 201.461 107.017 201.419 cv
107.017 201.475 107.017 201.516 107.031 201.584 cv
107.083 201.764 107.168 201.971 107.279 202.204 cv
cp
146.311 174.078 mo
146.142 174.105 146.008 174.105 145.853 174.105 cv
145.126 179.033 li
145.526 178.964 145.911 178.938 146.311 178.909 cv
146.311 174.078 li
cp
104.03 217.982 mo
104.03 217.252 li
103.823 217.487 103.617 217.762 103.782 217.941 cv
103.848 217.969 103.933 217.982 104.03 217.982 cv
cp
110.417 195.486 mo
110.349 195.308 110.294 195.128 110.28 194.949 cv
110.318 194.564 110.569 194.234 111.147 194.068 cv
110.417 195.486 li
cp
f
148.651 252.305 mo
131.771 252.305 120.441 238.001 120.441 224.646 cv
120.441 186.592 li
176.875 186.592 li
176.875 224.646 li
176.875 238.001 165.544 252.305 148.651 252.305 cv
148.651 252.305 li
cp
3.09944e-05 3.09944e-05 3.09944e-05 3.09944e-05 cmyk
f
164.319 224.646 mo
164.319 231.103 158.385 239.735 148.651 239.735 cv
138.917 239.735 133.011 231.103 133.011 224.646 cv
133.011 220.984 133.011 199.148 133.011 199.148 cv
164.319 199.148 li
164.319 199.148 164.319 220.984 164.319 224.646 cv
cp
122.327 188.479 mo
122.327 224.646 li
122.327 237.079 132.901 250.404 148.651 250.404 cv
164.416 250.404 174.989 237.079 174.989 224.646 cv
174.989 188.479 li
122.327 188.479 li
cp
.034302 .990936 1 .003143 cmyk
f
126.179 196.767 mo
126.25 194.757 127.793 194.288 127.806 194.288 cv
127.806 194.288 li
127.821 194.288 129.348 194.757 129.417 196.767 cv
126.179 196.767 li
cp
131.235 196.767 mo
131.125 196.767 li
130.873 194.371 li
131.204 194.329 131.441 194.081 131.441 193.779 cv
131.441 193.434 131.162 193.187 130.835 193.187 cv
130.767 193.187 li
130.698 192.099 li
130.767 192.099 li
130.959 192.099 li
131.015 192.099 131.069 192.059 131.069 191.989 cv
131.069 191.231 li
130.711 191.231 li
130.711 191.618 li
130.23 191.618 li
130.23 191.231 li
129.831 191.231 li
129.831 191.618 li
129.348 191.618 li
129.348 191.231 li
129.005 191.231 li
129.005 191.976 li
129.005 192.031 129.06 192.099 129.112 192.099 cv
129.321 192.099 li
129.376 192.099 li
129.321 193.187 li
128.646 193.187 li
128.519 190.874 li
128.716 190.874 li
128.784 190.874 128.822 190.846 128.822 190.764 cv
128.822 190.007 li
128.468 190.007 li
128.468 190.364 li
127.982 190.364 li
127.982 190.007 li
127.614 190.007 li
127.614 190.364 li
127.118 190.364 li
127.118 190.007 li
126.773 190.007 li
126.773 190.764 li
126.773 190.805 126.815 190.86 126.885 190.874 cv
127.059 190.874 li
126.939 193.187 li
126.265 193.187 li
126.195 192.099 li
126.25 192.099 li
126.458 192.099 li
126.509 192.099 126.581 192.059 126.581 191.989 cv
126.581 191.231 li
126.237 191.231 li
126.237 191.618 li
125.728 191.618 li
125.728 191.231 li
125.356 191.231 li
125.356 191.618 li
124.847 191.618 li
124.847 191.231 li
124.502 191.231 li
124.502 191.976 li
124.502 192.031 124.557 192.099 124.64 192.099 cv
124.805 192.099 li
124.873 192.099 li
124.819 193.187 li
124.764 193.187 li
124.433 193.187 124.154 193.434 124.154 193.779 cv
124.154 194.081 124.402 194.329 124.706 194.357 cv
124.475 196.767 li
124.365 196.767 li
124.048 196.767 123.773 197.042 123.773 197.358 cv
123.773 197.676 124.048 197.936 124.365 197.936 cv
131.235 197.936 li
131.565 197.936 131.84 197.676 131.84 197.358 cv
131.84 197.042 131.565 196.767 131.235 196.767 cv
cp
.04416 3.09999e-05 .929229 3.09999e-05 cmyk
ef
147.124 196.767 mo
147.206 194.757 148.733 194.288 148.748 194.288 cv
148.748 194.288 li
148.762 194.288 150.289 194.757 150.386 196.767 cv
147.124 196.767 li
cp
152.204 196.767 mo
152.052 196.767 li
151.832 194.371 li
152.162 194.329 152.382 194.081 152.382 193.779 cv
152.382 193.434 152.106 193.187 151.791 193.187 cv
151.708 193.187 li
151.639 192.099 li
151.708 192.099 li
151.914 192.099 li
151.969 192.099 152.007 192.059 152.007 191.989 cv
152.007 191.231 li
151.681 191.231 li
151.681 191.618 li
151.156 191.618 li
151.156 191.231 li
150.799 191.231 li
150.799 191.618 li
150.289 191.618 li
150.289 191.231 li
149.956 191.231 li
149.956 191.976 li
149.956 192.031 150.028 192.099 150.069 192.099 cv
150.245 192.099 li
150.331 192.099 li
150.259 193.187 li
149.601 193.187 li
149.477 190.874 li
149.648 190.874 li
149.711 190.874 149.781 190.846 149.781 190.764 cv
149.781 190.007 li
149.436 190.007 li
149.436 190.364 li
148.927 190.364 li
148.927 190.007 li
148.569 190.007 li
148.569 190.364 li
148.059 190.364 li
148.059 190.007 li
147.715 190.007 li
147.715 190.764 li
147.715 190.805 147.77 190.86 147.838 190.874 cv
148.032 190.874 li
147.904 193.187 li
147.233 193.187 li
147.15 192.099 li
147.206 192.099 li
147.398 192.099 li
147.454 192.099 147.536 192.059 147.536 191.989 cv
147.536 191.231 li
147.164 191.231 li
147.164 191.618 li
146.668 191.618 li
146.668 191.231 li
146.324 191.231 li
146.324 191.618 li
145.801 191.618 li
145.801 191.231 li
145.471 191.231 li
145.471 191.976 li
145.471 192.031 145.526 192.099 145.581 192.099 cv
145.773 192.099 li
145.843 192.099 li
145.773 193.187 li
145.719 193.187 li
145.388 193.187 145.113 193.434 145.113 193.779 cv
145.113 194.081 145.361 194.329 145.664 194.357 cv
145.416 196.767 li
145.333 196.767 li
144.989 196.767 144.741 197.042 144.741 197.358 cv
144.741 197.676 144.989 197.936 145.333 197.936 cv
152.204 197.936 li
152.52 197.936 152.781 197.676 152.781 197.358 cv
152.781 197.042 152.52 196.767 152.204 196.767 cv
cp
ef
167.881 196.767 mo
167.953 194.757 169.496 194.288 169.496 194.288 cv
169.523 194.288 li
169.523 194.288 171.052 194.757 171.147 196.767 cv
167.881 196.767 li
cp
172.952 196.767 mo
172.841 196.767 li
172.594 194.371 li
172.91 194.329 173.144 194.081 173.144 193.779 cv
173.144 193.434 172.866 193.187 172.539 193.187 cv
172.469 193.187 li
172.415 192.099 li
172.469 192.099 li
172.662 192.099 li
172.717 192.099 172.772 192.059 172.772 191.989 cv
172.772 191.231 li
172.428 191.231 li
172.428 191.618 li
171.919 191.618 li
171.919 191.231 li
171.547 191.231 li
171.547 191.618 li
171.052 191.618 li
171.052 191.231 li
170.707 191.231 li
170.707 191.976 li
170.707 192.031 170.762 192.099 170.832 192.099 cv
171.023 192.099 li
171.079 192.099 li
171.023 193.187 li
170.376 193.187 li
170.222 190.874 li
170.417 190.874 li
170.486 190.874 170.542 190.846 170.542 190.764 cv
170.542 190.007 li
170.199 190.007 li
170.199 190.364 li
169.685 190.364 li
169.685 190.007 li
169.33 190.007 li
169.33 190.364 li
168.821 190.364 li
168.821 190.007 li
168.473 190.007 li
168.473 190.764 li
168.473 190.805 168.532 190.86 168.601 190.874 cv
168.779 190.874 li
168.656 193.187 li
167.967 193.187 li
167.923 192.099 li
167.967 192.099 li
168.17 192.099 li
168.211 192.099 168.297 192.059 168.297 191.989 cv
168.297 191.231 li
167.923 191.231 li
167.923 191.618 li
167.43 191.618 li
167.43 191.231 li
167.072 191.231 li
167.072 191.618 li
166.563 191.618 li
166.563 191.231 li
166.219 191.231 li
166.219 191.976 li
166.219 192.031 166.274 192.099 166.329 192.099 cv
166.521 192.099 li
166.591 192.099 li
166.521 193.187 li
166.467 193.187 li
166.137 193.187 165.871 193.434 165.871 193.779 cv
165.871 194.081 166.095 194.329 166.408 194.357 cv
166.192 196.767 li
166.068 196.767 li
165.751 196.767 165.49 197.042 165.49 197.358 cv
165.49 197.676 165.751 197.936 166.068 197.936 cv
172.952 197.936 li
173.295 197.936 173.544 197.676 173.544 197.358 cv
173.544 197.042 173.295 196.767 172.952 196.767 cv
cp
ef
126.179 218.368 mo
126.25 216.358 127.793 215.89 127.806 215.89 cv
127.806 215.89 li
127.821 215.89 129.348 216.358 129.417 218.368 cv
126.179 218.368 li
cp
131.235 218.368 mo
131.125 218.368 li
130.873 215.959 li
131.204 215.945 131.441 215.697 131.441 215.381 cv
131.441 215.037 131.162 214.774 130.835 214.774 cv
130.767 214.774 li
130.698 213.714 li
130.767 213.714 li
130.959 213.714 li
131.015 213.714 131.069 213.673 131.069 213.59 cv
131.069 212.834 li
130.711 212.834 li
130.711 213.219 li
130.23 213.219 li
130.23 212.834 li
129.831 212.834 li
129.831 213.219 li
129.348 213.219 li
129.348 212.834 li
129.005 212.834 li
129.005 213.59 li
129.005 213.646 129.06 213.714 129.112 213.714 cv
129.321 213.714 li
129.376 213.714 li
129.321 214.774 li
128.646 214.774 li
128.519 212.477 li
128.716 212.477 li
128.784 212.477 128.822 212.435 128.822 212.365 cv
128.822 211.609 li
128.468 211.609 li
128.468 211.98 li
127.982 211.98 li
127.982 211.609 li
127.614 211.609 li
127.614 211.98 li
127.118 211.98 li
127.118 211.609 li
126.773 211.609 li
126.773 212.352 li
126.773 212.407 126.815 212.462 126.885 212.477 cv
127.059 212.477 li
126.939 214.774 li
126.265 214.774 li
126.195 213.714 li
126.25 213.714 li
126.458 213.714 li
126.509 213.714 126.581 213.673 126.581 213.59 cv
126.581 212.834 li
126.237 212.834 li
126.237 213.219 li
125.728 213.219 li
125.728 212.834 li
125.356 212.834 li
125.356 213.219 li
124.847 213.219 li
124.847 212.834 li
124.502 212.834 li
124.502 213.59 li
124.502 213.646 124.557 213.714 124.64 213.714 cv
124.805 213.714 li
124.873 213.714 li
124.819 214.774 li
124.764 214.774 li
124.433 214.774 124.154 215.037 124.154 215.381 cv
124.154 215.683 124.402 215.917 124.706 215.959 cv
124.475 218.368 li
124.365 218.368 li
124.048 218.368 123.773 218.617 123.773 218.96 cv
123.773 219.277 124.048 219.511 124.365 219.511 cv
131.235 219.511 li
131.565 219.511 131.84 219.277 131.84 218.96 cv
131.84 218.617 131.565 218.368 131.235 218.368 cv
cp
ef
167.881 218.368 mo
167.953 216.358 169.496 215.89 169.496 215.89 cv
169.523 215.89 li
169.523 215.89 171.052 216.358 171.147 218.368 cv
167.881 218.368 li
cp
172.952 218.368 mo
172.841 218.368 li
172.594 215.959 li
172.91 215.945 173.144 215.697 173.144 215.381 cv
173.144 215.037 172.866 214.774 172.539 214.774 cv
172.469 214.774 li
172.415 213.714 li
172.469 213.714 li
172.662 213.714 li
172.717 213.714 172.772 213.673 172.772 213.59 cv
172.772 212.834 li
172.428 212.834 li
172.428 213.219 li
171.919 213.219 li
171.919 212.834 li
171.547 212.834 li
171.547 213.219 li
171.052 213.219 li
171.052 212.834 li
170.707 212.834 li
170.707 213.59 li
170.707 213.646 170.762 213.714 170.832 213.714 cv
171.023 213.714 li
171.079 213.714 li
171.023 214.774 li
170.376 214.774 li
170.222 212.477 li
170.417 212.477 li
170.486 212.477 170.542 212.435 170.542 212.365 cv
170.542 211.609 li
170.199 211.609 li
170.199 211.98 li
169.685 211.98 li
169.685 211.609 li
169.33 211.609 li
169.33 211.98 li
168.821 211.98 li
168.821 211.609 li
168.473 211.609 li
168.473 212.352 li
168.473 212.407 168.532 212.462 168.601 212.477 cv
168.779 212.477 li
168.656 214.774 li
167.967 214.774 li
167.923 213.714 li
167.967 213.714 li
168.17 213.714 li
168.211 213.714 168.297 213.673 168.297 213.59 cv
168.297 212.834 li
167.923 212.834 li
167.923 213.219 li
167.43 213.219 li
167.43 212.834 li
167.072 212.834 li
167.072 213.219 li
166.563 213.219 li
166.563 212.834 li
166.219 212.834 li
166.219 213.59 li
166.219 213.646 166.274 213.714 166.329 213.714 cv
166.521 213.714 li
166.591 213.714 li
166.521 214.774 li
166.467 214.774 li
166.137 214.774 165.871 215.037 165.871 215.381 cv
165.871 215.683 166.095 215.917 166.408 215.959 cv
166.192 218.368 li
166.068 218.368 li
165.751 218.368 165.49 218.617 165.49 218.96 cv
165.49 219.277 165.751 219.511 166.068 219.511 cv
172.952 219.511 li
173.295 219.511 173.544 219.277 173.544 218.96 cv
173.544 218.617 173.295 218.368 172.952 218.368 cv
cp
ef
133.754 240.81 mo
132.389 239.322 133.163 237.918 133.163 237.905 cv
133.163 237.905 li
133.19 237.905 134.593 237.106 136.067 238.496 cv
133.754 240.81 li
cp
137.331 237.203 mo
137.251 237.299 li
135.406 235.771 li
135.6 235.523 135.6 235.192 135.365 234.958 cv
135.131 234.738 134.729 234.738 134.512 234.958 cv
134.457 235.027 li
133.672 234.325 li
133.713 234.285 li
133.851 234.132 li
133.893 234.105 133.905 234.036 133.851 233.967 cv
133.328 233.43 li
133.08 233.665 li
133.341 233.967 li
132.983 234.325 li
132.722 234.036 li
132.446 234.285 li
132.722 234.56 li
132.347 234.917 li
132.116 234.655 li
131.854 234.903 li
132.364 235.426 li
132.418 235.468 132.501 235.468 132.556 235.426 cv
132.678 235.302 li
132.736 235.233 li
133.438 236.018 li
132.966 236.473 li
131.235 234.958 li
131.4 234.848 li
131.441 234.793 131.451 234.71 131.4 234.669 cv
130.873 234.132 li
130.602 234.38 li
130.873 234.655 li
130.519 235 li
130.257 234.738 li
129.992 235 li
130.257 235.248 li
129.899 235.633 li
129.638 235.358 li
129.383 235.605 li
129.914 236.128 li
129.955 236.17 130.034 236.17 130.092 236.128 cv
130.23 235.991 li
131.754 237.712 li
131.29 238.193 li
130.478 237.505 li
130.519 237.45 li
130.657 237.326 li
130.698 237.272 130.711 237.203 130.67 237.148 cv
130.12 236.611 li
129.885 236.858 li
130.147 237.106 li
129.803 237.492 li
129.542 237.203 li
129.266 237.479 li
129.542 237.74 li
129.197 238.083 li
128.922 237.836 li
128.675 238.07 li
129.197 238.607 li
129.238 238.634 129.321 238.648 129.376 238.607 cv
129.513 238.455 li
129.555 238.428 li
130.257 239.198 li
130.23 239.254 li
129.982 239.502 129.982 239.888 130.23 240.094 cv
130.45 240.313 130.794 240.313 131.042 240.148 cv
132.556 241.993 li
132.474 242.09 li
132.24 242.297 132.24 242.682 132.474 242.916 cv
132.722 243.15 133.093 243.15 133.328 242.916 cv
138.188 238.056 li
138.408 237.822 138.408 237.45 138.188 237.23 cv
137.94 236.968 137.554 236.968 137.331 237.203 cv
cp
ef
161.594 238.496 mo
163.079 237.106 164.47 237.905 164.484 237.905 cv
164.484 237.905 li
164.498 237.918 165.238 239.322 163.892 240.81 cv
161.594 238.496 li
cp
159.472 237.23 mo
159.252 237.45 159.252 237.822 159.472 238.056 cv
164.333 242.916 li
164.552 243.15 164.935 243.15 165.187 242.916 cv
165.407 242.682 165.407 242.297 165.187 242.09 cv
165.09 241.993 li
166.632 240.148 li
166.866 240.313 167.224 240.313 167.43 240.094 cv
167.678 239.888 167.678 239.502 167.43 239.254 cv
167.403 239.198 li
168.091 238.428 li
168.153 238.455 li
168.284 238.607 li
168.339 238.648 168.422 238.634 168.46 238.607 cv
168.986 238.07 li
168.738 237.836 li
168.473 238.083 li
168.119 237.74 li
168.366 237.479 li
168.119 237.203 li
167.857 237.492 li
167.499 237.106 li
167.761 236.858 li
167.527 236.611 li
166.99 237.148 li
166.935 237.203 166.949 237.272 166.99 237.326 cv
167.127 237.45 li
167.168 237.505 li
166.356 238.193 li
165.902 237.712 li
167.43 235.991 li
167.568 236.128 li
167.623 236.17 167.706 236.17 167.734 236.128 cv
168.256 235.605 li
168.022 235.358 li
167.761 235.633 li
167.403 235.248 li
167.664 235 li
167.403 234.738 li
167.155 235 li
166.77 234.655 li
167.042 234.38 li
166.796 234.132 li
166.26 234.669 li
166.205 234.71 166.233 234.793 166.274 234.848 cv
166.408 234.958 li
164.677 236.473 li
164.222 236.018 li
164.924 235.233 li
164.966 235.302 li
165.09 235.426 li
165.145 235.468 165.238 235.468 165.255 235.426 cv
165.806 234.903 li
165.544 234.655 li
165.28 234.917 li
164.935 234.56 li
165.201 234.285 li
164.935 234.036 li
164.677 234.325 li
164.319 233.967 li
164.594 233.665 li
164.333 233.43 li
163.809 233.967 li
163.747 234.036 163.765 234.105 163.809 234.132 cv
163.933 234.285 li
163.988 234.325 li
163.217 235.027 li
163.149 234.958 li
162.914 234.738 162.529 234.738 162.292 234.958 cv
162.061 235.192 162.061 235.523 162.254 235.771 cv
160.396 237.299 li
160.326 237.203 li
160.092 236.968 159.72 236.968 159.472 237.23 cv
cp
ef
150.579 231.819 mo
150.207 231.819 149.917 232.149 149.917 232.495 cv
149.917 232.907 150.207 233.21 150.579 233.21 cv
150.95 233.21 151.267 232.907 151.267 232.495 cv
151.267 232.149 150.95 231.819 150.579 231.819 cv
3.09944e-05 3.09944e-05 3.09944e-05 3.09944e-05 cmyk
ef
146.82 231.847 mo
146.476 231.847 146.142 232.149 146.142 232.521 cv
146.142 232.907 146.476 233.21 146.82 233.21 cv
147.233 233.21 147.522 232.907 147.522 232.521 cv
147.522 232.149 147.233 231.847 146.82 231.847 cv
ef
148.651 211.663 mo
150.152 211.663 152.135 210.424 152.135 207.959 cv
152.135 205.124 152.135 203.004 152.135 203.004 cv
145.182 203.004 li
145.182 203.004 145.182 205.124 145.182 207.959 cv
145.182 210.424 147.164 211.663 148.651 211.663 cv
cp
1 .808286 .226658 .066987 cmyk
f
147.673 204.958 mo
147.673 204.518 147.301 204.159 146.875 204.159 cv
146.445 204.159 146.09 204.518 146.09 204.958 cv
146.09 205.399 146.445 205.757 146.875 205.757 cv
147.301 205.757 147.673 205.399 147.673 204.958 cv
cp
3.09944e-05 3.09944e-05 3.09944e-05 3.09944e-05 cmyk
ef
149.45 206.748 mo
149.45 206.307 149.088 205.95 148.651 205.95 cv
148.224 205.95 147.88 206.307 147.88 206.748 cv
147.88 207.175 148.224 207.533 148.651 207.533 cv
149.088 207.533 149.45 207.175 149.45 206.748 cv
cp
ef
151.226 208.51 mo
151.226 208.07 150.868 207.725 150.441 207.725 cv
150 207.725 149.643 208.07 149.643 208.51 cv
149.643 208.952 150 209.309 150.441 209.309 cv
150.868 209.309 151.226 208.952 151.226 208.51 cv
cp
ef
150.441 205.757 mo
150.868 205.757 151.226 205.399 151.226 204.958 cv
151.226 204.518 150.868 204.159 150.441 204.159 cv
150 204.159 149.643 204.518 149.643 204.958 cv
149.643 205.399 150 205.757 150.441 205.757 cv
cp
ef
146.875 209.309 mo
147.301 209.309 147.673 208.952 147.673 208.51 cv
147.673 208.07 147.301 207.725 146.875 207.725 cv
146.445 207.725 146.09 208.07 146.09 208.51 cv
146.09 208.952 146.445 209.309 146.875 209.309 cv
cp
ef
148.651 223.655 mo
150.152 223.655 152.135 222.416 152.135 219.952 cv
152.135 217.129 152.135 214.981 152.135 214.981 cv
145.182 214.981 li
145.182 214.981 145.182 217.129 145.182 219.952 cv
145.182 222.416 147.164 223.655 148.651 223.655 cv
cp
1 .808286 .226658 .066987 cmyk
f
147.673 216.95 mo
147.673 216.509 147.301 216.152 146.875 216.152 cv
146.445 216.152 146.09 216.509 146.09 216.95 cv
146.09 217.39 146.445 217.734 146.875 217.734 cv
147.301 217.734 147.673 217.39 147.673 216.95 cv
cp
3.09944e-05 3.09944e-05 3.09944e-05 3.09944e-05 cmyk
ef
149.45 218.727 mo
149.45 218.285 149.088 217.941 148.651 217.941 cv
148.224 217.941 147.88 218.285 147.88 218.727 cv
147.88 219.167 148.224 219.497 148.651 219.497 cv
149.088 219.497 149.45 219.167 149.45 218.727 cv
cp
ef
151.226 220.516 mo
151.226 220.075 150.868 219.718 150.441 219.718 cv
150 219.718 149.643 220.075 149.643 220.516 cv
149.643 220.942 150 221.3 150.441 221.3 cv
150.868 221.3 151.226 220.942 151.226 220.516 cv
cp
ef
150.441 217.734 mo
150.868 217.734 151.226 217.39 151.226 216.95 cv
151.226 216.509 150.868 216.152 150.441 216.152 cv
150 216.152 149.643 216.509 149.643 216.95 cv
149.643 217.39 150 217.734 150.441 217.734 cv
cp
ef
146.875 221.3 mo
147.301 221.3 147.673 220.942 147.673 220.516 cv
147.673 220.075 147.301 219.718 146.875 219.718 cv
146.445 219.718 146.09 220.075 146.09 220.516 cv
146.09 220.942 146.445 221.3 146.875 221.3 cv
cp
ef
139.068 223.655 mo
140.566 223.655 142.538 222.416 142.538 219.952 cv
142.538 217.129 142.538 214.981 142.538 214.981 cv
135.585 214.981 li
135.585 214.981 135.585 217.129 135.585 219.952 cv
135.585 222.416 137.554 223.655 139.068 223.655 cv
cp
1 .808286 .226658 .066987 cmyk
f
138.063 216.95 mo
138.063 216.509 137.72 216.152 137.279 216.152 cv
136.852 216.152 136.49 216.509 136.49 216.95 cv
136.49 217.39 136.852 217.734 137.279 217.734 cv
137.72 217.734 138.063 217.39 138.063 216.95 cv
cp
3.09944e-05 3.09944e-05 3.09944e-05 3.09944e-05 cmyk
ef
139.853 218.727 mo
139.853 218.285 139.496 217.941 139.068 217.941 cv
138.628 217.941 138.271 218.285 138.271 218.727 cv
138.271 219.167 138.628 219.497 139.068 219.497 cv
139.496 219.497 139.853 219.167 139.853 218.727 cv
cp
ef
141.63 220.516 mo
141.63 220.075 141.286 219.718 140.838 219.718 cv
140.405 219.718 140.046 220.075 140.046 220.516 cv
140.046 220.942 140.405 221.3 140.838 221.3 cv
141.286 221.3 141.63 220.942 141.63 220.516 cv
cp
ef
140.838 217.734 mo
141.286 217.734 141.63 217.39 141.63 216.95 cv
141.63 216.509 141.286 216.152 140.838 216.152 cv
140.405 216.152 140.046 216.509 140.046 216.95 cv
140.046 217.39 140.405 217.734 140.838 217.734 cv
cp
ef
137.279 221.3 mo
137.72 221.3 138.063 220.942 138.063 220.516 cv
138.063 220.075 137.72 219.718 137.279 219.718 cv
136.852 219.718 136.49 220.075 136.49 220.516 cv
136.49 220.942 136.852 221.3 137.279 221.3 cv
cp
ef
158.247 223.655 mo
159.747 223.655 161.745 222.416 161.745 219.952 cv
161.745 217.129 161.745 214.981 161.745 214.981 cv
154.792 214.981 li
154.792 214.981 154.792 217.129 154.792 219.952 cv
154.792 222.416 156.747 223.655 158.247 223.655 cv
cp
1 .808286 .226658 .066987 cmyk
f
157.256 216.95 mo
157.256 216.509 156.912 216.152 156.468 216.152 cv
156.044 216.152 155.687 216.509 155.687 216.95 cv
155.687 217.39 156.044 217.734 156.468 217.734 cv
156.912 217.734 157.256 217.39 157.256 216.95 cv
cp
3.09944e-05 3.09944e-05 3.09944e-05 3.09944e-05 cmyk
ef
159.046 218.727 mo
159.046 218.285 158.688 217.941 158.247 217.941 cv
157.821 217.941 157.462 218.285 157.462 218.727 cv
157.462 219.167 157.821 219.497 158.247 219.497 cv
158.688 219.497 159.046 219.167 159.046 218.727 cv
cp
ef
160.818 220.516 mo
160.818 220.075 160.478 219.718 160.036 219.718 cv
159.596 219.718 159.238 220.075 159.238 220.516 cv
159.238 220.942 159.596 221.3 160.036 221.3 cv
160.478 221.3 160.818 220.942 160.818 220.516 cv
cp
ef
160.036 217.734 mo
160.478 217.734 160.818 217.39 160.818 216.95 cv
160.818 216.509 160.478 216.152 160.036 216.152 cv
159.596 216.152 159.238 216.509 159.238 216.95 cv
159.238 217.39 159.596 217.734 160.036 217.734 cv
cp
ef
156.468 221.3 mo
156.912 221.3 157.256 220.942 157.256 220.516 cv
157.256 220.075 156.912 219.718 156.468 219.718 cv
156.044 219.718 155.687 220.075 155.687 220.516 cv
155.687 220.942 156.044 221.3 156.468 221.3 cv
cp
ef
148.651 235.647 mo
150.152 235.647 152.135 234.395 152.135 231.943 cv
152.135 229.093 152.135 226.987 152.135 226.987 cv
145.182 226.987 li
145.182 226.987 145.182 229.093 145.182 231.943 cv
145.182 234.395 147.164 235.647 148.651 235.647 cv
cp
1 .808286 .226658 .066987 cmyk
f
147.673 228.942 mo
147.673 228.515 147.301 228.157 146.875 228.157 cv
146.445 228.157 146.09 228.515 146.09 228.942 cv
146.09 229.368 146.445 229.727 146.875 229.727 cv
147.301 229.727 147.673 229.368 147.673 228.942 cv
cp
3.09944e-05 3.09944e-05 3.09944e-05 3.09944e-05 cmyk
ef
149.45 230.732 mo
149.45 230.291 149.088 229.933 148.651 229.933 cv
148.224 229.933 147.88 230.291 147.88 230.732 cv
147.88 231.158 148.224 231.517 148.651 231.517 cv
149.088 231.517 149.45 231.158 149.45 230.732 cv
cp
ef
151.226 232.495 mo
151.226 232.054 150.868 231.709 150.441 231.709 cv
150 231.709 149.643 232.054 149.643 232.495 cv
149.643 232.935 150 233.293 150.441 233.293 cv
150.868 233.293 151.226 232.935 151.226 232.495 cv
cp
ef
150.441 229.727 mo
150.868 229.727 151.226 229.368 151.226 228.942 cv
151.226 228.515 150.868 228.157 150.441 228.157 cv
150 228.157 149.643 228.515 149.643 228.942 cv
149.643 229.368 150 229.727 150.441 229.727 cv
cp
ef
146.875 233.293 mo
147.301 233.293 147.673 232.935 147.673 232.495 cv
147.673 232.054 147.301 231.709 146.875 231.709 cv
146.445 231.709 146.09 232.054 146.09 232.495 cv
146.09 232.935 146.445 233.293 146.875 233.293 cv
cp
ef
748.421 235.839 mo
748.421 223.476 li
744.346 223.476 li
743.767 226.092 743.299 228.763 743.052 230.843 cv
725.826 230.843 li
725.826 210.218 li
738.426 210.218 li
738.673 212.146 739.153 214.32 739.718 216.069 cv
743.341 216.069 li
743.341 199.712 li
739.718 199.712 li
739.153 201.461 738.756 203.485 738.426 205.564 cv
725.826 205.564 li
725.826 186.441 li
742.969 186.441 li
743.134 188.368 743.698 191.025 744.192 193.655 cv
748.283 193.655 li
748.283 181.636 li
712.732 181.636 li
712.732 185.078 li
714.813 185.559 717.306 185.973 719.728 186.123 cv
719.728 231.324 li
717.306 231.517 714.813 231.888 712.732 232.384 cv
712.732 235.839 li
748.421 235.839 li
cp
704.239 208.606 mo
704.239 224.027 694.767 231.007 681.04 231.007 cv
678.784 231.007 675.491 230.773 673.26 230.457 cv
673.26 186.592 li
675.491 186.536 679.114 186.371 682.086 186.371 cv
696.762 186.371 704.239 193.916 704.239 208.606 cv
cp
710.642 208.208 mo
710.642 189.759 700.385 181.401 682.801 181.401 cv
677.171 181.401 671.306 181.636 667.079 181.636 cv
660.169 181.636 li
660.169 185.078 li
662.232 185.559 664.753 185.973 667.135 186.123 cv
667.135 231.324 li
664.753 231.517 662.232 231.888 660.169 232.384 cv
660.169 235.839 li
667.135 235.839 li
670.273 235.839 674.859 236.06 680.256 236.06 cv
698.056 236.06 710.642 226.808 710.642 208.208 cv
cp
632.179 209.075 mo
632.179 223.476 623.505 231.172 614.032 231.172 cv
601.847 231.172 595.968 221.782 595.968 208.208 cv
595.968 193.999 604.463 186.22 614.032 186.22 cv
625.515 186.22 632.179 194.564 632.179 209.075 cv
cp
638.758 208.125 mo
638.758 190.694 629.507 180.906 614.817 180.906 cv
600.883 180.906 589.372 191.066 589.372 209.323 cv
589.372 225.707 597.182 236.556 613.384 236.556 cv
627.276 236.556 638.758 226.271 638.758 208.125 cv
cp
585.781 185.078 mo
585.781 181.636 li
567.481 181.636 li
567.481 185.078 li
569.396 185.628 571.736 186.069 573.996 186.22 cv
573.996 203.155 574.051 218.877 574.531 228.433 cv
572.521 224.592 570.456 220.97 568.117 217.197 cv
545.646 181.636 li
530.462 181.636 li
530.462 185.078 li
532.554 185.559 535.045 185.973 537.44 186.123 cv
537.44 231.241 li
535.045 231.42 532.554 231.888 530.462 232.384 cv
530.462 235.839 li
550.121 235.839 li
550.121 232.384 li
548.126 231.806 545.717 231.42 543.459 231.241 cv
543.459 214.32 543.459 198.487 542.907 188.767 cv
544.655 192.319 546.748 195.914 549.186 199.864 cv
571.89 235.839 li
580.066 235.839 li
580.066 186.22 li
582.021 185.973 584.018 185.559 585.781 185.078 cv
cp
516.611 195.914 mo
516.611 201.916 511.8 206.184 503.448 206.184 cv
501.025 206.184 499.358 206.115 498.452 206.032 cv
498.452 186.536 li
500.089 186.371 501.742 186.289 503.778 186.289 cv
512.039 186.289 516.611 188.85 516.611 195.914 cv
cp
527.873 235.839 mo
527.873 232.288 li
525.436 231.806 523.124 231.42 521.194 231.172 cv
510.36 215.518 li
509.149 213.742 507.785 211.828 506.424 210.218 cv
515.812 209.557 523.025 204.27 523.025 195.032 cv
523.025 184.912 515.344 181.401 505.143 181.401 cv
498.644 181.401 493.729 181.636 491.567 181.636 cv
485.365 181.636 li
485.365 185.078 li
487.465 185.559 489.958 185.973 492.379 186.123 cv
492.379 231.324 li
489.958 231.517 487.465 231.888 485.365 232.384 cv
485.365 235.839 li
504.895 235.839 li
504.895 232.384 li
502.953 231.806 500.625 231.517 498.452 231.324 cv
498.452 210.782 li
499.771 210.782 li
516.459 235.839 li
527.873 235.839 li
cp
479.218 235.839 mo
479.218 223.476 li
475.114 223.476 li
474.563 226.092 474.068 228.763 473.848 230.843 cv
456.612 230.843 li
456.612 210.218 li
469.236 210.218 li
469.429 212.146 469.938 214.32 470.503 216.069 cv
474.096 216.069 li
474.096 199.712 li
470.503 199.712 li
469.938 201.461 469.537 203.485 469.236 205.564 cv
456.612 205.564 li
456.612 186.441 li
473.752 186.441 li
473.909 188.368 474.482 191.025 474.949 193.655 cv
479.066 193.655 li
479.066 181.636 li
443.518 181.636 li
443.518 185.078 li
445.597 185.559 448.102 185.973 450.511 186.123 cv
450.511 231.324 li
448.102 231.517 445.597 231.888 443.518 232.384 cv
443.518 235.839 li
479.218 235.839 li
cp
399.088 186.123 mo
401.317 185.973 403.756 185.559 405.739 185.078 cv
405.739 181.636 li
387.137 181.636 li
387.137 185.078 li
388.498 185.463 390.649 185.876 392.177 186.069 cv
410.088 235.839 li
416.918 235.839 li
435.366 186.069 li
436.895 185.876 439.071 185.463 440.42 185.078 cv
440.42 181.636 li
422.37 181.636 li
422.37 185.078 li
424.394 185.559 426.706 185.973 428.937 186.123 cv
417.647 217.197 li
416.189 221.383 414.825 225.307 413.778 229.245 cv
413.695 229.245 li
412.568 225.142 411.052 220.887 409.923 217.693 cv
399.088 186.123 li
cp
380.93 209.075 mo
380.93 223.476 372.241 231.172 362.77 231.172 cv
350.55 231.172 344.718 221.782 344.718 208.208 cv
344.718 193.999 353.241 186.22 362.77 186.22 cv
374.279 186.22 380.93 194.564 380.93 209.075 cv
cp
387.497 208.125 mo
387.497 190.694 378.256 180.906 363.582 180.906 cv
349.593 180.906 338.139 191.066 338.139 209.323 cv
338.139 225.707 345.89 236.556 362.121 236.556 cv
376.014 236.556 387.497 226.271 387.497 208.125 cv
cp
334.517 211.98 mo
334.517 208.539 li
315.875 208.539 li
315.875 211.98 li
317.885 212.544 320.377 212.944 322.773 213.095 cv
322.773 229.63 li
319.565 230.69 316.184 231.241 312.282 231.241 cv
299.574 231.241 291.106 223.201 291.106 208.938 cv
291.106 193.544 301.267 186.123 312.653 186.123 cv
315.793 186.123 319.167 186.592 322.524 187.486 cv
322.704 189.759 323.034 192.154 323.571 194.881 cv
327.771 194.881 li
327.771 182.929 li
323.034 181.636 318.285 180.906 313.311 180.906 cv
295.399 180.906 284.581 193.201 284.581 209.736 cv
284.581 226.587 295.155 236.556 311.305 236.556 cv
317.006 236.556 323.503 235.468 328.968 233.485 cv
328.968 213.054 li
330.883 212.778 332.838 212.462 334.517 211.98 cv
cp
763.014 313.562 mo
763.014 295.28 li
753.776 295.28 li
753.292 298.157 752.813 300.937 752.618 303.265 cv
740.159 303.265 li
740.159 257.515 li
743.065 257.309 746.065 256.839 748.572 256.343 cv
748.572 248.535 li
719.272 248.535 li
719.272 256.343 li
721.78 256.839 724.781 257.309 727.657 257.515 cv
727.657 304.627 li
724.781 304.806 721.78 305.288 719.272 305.785 cv
719.272 313.562 li
763.014 313.562 li
cp
691.669 287.281 mo
674.129 287.281 li
679.719 271.736 li
681.069 268.114 682.004 264.329 682.801 261.065 cv
682.899 261.065 li
683.685 264.646 684.646 267.716 685.887 271.281 cv
691.669 287.281 li
cp
716.327 313.562 mo
716.327 305.785 li
714.798 305.288 712.856 304.901 711.22 304.806 cv
690.981 248.535 li
675.669 248.535 li
655.818 304.806 li
654.179 304.901 652.278 305.288 650.737 305.785 cv
650.737 313.562 li
675.201 313.562 li
675.201 305.785 li
673.179 305.385 670.576 304.901 668.347 304.736 cv
671.044 297.028 li
694.738 297.028 li
697.535 304.736 li
695.332 304.901 692.729 305.385 690.705 305.785 cv
690.705 313.562 li
716.327 313.562 li
cp
650.875 287.459 mo
650.875 279.46 li
624.675 279.46 li
624.675 287.281 li
627.057 287.859 630.059 288.34 632.923 288.532 cv
632.923 302.095 li
630.43 302.892 627.73 303.265 624.675 303.265 cv
611.458 303.265 603.941 295.182 603.941 281.386 cv
603.941 266.655 613.082 258.643 625.708 258.643 cv
628.295 258.643 631.104 258.919 633.705 259.621 cv
633.994 262.154 634.299 264.646 634.849 267.44 cv
644.514 267.44 li
644.514 250.007 li
638.525 248.451 632.453 247.584 626.383 247.584 cv
604.216 247.584 590.352 261.85 590.352 282.571 cv
590.352 302.383 602.482 314.541 623.023 314.541 cv
630.912 314.541 638.993 313.095 645.45 310.521 cv
645.45 288.436 li
647.268 288.147 649.113 287.859 650.875 287.459 cv
cp
586.798 256.44 mo
586.798 248.535 li
561.576 248.535 li
561.576 256.44 li
563.683 257.019 566.162 257.309 568.489 257.515 cv
568.489 289.111 li
568.489 300.195 564.345 304.242 554.734 304.242 cv
543.925 304.242 541.325 298.472 541.325 290.268 cv
541.325 257.515 li
543.541 257.309 546.047 257.019 548.25 256.44 cv
548.25 248.535 li
522.737 248.535 li
522.737 256.44 li
524.569 256.949 526.689 257.309 528.823 257.515 cv
528.823 291.051 li
528.823 303.458 533.421 314.623 553.962 314.623 cv
571.296 314.623 580.838 305.867 580.838 288.629 cv
580.838 257.515 li
582.958 257.309 584.967 256.949 586.798 256.44 cv
cp
517.575 266.849 mo
517.575 248.535 li
464.307 248.535 li
464.307 266.849 li
473.573 266.849 li
474.027 263.874 474.537 261.286 474.714 258.836 cv
484.643 258.836 li
484.643 304.627 li
481.752 304.806 478.763 305.288 476.243 305.785 cv
476.243 313.562 li
505.555 313.562 li
505.555 305.785 li
503.022 305.288 500.048 304.806 497.156 304.627 cv
497.156 258.836 li
507.193 258.836 li
507.357 261.286 507.869 263.874 508.323 266.849 cv
517.575 266.849 li
cp
446.312 267.716 mo
446.312 273.802 441.769 277.642 434.155 277.642 cv
432.255 277.642 430.617 277.531 429.734 277.464 cv
429.734 258.643 li
431.002 258.449 432.815 258.395 434.54 258.395 cv
442.54 258.395 446.312 261.452 446.312 267.716 cv
cp
463.866 313.562 mo
463.866 305.591 li
461.621 305.191 459.31 304.806 457.492 304.532 cv
447.468 288.807 li
446.492 287.281 445.361 285.627 444.191 284.112 cv
453.348 282.187 459.517 275.535 459.517 266.449 cv
459.517 253.147 450.262 248.162 435.891 248.162 cv
427.891 248.162 418.859 248.535 416.35 248.535 cv
408.836 248.535 li
408.836 256.343 li
411.343 256.839 414.33 257.309 417.22 257.515 cv
417.22 304.627 li
414.33 304.806 411.343 305.288 408.836 305.785 cv
408.836 313.562 li
435.627 313.562 li
435.627 305.687 li
433.672 305.107 431.58 304.806 429.734 304.627 cv
429.734 286.729 li
431.47 286.729 li
447.372 313.562 li
463.866 313.562 li
cp
391.021 281.112 mo
391.021 296.711 381.989 303.265 373.507 303.265 cv
361.845 303.265 356.444 294.302 356.444 280.521 cv
356.444 265.911 364.738 258.766 373.686 258.766 cv
384.878 258.766 391.021 266.655 391.021 281.112 cv
cp
404.445 280.134 mo
404.445 257.886 392.177 247.474 374.844 247.474 cv
357.399 247.474 343.053 260.391 343.053 281.881 cv
343.053 302.012 352.774 314.623 372.625 314.623 cv
390.258 314.623 404.445 301.612 404.445 280.134 cv
cp
324.467 269.08 mo
324.467 276.1 319.148 280.327 311.524 280.451 cv
310.377 280.451 309.136 280.327 307.877 280.134 cv
307.877 258.449 li
309.336 258.395 310.685 258.395 312.212 258.395 cv
320.805 258.395 324.467 262.524 324.467 269.08 cv
cp
337.451 268.295 mo
337.451 255.585 328.692 248.162 312.805 248.162 cv
306.059 248.162 297.563 248.535 294.507 248.535 cv
286.962 248.535 li
286.962 256.343 li
289.465 256.839 292.457 257.309 295.345 257.515 cv
295.345 304.627 li
292.457 304.806 289.465 305.288 286.962 305.785 cv
286.962 313.562 li
316.275 313.562 li
316.275 305.785 li
313.755 305.288 310.769 304.806 307.877 304.627 cv
307.877 290.652 li
309.405 290.832 310.864 290.832 312.035 290.832 cv
327.84 290.832 337.451 280.919 337.451 268.295 cv
cp
705.409 457.526 mo
705.409 452.671 li
695.044 452.671 li
695.044 444.669 li
704.884 444.669 li
704.884 440.032 li
695.044 440.032 li
695.044 432.774 li
705.409 432.774 li
705.409 428.007 li
689.357 428.007 li
689.357 457.526 li
705.409 457.526 li
cp
678.887 442.699 mo
678.887 449.697 674.862 452.847 669.31 452.847 cv
668.173 452.847 666.991 452.759 666.203 452.629 cv
666.203 432.729 li
667.121 432.642 668.347 432.598 669.658 432.598 cv
676.393 432.598 678.887 436.359 678.887 442.699 cv
cp
685.009 442.264 mo
685.009 431.898 679.192 427.831 670.052 427.831 cv
666.421 427.831 662.836 427.963 660.517 428.051 cv
660.517 457.482 li
663.012 457.57 665.679 457.702 668.74 457.702 cv
678.362 457.702 685.009 452.409 685.009 442.264 cv
cp
650.186 423.896 mo
648.919 419.872 li
639.866 423.151 li
640.784 426.212 li
650.186 423.896 li
cp
654.822 446.068 mo
654.822 428.007 li
649.18 428.007 li
649.18 446.419 li
649.18 451.446 647.343 453.283 642.97 453.283 cv
638.072 453.283 636.848 450.66 636.848 446.942 cv
636.848 428.007 li
631.162 428.007 li
631.162 447.293 li
631.162 452.935 633.263 458.008 642.575 458.008 cv
650.361 458.008 654.822 454.115 654.822 446.068 cv
cp
619.788 446.986 mo
611.478 446.986 li
614.408 438.59 li
614.888 437.147 615.238 435.791 615.587 434.523 cv
615.632 434.523 li
615.938 435.791 616.333 437.147 616.857 438.59 cv
619.788 446.986 li
cp
629.583 457.526 mo
619.042 428.007 li
612.614 428.007 li
602.294 457.526 li
608.022 457.526 li
610.077 451.491 li
621.23 451.491 li
623.285 457.526 li
629.583 457.526 li
cp
601.437 448.474 mo
601.437 439.114 588.798 441.082 588.798 435.791 cv
588.798 433.692 590.329 432.25 593.653 432.25 cv
595.402 432.25 597.108 432.556 598.728 433.08 cv
599.251 428.095 li
597.59 427.745 595.532 427.525 593.917 427.525 cv
586.786 427.525 582.764 431.156 582.764 436.403 cv
582.764 446.112 595.185 443.531 595.185 449.174 cv
595.185 451.928 592.911 453.022 590.241 453.022 cv
587.88 453.022 585.737 452.541 583.813 451.753 cv
583.201 457.22 li
585.171 457.744 587.398 458.008 590.022 458.008 cv
596.845 458.008 601.437 453.94 601.437 448.474 cv
cp
561.646 446.986 mo
553.336 446.986 li
556.267 438.59 li
556.745 437.147 557.098 435.791 557.445 434.523 cv
557.491 434.523 li
557.797 435.791 558.191 437.147 558.715 438.59 cv
561.646 446.986 li
cp
571.441 457.526 mo
560.9 428.007 li
554.473 428.007 li
544.152 457.526 li
549.881 457.526 li
551.936 451.491 li
563.089 451.491 li
565.144 457.526 li
571.441 457.526 li
cp
537.84 442.699 mo
537.84 449.697 533.815 452.847 528.263 452.847 cv
527.126 452.847 525.943 452.759 525.155 452.629 cv
525.155 432.729 li
526.075 432.642 527.299 432.598 528.611 432.598 cv
535.345 432.598 537.84 436.359 537.84 442.699 cv
cp
543.962 442.264 mo
543.962 431.898 538.146 427.831 529.005 427.831 cv
525.374 427.831 521.789 427.963 519.471 428.051 cv
519.471 457.482 li
521.965 457.57 524.632 457.702 527.692 457.702 cv
537.315 457.702 543.962 452.409 543.962 442.264 cv
cp
499.358 442.787 mo
499.358 449.874 495.249 452.847 491.399 452.847 cv
486.108 452.847 483.659 448.779 483.659 442.525 cv
483.659 435.877 487.421 432.642 491.487 432.642 cv
496.559 432.642 499.358 436.229 499.358 442.787 cv
cp
505.438 442.352 mo
505.438 432.25 499.883 427.525 492.012 427.525 cv
484.096 427.525 477.579 433.386 477.579 443.14 cv
477.579 452.278 481.996 458.008 491.006 458.008 cv
499.007 458.008 505.438 452.104 505.438 442.352 cv
cp
473.324 457.526 mo
473.324 428.007 li
467.639 428.007 li
467.639 457.526 li
473.324 457.526 li
cp
456.7 436.709 mo
456.7 439.464 454.601 441.214 451.191 441.214 cv
450.315 441.214 449.53 441.17 449.136 441.126 cv
449.136 432.598 li
449.703 432.51 450.533 432.468 451.367 432.468 cv
454.952 432.468 456.7 433.866 456.7 436.709 cv
cp
464.617 457.526 mo
457.75 447.599 li
457.05 446.549 456.177 445.456 455.389 444.363 cv
459.501 443.663 462.646 440.515 462.646 436.142 cv
462.646 430.104 458.449 427.831 451.934 427.831 cv
448.524 427.831 445.769 427.877 443.451 428.007 cv
443.451 457.526 li
449.136 457.526 li
449.136 445.324 li
449.615 445.324 li
457.577 457.526 li
464.617 457.526 li
cp
437.587 423.896 mo
436.316 419.872 li
427.264 423.151 li
428.182 426.212 li
437.587 423.896 li
cp
438.374 457.526 mo
438.374 452.671 li
428.009 452.671 li
428.009 444.669 li
437.847 444.669 li
437.847 440.032 li
428.009 440.032 li
428.009 432.774 li
438.374 432.774 li
438.374 428.007 li
422.323 428.007 li
422.323 457.526 li
438.374 457.526 li
cp
419.254 432.862 mo
419.254 428.007 li
398.263 428.007 li
398.263 432.862 li
405.916 432.862 li
405.916 457.526 li
411.601 457.526 li
411.601 432.862 li
419.254 432.862 li
cp
397.066 448.474 mo
397.066 439.114 384.428 441.082 384.428 435.791 cv
384.428 433.692 385.958 432.25 389.281 432.25 cv
391.032 432.25 392.737 432.556 394.355 433.08 cv
394.879 428.095 li
393.219 427.745 391.162 427.525 389.545 427.525 cv
382.415 427.525 378.392 431.156 378.392 436.403 cv
378.392 446.112 390.812 443.531 390.812 449.174 cv
390.812 451.928 388.539 453.022 385.87 453.022 cv
383.51 453.022 381.367 452.541 379.442 451.753 cv
378.83 457.22 li
380.798 457.744 383.028 458.008 385.652 458.008 cv
392.475 458.008 397.066 453.94 397.066 448.474 cv
cp
373.991 457.526 mo
373.991 428.007 li
368.306 428.007 li
368.306 457.526 li
373.991 457.526 li
cp
362.544 457.526 mo
362.544 428.007 li
357.033 428.007 li
357.033 437.189 li
357.033 440.82 357.121 446.068 357.339 449.043 cv
356.247 446.813 355.066 444.363 353.71 442.088 cv
345.487 428.007 li
338.097 428.007 li
338.097 457.526 li
343.607 457.526 li
343.607 446.986 li
343.607 443.445 343.521 438.809 343.345 436.271 cv
344.219 438.196 345.269 440.383 346.538 442.613 cv
355.197 457.526 li
362.544 457.526 li
cp
332.401 457.526 mo
332.401 428.007 li
326.715 428.007 li
326.715 457.526 li
332.401 457.526 li
cp
322.734 457.526 mo
318.143 428.007 li
311.539 428.007 li
306.467 443.27 li
305.767 445.368 305.287 447.118 304.805 449.392 cv
304.761 449.392 li
304.236 447.072 303.668 444.931 303.1 443.182 cv
298.158 428.007 li
291.51 428.007 li
286.962 457.526 li
292.735 457.526 li
294.397 443.924 li
294.746 441.345 295.051 439.026 295.228 436.403 cv
295.315 436.403 li
295.752 438.809 296.364 441.257 297.196 443.751 cv
301.7 457.526 li
307.341 457.526 li
312.021 442.699 li
312.807 440.338 313.245 438.284 313.639 436.403 cv
313.726 436.403 li
313.945 438.46 314.208 440.776 314.644 443.445 cv
316.744 457.526 li
322.734 457.526 li
cp
286.962 373.86 mo
286.962 367.759 li
762.999 367.759 li
762.999 373.86 li
286.962 373.86 li
cp
.682246 .615228 .605035 .503349 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Diogo) ()%%Title: (Digital_PT_MS_4C_V_FC.eps)%%CreationDate: 12/04/12 16:46%%Canvassize: 16383%AI9_DataStream%Gb"-6%A+TKEBjGP"8<kh:SL6pXO@6/LKuEE/Y-]ZaiRR0fl;LUW_trOa,!5l8Y-XXec.A>bQ(:Fae`J(O_<7Q,7OZ)*XD<3`LT)O%VH8tfdH'\il/08>h%MqeHBjXVA*)+/49%$]5+FQ)'Z\cS-'Tp)/8JP'dc+@7%9:?O[\@m:*`!#B(W4ASfk`\dcK?S(nT6\hU3H15%5Nt>u^NI<`HiGrCO/F(GO2h.7];%FuTBK?`O2f)@VmD<\U*kiY!f01WH?;"_T7)'/nTm1lU/r6@jRSRSo)#t5b;BZW%cf"$_>*;3%prkTV4F;,-I\+Ffp6G[LMrA.(#3'qQ>UN==rn!dj%XufHA(-,GmXL4u9i_$S'N.QtLUn$dp$P$D6dbeNrVPdh`Fl?5ht^WD&5]0%%VGq[KlH@=b6)@!NjY^(hT<"]LQ%<u((gX[:'ZSXfV&C+!Llsur[Euo0X%Q[mmT?<NV\H:Z?dY-oO&]$.En-m`A`7FSY-RSi08`Z+%''`"pVh?PiCIJ7-?pI_cCTQJd:d]$nMJZ$QiHBlGCY#eWZHcF68uECu-)H3^`pFlTj"Z6?8e#8_8si=Sdm+uaI*h@&L4AXjjn\E5%BYKl,(Sg6UYFje1Qq]4eqQkD;NnY<6]Gt6_Nr+a.hrID@T6de$a0lWBdU08lgT/&iYfCW:<3K?CWc[i:'udF3FknjboTW09SquA&%dI>$imMH@%PJqWm*k(XGd3'E\LU4sXd6HEh(.u,cj8U'IH%%UlcG#p0(2d@a89Lm-FF#hbJ'jHbs6FYHp3>Qr&b3W0^ru`Dm;V%0%olPQbZh=QE3W.r5fkLKHE#&ohI,MW[iT0+m#N+Qg8uc2tQ#:ZT8TE3tCA0q]@=$AsO-j6jpoB#G)k)M9TG_M%*TK6-gl_MP2L7HR%I"Au;YJ-EacJgRdZ<)b[p]2@9ahK_3)g^cR]iY[jfQ5(l:7fIKgmU?RiP,*;jQpE'!UJ[r_OX27mn=]+(f0%DhtYOs(K^S#1A'H'%rRJAU=5#6pC\-aos%E%Mg%`_goZ_2uFnoS=ApSRniS!krYkN/BbPSaBh<Vfb#E-oSGEEI:o\sVm(`rEAQ_1Bsa:2oCm"HNeAcGj.%hp&PN&)T?q)QO,.=-NBrnanSNQ7;dS=ms]8g#_@n*K-K\B0B&RQ;:$>h(O188$VGPld0<pEUI^tiT+h#D2,e`gC(C5mCa@PVO7#t%c*$3l]pI44R%%sl`2t9;;ka,,I,gWu0_oT!-><'F=CCqtNZ%3=='Y"`0=W*J\b20cGW^:6lX-6E#.Y7TIciA<hmV3?+"pqra.rH!%geS7<=b!js%E?:%+6SR@`OaW.2VsB>B5Sr?VA";<]sn3uY4pqgIl[.<0$_6*-!tVDqNYQL.I4TiD\Gq=^\EB>L,ljBrFF?k(nUDr%]>0?]6hg&1+-*MZ5BK1O_FO?e5Is)Wc&k3^<:=Pi07PR"B2J<tdClicXh0:P',6J/E3e/NUH'4Z\>n@r)p,!PEab#E@C7I]$TVCl%5&h\Bm`<KZAR.srAX(&V=iL`H/I7&28105ehPKnaE@#GgHW=)>=B4&T=WNj'&3V.&9;W-T1>5nSRd/OWp_GqFJ-NC\$h^Q`:tF4#%J\"V"IWT/'FKJQ[1s66:>kU=F/UZGUUCZc.GLKDIH^db]NpPi*;7<Ea954=E@]M2hf(HZ&".JXDZaYs"BdoJqUTtu2ZOk;,1Ibs5%+#RXhp*!Rof\>Kk4#qV.o_jo91I(4(ph0=K^Ot@.DsZ@UgDZ,6-n_g1_)lRRCRmk!WN(!eQ.%\I2R6']4*KVh8B@]'Z>i5d>'Y.e%^Ij>_EF\b"*f9AXBM%Ls'L'"]`[Nn+]5H=PW@Tl-]1I$u^bo/+=1/6@%;3R1[j+M,oIUVkFf\Oo@@((Hl=2,TOL<m\D!e$C+I5d7%W[f4Ca.OFRbmDt<CReEIMo+]_TtYK/Z[reCdcgcfe5s\fFFpDD>=>2$dY9D8fsJU#gu\]5_iI&cVd[@HgotOQ`7bRaM8i8W;s[`k%lF;oZp:tP0dV0#]?)NfaXt4C<CJ-'kN9dU".=fOG<L>>HnHu0#SG5*dlA!bA_T/Go/JKdQiFeg6!Ld=CBVb--'lLW"Ff=ckaQ\er%aO4i'/Z<9Gn#ULbm*rW5,/TY[oBO'%g)c:Z+QE-.++%?SdTra\\b"aHf4Veo0,?@*;"$SooPi`1PNUDK=/%nEII9]kE<#ckFMe*"%J88C39Ark#$RFaBEF`@5b--Mrc/?TP6''"i["PR>7PEQpirW6K4I0)MPt'eO1:?U_j`,"i=p%X5"Y<*p2S,b#G%>;Zh_D%Ta\^KH%htV'Kl78\5d;9Ys[K3W=,7*tuE6>0hc'GaH*H:r&(`S9K.23EN*7nV[9B"M;2,KQl$#<tV#\Di).*u%gX=1L6@aaWT)`BnH&BCS5%")\H6V#o>LH(bJ.]4FqZ>1J(Q4UkMjhtXT:L1^JsUcThgS!)C=5lF:qK=VG;fc<#J9irse<H/#!>SjCI/:qKL*E'q$FZAJOV0^fX%Y\&Nu:0"k>Wm_.[!^L.Cm`WH]1<b.U)Z']`;BbtYh'c88VHMH^-`fBmIcSM.c(-Pa("1tuNX#ohp/a6L\dg6"gbGaeVQsXq%I@fH%%CjA!*.?!]'7'q-)i]bk@3\SZKj0saJ@.K,^5$U&Ob9(^dTnp/KgPZ"$cWHro#!f0LJ<>*'Y4^jEIBO+%Nd3#TK+'/4l^`CJ(-f5%=1#DI64T!dUSLqHDD%mh3-Cnq2g(tVDcQcn)ol)mB[uduK[X`W#F#CO!4Yp?^muDrn1=@h-4oL#R$Ht;Xca>\CdK-"&5$/AC*9$o%2k@?1fW?'QZ^ZTA$o\A%$cNRR_NY?e$lA_^g;(iN$ucJEB_kgC:6UFuYJMHIm^r9Ti!*phF'ssCiOTYEZJsPS5XVK-8i4^Pk3f_b%%7-BZ2XpAsfX9oqY%te.V0$NIl>X@,\qhBM(.##5@:ak8GEn'&YCRq1%I=nDW45cdqmuh"Z3Og"59Jo3fuhK(B1M*^'"477QKUKE%gd^5m>tkL*AV#[d[R_fTJ1Hj`bR/12GG_\jiRb7;>Hkl@,'sWE6;#ZR[p,*/$r<?m>KDg#3V&Zie[`Qb9?5;22o*7`U'1D1$-nQ>%/Ti$-G"$f5D,QqO:/dVYT:i,?C?MR1r>^)Wa+]]m*$Z$2J8H;?246)o45g5OTMB0u.F"D3@om<TKq,T5,A0(9diXV@<ZM\G8`rEP%.F$<aJ#\,DQd7q\:qD8]-/If@95*[<q9Nu(\\-OnCN5tEf9-Rpo9@8_QIimVeYd07TZpMKM&XkL*2mJ%csuBpI(D]u]dS<?e4-%P%9l+B2nkBt]AQhp05bUiZ\Rm;B8\VD>4H3>3jQd^(Q8M9GNa.;>5`7p"F%"A\!mrH\6sTRH8GGIY'uj]s$_Fq;+=KLS;lIB05rj'c%"0*eH(=WI03j%0Q,*\=b'*dj6F;henM1Ai?"0QGO6_T''HgTCL'WRl.PCd_CG#K.[2P@,p<E_A--4n)MJBk8cNK#uU)QVVcItn'B%.\@p<Fk/Gta1)j9A;.AUHDQa[p&Q:&:I;ZY/nkU,;$'V;!a@OT![Fs*2!(!]on0d;Qa]jpe>\M9]X8kk/Lp%91"8JU`8^pBHJoZs%49obHCEs6dQJGY/:o=LiBi*Ib.J"7QYY2jWQ;5?ik)eS)aTD2QloLdGpO.\[?'I4L2irZ:?D.]Fl?f3e&;,l"M)BE+Nls:Vj1YbN%K!*KB,DEs.+K@3(l?7oXS`,>:)K>7#O$Li[@p+!U9C/d`\,kAgY$5)J#0NSVq^ni_Q8LNWJ-l>hh200hkfjs<!=aAg)^rLG)MkDr%O_COZ)H_E,DtBP(ZCheS:"V*nm2E;WIa&Y%"ZIGf,P6W-l%W@[M;DicK(ZON<74ucefAfek28^L`4Dc$$<7<T.'9j5IeSS?dARYg%lV8D-lSLc$Ye+)(fRd!99j"BWAt7^OUGX@,C764PXh$:qCa`%]+I:+K9OQ"6PSQ2+ZFW;E>_#j6BM\-&\tIUH5m3mW:iR@')Qp[S%Go=\l;RgSI1`[N"LUN<4[$<J"Z:92*,9(3m"/;a!XORL![uJ=`7c7")e:>10EP[;6(5&?'UTLaO)71A\l&%Y.9,ectK1ReZ;1WjX%GB9!!%CiNt6RZUq!P,3[98?bU/6e$1cl<61]Q!&:i(qlc#7=Lo(/4L'oL).&?AOa_T_6le?Vgi9ag[6:FpLV1SrS%!"_+V/KRdl2%%Fg*mK2ZJ8>Et@P_&[A:WfgISbsjQb<\.?Y)sfbK8;n1L@N`7q6usJe`=4f[dSea2`TY2;7E,-N(^CDXPE!Dh(&0MN,tV/g>VRVU%J6X!/C`c51#45/NN!p[7Vc:@2BmW0:!j1T@6e7C:#'3l4;lK0+K!n?U#E'N4-(c':dJjTt>+pb)=2AEK\76nCSWJQH&KONa"r&#p%$8=]#3b]DR]")`a5sV5Me9EJ_eZT?a>8jRVOeee:<!R1SGa0h"(aCU!,'R7WoR3jZVhC8%C>#+C8(/ki"D2n1G*LE\GR:,U7.9gV%4UlTp&67,f^Sh/X.i`<cjHQm(i+o`43CH]Qb.=IU<L>:Mf<W=m'8M*]77FLJi'p&;Pg%Pf&=m9`otCB\h)_!LJbQPTU,u%A$pmM*%A9kfWq0$?8P*W.J[DB/s-poecWP0p+ng/;a=iH^GpomMUm._?YW<!WqUOU,mCVFA%8Oj00Q9&Er+ArRpi>UG>IL62)n\Qcd<):U-%?!3_?.hEkC/J,T<'SpF_X+G\Kl;s9@lS$4BN;'oHRX4(=-AbT>@8q3E+ZUBiJV[o)BV6WFjNApB3$@hTp2'13aiXs[aC9^&8\.gt%/-_i2L8VhQgo`8_DQF8V@n8:m8rZ-2e%@.CULJ'G/&WkfWHqhWU=HcXg0G,o1"h<eA0D;MX\,jb91XW7m8k\IMi,$.EG(FR:o_P*%P7_-:R5F+>.qep;?+i-UN^<gjm"Y$4"3&^m(CkG0GBK0=/;]cV*C4WHN^G#Dd$_:h79C2"JZ'=RZ5U5JBYXiF.XVY(3@p*RRjC)A%'1FkbNYq\UJS^<3ZG04tW)ZPZ^l8BoI(D@R^,gdLP/)d7./4=J0^T;`J`ug7U6u`QM,*-4"SENI(_TJ&*jlX9C/)aDQL%=h_P&g=%!'5bKa%]gmZ?sJ$8_S/1%J--Z`<mRFK6uJ0.@%lXFF-)YBdFGWKEE*19(8Rd\NNBe.P5NKF:pU&<>(546I<3CU&+beLLp^*MjF<"%!cBZFP@2cK+c@K(KUJfQG;uo&l%ZK0Y`WnLd);.uCjI3rg;l^^ijafh`W<SE#t#AaNXSGM)`8=_l]28.%M743irSg1WF+G1W)"AX%Z;fo+7Zb8Qqp5pJD<TUsMh$t<,C/76)Q6KJL'9M\UB%j#"6,$=Her1hN^B1e5V2][6pVO.kg[Yj'SoLVZT,;PZ^0NnU)qCej9?;+%\<`(W5kZ?&aA?ks---k-\I+M1Zjj#?2<u,'SpWt4W%-NX,b"e].NWFY@KUb4B,"'1i4,,RYrr1DSiXWI63AP"7'6c>YtB6?W1*K,%dhEn86F5EOYm-$c$%Z43$AmW)H-^j4]lu$58TO`e6K>OG;hHJ#PiS!+kD4_MU9DHDe9%hB(nBUG&X[cN7"ll^AOaBW"ZK6^LTrLj%;$LF2.9$3dLp\S/eU<8m5Wo=>3jKf+)]NT+Lh0<9`+[$t315R@TQ=VqhItSD.,eD<]%Gr@#S"S@cuNjD(lAlV+d=r@L:pSNkX9Fn%U1P:Xi^aG'"U1Bo&AA/'(DUX@dHN7!CJNX-Z^F`;3u+"2_((>XOCa8:/OJM0q#/V6"!<^`2&t3+mfhL)'oP#:-!psjJ)Y1X`^B^Y%m7LrY*@N)MK(u,OL+4<8Kg":Z5d#CF<VTT$`b+(KGhG'N]:!A[JY/;Jd'BaB$lE/*`(r(k`-4J'A08f$#i>8E@9Mu8Il\]<$O:-O%oif?Iq!auuHNFenh;g[P!_\,\V+L))7G(O)l7&t=G?5I^?*--nDN78b$kTY%iW]hf_VsEU.LI434<HjpG!r7ld#MVHX`WpAVMc2K%&B!XNA6%(%GY:IJ;KrZ?.7'!k-r=!<>>r.k<K.@Sel#ED7hg#;0G74fU&n;Gh4<ZlU?6@@D&(B&=XI`DIj>(mQ=Ou0[bOL.;^,;#%0,oHoPVibbB]0/i;eB.YXpm<_Z=gfcTF46AjMo.l.E+B:\;]mZ-*A63n\,6U>L<W6Hba8kOp1qM0T%hA$Eka(@F?JR/J-$s'I8f;%?\P&&SZTf$EPtcF`>0.<+BBaJJdmt1=*+Ja_I?*OH`L*n.)G2Nm)hLk&4r%V:i*Mi1b0sV!"fA:A=_M+.-dYR#n9k8<s_1KP/O8n%8^<H@D5^rXQA",#7#p+C+PMF76*^WNiZjr+21,X-E"[Pu,f.rN:21nTl>!OZT+W$<4Cg3@N`U,bDoK#216#g%^l:mWoAR_amceV*%/Q;<p&BQJ:K:OAHTT?K,IR&e&,Eaq"#.5TcX1BG,OWtNjCa@1J'$WXP1a+2m&M1^TD-J#5r=W*,RcM\EbY"I#\#WjBC6q&!QAr&D%8Ye2kN_734$5d_N$Np]h(c0n1Tkpjq(@r]oTqmpKDH&/"Q68a3o>1$+fj#=n>Xs`FL_m.kH>SM6nD%&\VKYak?uIU40M!]0V'-tV%L]Z!Lp&JR.k`fSYXtAs-XS8521f+Ei+\MlsVVEc'aWb-?AF#'4#(t0SB?X6K$:;o]'JpOZ/eckg&1uWB'Q#g#Lb&q"RL4N_JS<+M%@SrqE7*5Cd-Oe(M>#L%nASFi2Dit1^R2FIUZGIXNc=A=R'8\an7\,r9-:\dsSOA1O!%9=R95>ER]-I1N*/NslJ?jQ,;WsYr6@*>:%nk]nDc<I6+*Un6>poRI?-i3tJq`ldMLd8gCE2Eg`Yo&CS^_-NeU=dNBKbR319C1+>h&#9bW#Pl$eMVj,:]oFuWMfN;<@6LSlmtaT%;eu/;<@YM],-O1!Z;PeNcp:LD_!0?1)RUM9(QEU5oM&q!V3Ck7Q?,P@UMg^j6?R5OOaKTt^U!3ZZ^cuICcYZm)pqLlBdNb1$,`dY%i)VJt0?5r;5u\]&Y/!%G\63ig5m*unAeMVT!_%ZN(6V1]J^TXo`T@.jL)^u?5Cu/$_#$EA^.,Sp,?gj:1'D>7b,IK0'fuPKK*Jro%,FXcJD!t])#"[0;)Q;=tkB^Ng)X)us#jfA4ZM/D0N+5^Z.OU:MAuht,4@kL&**k8#SKaIAPfY@sUXeErXD)Dm$A+6:d<Z=qX2uHa%8NMC*)>;>f9*;pAP3@Qc'F!/@]l!eF]t3NE8]H,GqkK;XX1-2e=\Gn%$:jf"N@ZYpG)kd>%,+0%GNg<^<6=e#ar9-..aEsa'\K!c%iXkC<S.bhL_,_<*8PoG+`3Rm7.IjP(HXIN[(5ir=kV4E_TfTSj=r(Ui_:]gZa2\?%m6Pb-5qtYE!4]qXb"cs<mhGD6bBI$XIn-YP%5lk7WnCDQ*OYDd24[>5u@dmJ#\P/^2@"5(;k-7E,))5g'T$3a_eV,<U$a$c\)I"m3naTIAFE.`6$%(*o.#U;IqJLg#:Nl*>/kP?Z%CpA.ob8(WZ6#+L_Tdoi7O]^"#e#[7uDsS`u!Pr"X06g1HU([O&RP&o,T/g?uc%It-_6r>PMeG9'E6[ADU/)=kMAV7\7i>T,^-Ven%`4e]T@N(2fZm0B,:<cg?[*BuT-#8iB"bETo2em\(EVPRSLU\=;;1T4Ne[8$I#=)>.krgsb7<4XAaU+[b3.k0T;W`Odhl7=H%$1XH%/J`$O![=,53>8,tT=bVN+DRQ!Pb`Ke_UL(!`SpI9:4r$I\o#M5l:SX98pc^S9NSY\A6[NUG>l,-,Vp:nU[U"pepOX9+\CEaZ+41.%JeoN&$7?(kPWW>q"_gd[BdKKB_3$=hnl9MGdbnbSgj"B@<e;gk=?sL"!E:T`!h!%%ZHN-+PtQ.h#5s\pXM;,0]/gPR.-<e\@!ohO%+if+r,q`bNj_0aS$JJ0q[%*"WdcEg,'su,,?@Rj3J[k5@IY:a;&erFiW\qC,)nXl_T]jU`NRAE6%#n,\<h#3?L@Qk6c=id6mY]4b%)T1s(>S/t*ZQfJ\>'@@ThKm[Y'Dr*oio[oW+^'^#fOu4E`0,cF9GM)b%3YioFq?UC&*+kiY7*9b#nj5YlgBRXk]%V1"#dConWMQn%bX%Sc[VT;dm$Z@.::Y?_,4*B]<L9OJ@`cWQBT@bO]ODYaD"njYS1@X<[1,;+>]QU&#&)=ZoSI_rcI2"K.>RAT/^UO6e:9JCiD-&?%-5q1t0VIm"@bZO21f,UDEe6tS+=c(JBL.D,$$I.e]P/n)W(+tE,>rnGqW*aZM^[U<!'W_>N-l!e>pWY91"b!*9!e42n&,R/A86Yg%@>niX7SXDe4``j]=QkW0J5BfBU8"-9Go@5'nMKt(Bhhh8?3tf-;^?-GgtG8'&XgLGJYuW<)EO$3p-e584`)$9+$NbIJ8XC*XMOF=%QaVlh(N#_"a9"C89oc\7;7eYFI%S"la?#SqnG<sVKnd9]5\=(OL?h4!fF2B=B)mqBXS%rA%SO*AJN5];MaEVB</>ZkH&\(`_C'KN%jrI+RW]l,6dbVisTh\?W$s,/P&DnEcZmjX8D`Ig9JDZ'VWN%:\0p"i:KJ;4Z"?`d*,m5*qm)%7'2B-U6<D2-('T"WbTRdITb9s)r%J]*nOn4=CPI!uE,<0=03#u?L$&ssS3L&i'H@(n&)MC!2^\u:`a,TI+GFZ:X/G[mCJ'ud#4io5c9@q-,TNI\sa(^pTX`0^`c"r`Q7%7TqEc,Z>fs)+ObeHl),T^^q9j1/XR!Tq\c!3_$/P>!tYB>GP(4:oIJbjKL(7(==3P<$Dlh6/cXeOUYj1d_*SHc&q%?m?OD29[*9_%;&bqY5AUgPeEE3o(gI0##MjNWd[=ZU*impU"q=P=$ctmBAN=Rb<*(3nU^r*H8bJig[jj*%7P]aW/0+r6(3.UH[a5%LFt=0)&W"j,%8.bng']eqrQ<9q36Y'>b)F06T6:csL5Y6.4Bo\?1?qmGA+5Us6MhiO57WGpJ3Y+R[@,ReS@*mqB+A@e9NKfY;WAYFn)m.PM.;h*h%YR6oT&Tp\.5fEr/,/]?u]2/SeVcKJh!U:UbLeOiE\7h2W9p?qu?r/#obG7V'\u(-u?'2IZ1Yome6`t-QFduhAg00BeVCW3a>1)N'%2C#J`(ro>4)B]q:<j_Vr>k](d=]!e/c^3.4)a[+b@0=B0,QrVu*:mC0^B1W0,b8+W^'hmCK_E7CT`N?I:Y8moTVZlifEa5h;$F31%B-H'\OOpX+TM?>5"\s.8*8F>S9H6!d=8S@9aRY'G5sVLc#LtVt6>\0aeUp]Hf?073\-tm]3O7"rX2K:-'o-_ni*""d$JMt*R>,<6%k`nJV!AK7&C_V%#0E@F196bJ-B%86,9Zsb5aViH(7Jf(HY*b+,AMf2?5R5Y/"PZ(Q/'n;k)0]CWVWFX.9[1!bkQ,!URRK^h)Tl'a%Pk4&W^i5Pa*>.oJM`i19%4#5S1L;FU-,@'qPXOZQ=58ad;A[HRkBA>N/TQ$+-YjnR+/:):*UdUMcY0kQ*e7!U+2^VW@lW@>#Fcej%(!J;kga/"D;&GR7X[$tK_*1`K(,-%\Nk-(KC(086Er)%K)GU]+?]Hl-BJVpuB9jr=8o:=r)"_32$XbY'XXT5`<n8S5^fYb1"2kA_%pZfg3;^1[Hjh@m3VH@4-n.<6cFl[Qh8*W$h5%ZqhUVHt<1<tp`SbnZ>5Yd"Y4k/Aj;BuVhLk>4:]Ut5FQt-iVE<UqnV6IGiaYuXR%-Gkch$AGWORC%;o-m+$[Ya1Pl9:Ja)qL,1hUXg[5S?gF4-]sl%Y@588V`H<@Pai=!K6;M(aNLGt1:_K/JV=+X@3&g&aDsR9F%m]9%0Sc=U#3$uOr^7Ah5U0`":IWC75'V_H1"(dgW.;L,0:9O+YlY9Q!95-?$/uY^Bh]AMB4SBCH)*(J88S$C8g,3Oc=69D;HcNs\ogEZ%_5T8F(k_'R(`HIjk+rJ\'b+9.F4)0aP\>cHoJIee_h1>eFc;cXMV(Y+[ZTpc6S#Z=3&ET$;/B7kS-N,]jk(4]"QOjF;i3k/&Gd<X%AcUI^@e[R%6Vc/5,o.L8-1^_l&umtC')]V3,5A,kJ`,fNJsrOPJn%s4'TtP^9XY=#GMoMS%$&K9LW#<(Le3<a2'en&;FQ)2%'jUj%1,&Bq"Hk+ZC'kk%nP08,p`>/;";+dj8-FfRTEH2B4?>p:QZ@>\7'!Op;@&rKRQ?OTre*?;P)b)!mLWCfO\s?4+e/Y`e5YGgE+Fg.%6cBCC=gK8Q`CMs9(1Ahs,31^/gBnaUgte"SoD\ni@FUe\[P6H5,ojT$M`EX[?G[=",B.j8Ulf5B5_W$jd"#]("@bks3u%S@XC!C0%>;5H<4p2eOQIe^UjYe90NL%rGF@(,pM<QLLetVIUD@I[/7n:jC\Bob:n#^&eTQCQWBE4jX8MD@80o2QUN!U^Y"DF;L=d@J>K`T8P%/]NZbW"NWT_L[W]F:asI&r/fn/L.u\$L1P4H@[hn+9p.r^6ZUO&i'V5'Spp0Kk[4.k;/u^.+AKuM%5<%BF%"`n5J:L8#!D7q:$b]%k_d8g!)qAY1S_Vi_=nf%TRm4`)UKYX'mXFXZ1ClB'\F8N+4!g';/jmbVKRBXj#s#!5l")',g$=c_)P5U"@>X]d>H&%Ep/</DIi*b%@P9?M3FY+VjK)8pKC9iD;KS'm=Fp)_mT'am&9W<e;3^h5M^/F&=p$$&);7Op5oG?'VMI!`8<8cZ,n5FR94L;Q9'd2mZ>&Vc)-J([%[\2c1@Rm4octSAQbmk'!OZndr;8=[Dp-CYFn_P*g+=`E>;XELu6n_RPd./J4L+6%daeS]d,.ZOQ$6eFa\dh]`[kk,].$jCWiILds%j?qXuV%_hjddMnNhjX6d-]hPU"I=ld%l2Kd,t`0u14TjB0O`'?-?Ykq0/!;m!s!::CUtuL_9ru)RRQ[b6RW(2o2RNV%*5_^7Y`Cg%5`Ao%7(%c4L/5Nag]1K9'a:F[jG024(MX)ELp:M@k$WF-$VOPbH>*CEK*"IU`U<n0#GkD!kiN%($+PkU%6P43^+;hN"tIM<T6m6H%j?t!j1W1`)<Iq4:pGJ(E5qBcr*=;kNC!dCaJU@\K9@SKPU+2(#P[sh<`i%"5Sfn^T=F=cp3T7i"on''GXQk>5UY$iga9i;o4C/@(%j/VW3"836C#8G-r!(r?:V+;RqPb8.Z$+Y_-^fKe\A^rnq54jJ_-*eRi2d-YI@Eq1(%%AY![0u=`MK@1e3*3HR?,rl]TGg,]4U1&d%[jm5^O\YO`#>VL9&/2o8d_J:)Lo`U\,[-fjcLk_STaXKDSli:r'cMlOfjnZM[Tf4NaaUQq99,.%]5FAEb/^>tntD]t/.I0M-B]MF%;Re7QK#j6?1#*/QE>%Kq$:HX6f[SE^ddCiET_HEE'GE0`$RAruOVO6R#t2GCX,tMH&"Q,)RpRHJ8jHGD'I9;fSV6TU]\?$h::P)8%Q_EB0\e^JE8-&`I!/L92lbO/JL[E()]\o&!0*=3hCIW]ViCmm25[=KPBhb@T`\*&uW,(5j)i.CSc]jrHTZL\;,Pk)*l&WPPeo!e!%Wt@ae%)f20TWY,r/)I.Q6"F[YCq$:/R^sVF-#-?UUN8%['4<*DckSUN^+@;jBo^]B3<?0=AIQ^al5/kRT28&Z1nNN/+B`bNY`BTu%gd01n^0iEMc*r7`$dE'dR#--?jQIY^A.q3Vi1Mnr;UB6k9J^4Q>sf&4N4)9@=\5u'kl@k"TY;mr+*fU>K#ff:8jN*e.?Q,I[1ME]%?Yq%'"9+MBJ,33>>1OZ:OnK*?PiroS3u5p<TO3tbjGFBNL5cj)*XON!-Btb-,KTF2F=__m)ISu<__'rV_`@:cj(gu'6HuSY:6si!%ou:Ms\N*eA=\),N'qPk&i_8L7MJc^ji__Y=C6@5c]&heWOINr.O?Wp4'*9j;]=O\(8/,=",:"qg;'a0fL,qT,&KkasNb[/7)jAbS%a5pGri,sqdjDI8o[mY*BbRmE`D\.?s:\']gg.&dl]Me^SnLR[\=AQN*OURomTNWYFJ?2Qc1U5YC5V)O+HLCKndG>KH1%Z)@66<!2%DKN[`WW@,*:Ii:ZE$%u<krnl9SKm_#k_3g)WU+#S/0GBf'`PYX>$:mnT@8,F,5kGVYRV_njT^j+%I2)#4K,[.!._:!Vieh45kK1-%n4uQ.GQ&s1e`"YWDAUF/?%:!T[f+LRjTi0*A'-.*!a_*!,U:m6eLY?",#,k?Z-e0b'k</VRt7aN=YThQ[F&.`#p:B`fIE14]o0]'%g7T].UjN7_U4Z'SQa@.AaU$k-<\a@QjBkk!HfP>EC&ha"T`KhRJ/jB<.9]Ot6g?=8.tl7b+G.B`^b`0R`?)7Q8O-Cb`$$DRrl-/0%kK&;\,U(Q#!u.=;+ncW\TqmcI:li7hc[SP0UqZTPcm6137\T/]nbX&61AOamN@"N\8.As[P>rUF"@;)lWWJJdE*,"*61d34BE0Sd%54ZKYCS;Q`.r#&_)mp3m_JskK1c4,(=c#iB_"bc8(`-((.\sT]HtliMOK#=u-EEl<#[_o'7"r/Cd""'oi"C#,+U",Ipa1bbF;l<9%)."p]',*6"i<3P;@3B<%jO2?3$o9#XFNG!AZiiE>CR@d2*XEsLWXQ@]);I%N(.,lQiU]$2^S4GeBRh@!W=Z=1%A:>`+-2R!6aVWZ%<`pLtaMAC*Q&$9<LIlBlAAi&__pWjn56aa>Ria,*R)'Ji\RsM3j_rF2j0t1U;MR5!(oo3u5!H"L<&-WO]SRAsk!A'9<En`&j%'8s%<$e!6jgBPgTAm']62"7@'Eh,>:nZ1DVJ`)*$UU1*m_D\Glm![V`t=#_3lXH,13jalJh\AcWPY?T?cW49A.b=<[c@i-YXT=KjF(uB%+BGotD@C0I7SmfqQTF%CW9M7+N"'c]`3Wjue,f;X/BZpni0a017-KosqK*m[&AuNhI5lq<;.4hSPt^sj+PL"/#Q2T7*h[qW3JCI%%%?Tl]4sfME+V(^](uF@7JY_KqbkZc06O"fTiu5K=.dd<;2pjM#43$ZOMEXL$,Q<B3g'-=_5n+rY'_J%bS!)cd\fuKOi58s2Z)Lq;%T!Sg7DH:bQ$^bsk^N*Qn0M>T&`Z$Y^0?lC%LhSF(Su#MlJ/E+3<lO]?UFC"%*NZ,+:$;Qq3rHTEFd[4I!B*3t8B3,bZp9@PQ%Fhn%0Z[_m$T6l&h*&<E#YrVp$]b?i6km`8FRZB['OZN^eU4,1736Vf@Lj1K_6"6djSC,8BT?_UU:NfS8LqpK;V+=CZ+b^\.$,kf%f@F-%,b+:\*,_KCi(HF$>a@:1GMWNZ!`,5Ib^<H4O?Acg!<<5"qXjPX'(/^3]K*XY<O!E!A732WD31kckE)i&#WpO@h\J2P*#Sr@N!7LW%(E)7!2V9SlQkG42XosfJ'a6JQp'&0:'VFUjAr&48iM7J"A@<74#'0hP0c'O5Il>B4N)"`#@hc,>Qm/#QXY[PO`M^(Q?r^TH-=j/%%Z*O.(&r2.[pAmuZKHPH>6JS;0JmAP!+C&l(H9rg)aLe=K3p)]06q,"V+c;YYFUCOJ:J>_-d>dEuSnr:h\32E,j(15pTaXsUMZ?(k%V$Ai'+CeT4^QN<>-q+kC@]-kCKW5hhi:uONBRD]i%$pH,lf:pBa@Hs6,GJNHZ)1%$=PO,JK"&!s_9tnT4>CFFQn0Nr.I%nYC3Zl?%)Ltqfl"R7F>6j][/Nt,0-1Q+5N;o^Yinfhq#Y!r35@9k"Mc>4/Zj7.;%7m7u/7JNDL6JG/U,ZALGXY6!)_:Tsnkmu;BHAO`%H9:6%6n_ZIC`hZ]LePaEQmnj?=UKn=DS\p-#+.gk(9LXJN$;jX8\CtGM*.@J5TFpmjY`krU=mh,L>MHWOTj$]:[K>(L/pSbSA1-&1L-/t%CIKtD6k&an.dJDmpK:r[MTUO\]\nmE@?PZn,>/r&#dc\#]:%Rh^),9d^*%gM4mA:=!WqFT;)W\^0adQWH`2c6G>g%(5WZJUF:&H>%ZQm,s2=//7,kq(I*10u%7?3=[Y`g3+5Ia)YgOVa[piD@,cE*cW[+ceKJX2$c(8^Ug?Bdn@(mba5+T`3#O>5K]0h@GgB+I+%&UTPi%W@&(E>S6_CM1[c",1PMnfgl<3M*JfR"NIhaY<XB192r)3fCT:-g9Q2N0s5A+ZI4o<0KK=@`X\.WkfI5A$KmY*37@msEmoKGV54^J%!H-pAUs3GoI6bg/J<l#$`QRu=5c,>+[k\K2SEN;AN%pK<:`IEa7I.O\pi]W/_),6Cph6hfXRCR?6bKagquVR-/0!+_K]M0n8J9)u%Ljt+Ap_YT=RqJ'^L_*W/U>W-^D!b\cX<IQSM3<^k$j)Z6;"0P`Q%)f:P]`Kj"X67cpdEFh,uOiAd&U_(g1k.,>tBf9RPN#H6ro01%5a&+B$kIe?;)(2<N>BApO[^EjaEH!pR#>EbFDsTL5`jr9U0ds>jb-*+[pVTLqc-8\@0+jYN)p&G"6Bt],,"9a8a--#$CLr@)T8*+%8ph"tM#=ME09l]F(!?5]C+LTF>FAg2!(WjHC0<i`$IaF[TGb%32olj"%+:jnP6`NJUdY5SQ9ca`o%)QO8u4p6bcrla.BBP7.m6.j%'I$EW?I;k->I$uAULu+kh9h2k,ik=p*/t2>*DMBM/XMRh=d2r2O383I!?PBAeo-@(iCH?OZ*=Xp?'pq[&p&@#.1h>jXcj37-$U@h%L.Jm3al*]'+_@N:2O\^JBa?bO`RGU^9#Tg7,\?c\(pJ+T?iiAVa;60I25"(Z:<I#KZdhpj8Vno8l-fjLp3aG<VYn4VOYYFe`%L),%go_no4=Q1J!FA/p9LP?h'%qY>'P=0m&IlKEclbq=(,X)HG67W&0I.bJ7btk%GTsGV<7$9D8Qh53;6<)m5gUf$2,FK6dq792OH`OC%$\56c&fOcjBUY`mIiFkN%FHVWGd'RUT\r6/=/0R]G0:VheZlQYg(c!72TY5b8K13V\nVeU?&Th?QGmB?(b3LmEPO[K8T1Xs:f:I4%DQPUn(#*[Ms%-phIM0\%8X]#Y8:b33%AJ`1<08",dZIcLS-mUcde-OZi^_tr)-4G&6;r/720&dshP>t;.hTot#(;G008"hS1?s,g%k;SWAAd=$i%Y:uX,i&i.l=O2ARumP+$Rf?fW/a9oSa_L0Uo].qa$V8XA4'Tg/-?582%[mB2iAs"R.<NDq@;QB<4[lnZn'[)=hlX+%(edV3p]0K3TM[ItbL7pPJ>8(-<?N[?87\SB)8](E$jn9!&?4J69+c5#13?)_8,<oW5WHSk1ke@PmUTR[g_.jlck*=e>S[s.6=a?C%#"Du]R&F2C^c^U1(@g-jN'=?<SQ;.6hPr'jPrSj&(puI2Fg01N2c:nZG%+'e7EL]].7DSLf-%ACW^5afc8nNFiH\jgWB#_b%jtpS%82p0i/fEjcU'u<q,g6m(UgabG*$h8$"i,V>HAt<2!l`nAAKg8=@9Km'5YeC+(!hXecmkd\!1G!t*\D)T5dUs(<L13kLj[Sm^.4qL%&Oi/T)i=)A-fflc7,Ut\J:5cIMe]4q87[8i,Lp;W`4&W#oUmoYDc$_q)chN0^MOiEV@>W3b3473lpX2a2.3J"\L`F!f'*,\Pd5t0%b(9p[_G5EuN8QUpU:&la?m4W_LudL2V[T#*8aNJpQFK6Qfb`.',^V(L,_k(f87+W-(goj#C9k7`&jUMgc_sqbJPY9YgGDKoLaJpA%;?N%TB)%bTDrY&[aet4k6bp@]Zu#C47A)FI]ol&I<C[0#(]^F<6gh[cZ4t>gi;$W9P8tB2E01=^'p'8s@;gShIT=<DLdViF!9Bgt%ZK+i)"0jsGV(gF7H&?Bjcpo9AC(%Vm\L^:e@Ypub:]dMFajeua'AOl]2g^&gl7H^=J<gd`0glEZ!+&2JQcap-M&7.FL(.VaP=DS5%(sIg9-=]e>9_"Ic$:P%>BI:hn'u7X.RuS+SK,E_D#+:Q.!C-ab45odsJXOqJ!H:jH?R7-/(h\6"daj@F&cCCW!@C/:Xjs:/#9Z^7%_&DG9S]XJKAg/M@S5NM-H?9d*atN%rVb6B.@a%+MYoXUoi@+Ko%Ni\el@d55':@b--n>C`Ca2F:UHp6ggAA["^(=-al'2YX9f)o<%nH5\k_P13J80e.&K,C?p'6;3.B^s^WOdqbL+u+?e%=iClPHp?KA#$i'&0&5(Opf8XLL[M5DN.Q68.LUA!TQIC/b9$JZ#Bg#Yd2@3%3?ZD@I3UiFE+X2)kcUsakT;+&@lD1K-H+EHhuSd/MXs,.,MASB]d>3\cnO_%T=>,>k`Psj+)f-06D>a(]ThV_0/Z"*Ol4f@<SGhC%6`u6T2h?)bO\V&Ho:;2T'S2Pteqo@P6$D2X"\5+1,S+tmI]4<@`l;qpj(.jS7%.gq(!CYr'1S*!SCl@7Z:h\njX['7(Oj2hDBtZ3%U`)&DAhmLNJ6;\W3F[glAGDC_g%21:bk(sW4TJV^A3g[UN\V/gA>PFPj7TC&87iGB_BhkQ(d0kt#>7H'!d_9'ZKr>c<H-du+p)X?%HN57Q[jr-&ECkD*/Y]eFWJWOh.[KoL9B,QCL=+Wm[%`F>Q)HV%MCfKq22"(l9-:JBJm=7pW@14Dj<+e_iN!6/YLZ@u(5*UF4d_B=%7l4A!1*TNE"Hu,>l2eUjSX+uF#/B,JpZ]2mXP`HmXn8h@CB=6+11r!;+#WRKYD<Epr-PHe1:0P^A*/TPf^Mnc0NX]%EPh4XqZW=@%K8ID,(ZK5cTBak+&>LI?5U8"g.oTF^E#OQU=M.ui>/_o<fW&TF845h@8@c@*V^IsF.H$uKJKim'6mU<J_FTlrd2=<@UgH`QW'RJU%^[]^@US@K"D_FLYZM8[j7Is\/EZc.Aj]P6="R?':Y!p!(9u+).3?:YPA[Sm5OruiB8.Atdk>Ku(N3+EpN\!uI"TpFq7A15UD4<m)%j"Bpkf$qPekKU:\j9(NRW$8KA'^c0nJhIbY5VOTFKO\Kh%MG`AKN`&T`J;rn-l"1m77g/4i;f0T'>^*\55:@jm'O2Oqd=qGfdqD8%/3_]H0360<KM)gAOYK1_iK8pebC`SsVIf]>L_O;o(QkBb-G^4kPCl:OZNTZ`%q/1UK-ZJG/m'As"*BD>AS"<p"ItJ/+NbP_(TF-<%'\U"bPAjqu&L&F$%OV"LAJq<q4mnHbE1Nn;%d6h2FAt$n$[aGDqo4.ra]Sh@H*J*H4BkfZ<!V'#V%Y&Bq*PoT)=I[T?rft?0F<:%%+(1"Xa>%_(hEOCXdSrdpPV@WD?9fc6I=)6q=Vfo0oa.Zf]gD@RJ^cqO[eqJ&j;II*p[g1f4K8Z_Z!bT`GeW*;[M,A@U,A"?+:A3S%oM]5iiWJ>3&<V>Y!o`L0ZBCF&V$D?_dR<BF:!$]H$B5[]DIPsa.K5Kde,`e=C8EK<:mHjhl7"Hf>7E@Hl6PM66)\]#iJtcE>,VqD%98hnpOlg2P<MIMd>HR@d-k=0.EEA"tg^o8cKLpd#;m8%qbhBmJ?,YC7PXtUR9EUPe-S^=;bcf-a7%6;O,)GFlX4..*ju)>hJWBh!%PEXU?%#<o?ju3gmd'1XrU;emQ"J"=hcC.Hoj<6,Xc)%Zr(t]SDGE^$OE)\';jInuZBg?LH&qiI91Hd!4nq]n27(t_cATB).,E[-B%P\?mOR0M=1+bQNQHg<PYO%7B(dMLn#UBAla1,71d;DO.BJeP,Xj5"46fT\o9<.b&<>W-3F,fC>V+-VY6D'Y"9QG_,1"g7VGY?poF%"c+9N-=J,C]G>Rn8hN-(RppRE"*hh1TL9Ri(oARh`0(h1,7(n9ioVJFC/[Z'=qYZ\W-X4N7q&2;Gk#Gp;Y6:5#B1gT$(^6'g8$,j%*_B<OTAaIL6lT_f[)IR*L4BN=%E5V,=O:P/buT['UmVE9R6d%3*mc%(3_Dfo>T,s]P-SYDVDHj,#agp33tDKi_(h%j'#MR\N!>=>%#gB!,JqD*E#%'//b7WIK6!>W0;+4V*->#(mLh2tk^EQfK9I@-&!O8j3>`CW^,#SNATJaoeGs*HCHU8TX!83Y[dMG3pMaFi]mnSG&%00+$3joC6#Kre&tASGHq0Pc;SMgAq@(f2f$<(67h9(Yd#%>5!PkTLf_]e+6WcB&YX$@*o?P-aMTi6Hj5A/-kK8][:0LM<<=P/tiE%DQKg/@>`Su^ab(IGVYo3'O^-u,Eai$OdQlF)A"')4tS8j_^jOF75-\PD^+m.2p7r5'kT.V[U`h^1QEY>V@ErR08#onej`]&Lr_3N%E)WWF,tZPa@0Cb<RF5k!TIFOne%SY>2i9;P?j_NbcnL2,b]O1<5T2-c+U0tVaUY_c9+@W(d?,$_$2b#(VYpl2r+6I[Hm5k73a<QI%Z:5SYWb)K#?:/,6WfebrN#r'(3sPL(i0u0*H9MR8&WoISg&PC+8bj)S9$+po&T.$:OB`UD'F#$;^*LT?LO,gcT3fjT5pTB"M58'U%K4'Z4I'=)m!"mU;!4a$#5V*;HWeMmJ^pJ[lQ%W6Cgi.!NP0#$NmuN2cDIZU9#m>Pu@Mf.O2^N%o8^<FeS;o*4rDQg'5>k?XK@m,a%4puOQ_C\Q?'f4hrR9j^ii2X`J#fMfu8471m-0Agm3[B2%\#G.i#i""/n[bBpe?h4a<`RMA`I+.icCBOq1hKC#I%&IIqj7(eKf:%&%C5Jn+_]I;m,]hBQa(@d6*.u^<7LhL&+:5uLJ/YTSDP50!+fZZ0L&-oO)4#bg[mi!iY9Uqp>galchSVWFDO.C,reStlET9S`o&q#l%6!8g?YX#Z"TC$_%&h[!W_GdclL9?[[I@9<H5,j*(ArB,(l@A6X4B]Zg:./$:Y@.23@KaBTXJEWf6o!j2Z1<]f]ECp)Uc8#s'nY@[%OmE&]Smb),D.)/"8P.$?\.4h7^ojIKBYubX)oQF:`"<.AGp1flOYNEPMtf(TUo'92"jMqE7-"le&qTC@)#Gc0T>`+7Or$hI1n>(B%i6e4A<DC#`7&5/0ho&+0ZJ!.6kH1J5D]60m,pcqXb<"cc"sUTZ)T4%e2omFs%!E#OTK14ul@]qQF%CIPZD'k0d[RU0XHQJk8?QDm%G?'gib@l_PISLo[)>(,9KOJTM"+m,$ZUKfkNC8.*JMn[6iOE"LU-9S]&Fk#_m2[&nOU`P2Td=9<k9i4p#n`eqkF7.HUmJrL+F"41%LBnt,pHUf>f=tWj"kX<6".PrCb4lT],g%t:3@0kN5Op=DAAu_0mpRCq%l*.fij-cF&qbU!/<f_t#+5Pk+@3?<(oLHT<crY6O,2;9%Ac/)ePb@emac@`;/kAB>jI5\GP-Qu.KaC,&DjD'Ad=[\M]ai;,7HDXF=='n,%5J+!a1Db]GEKL8$:#LM"Csuo9-0M!DT/9F80l+F%dL\N=ZCnK_0oh'mDIDo6UBG6=joO50&89W?drl]H(dOp$R[8c6[m@/.bUZEh7HfII'GsrEL@)ub^0*?,.BpNPoQb5q%1#3>VkV!-%$GFkb9Wb:eNDgCd&Do34U87Qf$B%\hj[B/kVZnPcWJI81/8#$HmP>I'alCMV0;EW\Rc.Tr[fF)W8KJ"ZJe\onP:3u(A$i$IS5bab%3@pbX,SOViHs0SB@8?B:;PH['UFS3b.Ep%$*DP`BQ'0Z)0q(q.A<Pp)Dj$t=7Ggre9dr,q)J)W7AQ`,*<.IN8#0=U:-l\#U[OErr%7L_+9+TW7/YUh9(2CUALX;b]&EPk&#M0Mm"TlDrq))\bM7To<>Ba4PA@X'keLu^ND9!qn>KHrlfUXt9!>,'cIA;eMcn47^k7%_0h%nYf#3UIuqW[cAf]J>eBj\D5c5X@^bF=iWGmPSb"3JWaFAPHr7U^h?L.=\A<Ri!*re:Y5-1D0!?Y#Btga1BEg_2'q8JVk#CAS0WQ_%W)=g`5SpJ4UP5>hRNNNZ:5RI#6&d_D&kH%@?XZ`eL(0=U1:]u`In12nX!L)t22KY$d3KC6?:ld.]BHN';%SS02JH;eY@CGDE?J-Z%6mE#+F)m^\.:k31+XBID3rDlr'f17D6mQC#2i(>-D3?W6--8s$<;:'4e,4G$bnAfKNO"3='8%)DQ]`R;&s]ETi0'mP,g$BTR1_Xe%,W?i*R^0:HVlqFX@d@_A?8hdRAT`WQ0@a$j%1#PAX>8WUCs#C[,p96YOH`:SOsWc*C%=FJp)8N98BOsMIinitbVCnE85.,N4=7l[%0mL&kN4uHZ8s(8^/BP.b!>H9^%[G&*_WSgpfSu&mWkkd"BrD6,WCj%V%&B+B*?c:C[i3.iAD!c1-q,^$,('15s48Y<SV"ta#a#DJ%l6PhJ9]Objk6^[N2P:so/<NX8hrBge`'fd`&53`HNIY2qZ4LcRO[ogoK,?J^KP\OF,PTX5+]Iu:e$5s)`X]_%qAUa.^Luj,b%=8I%&nFZRi5jAdhiq5`GY:B3*;1I[&2q+[3?f':8MYht-.drIJNT*<Z0[HU=tC(?Mj?h'pbDCB#Y;"]:<A'c&H<5b",;4h"JAGF,Qh!=%HD<#W?H,[?#14ATWI[V&I*DpD)?]^Q`.gj8aE<B+9I]@OI*Dbt7n?)@`$O/_;AOeE/>:<]*M,PkM"l?(.:Yc+.G[kg8b9S<<m[Y\%AZJF$[U]o[AU>N_d41iP<=6X&)C8Au\/2ojhOo.jOfL:+hXG4*W'>0d&kPt4D3?.3UnS]L6YInCMXN;t`V#/M(c3,6B%k:V9p$f\%2tt!B/0HALrdQM]=>QZ[dF+t9VV33sp,B0#&ad`&,[tm_,kbRh_JGtuV;fIMhBnBZ:I6\LfuFmW[L-=N_8Mf*.ctclHSoDB,`itm%?Hb5sEi9XB^do6g#3f(e8oog7dafSaMhioYL*pfdZ;Du?-8m0MBUMT:PTZ<Kks`[S%E)p6[h4WP680Zrq2NL,$GcN`&fQ[[*:4>2%&unA45ktKoe#J3poatl1=k4O6"0kfNiSpWt7&1"mCnjiCN#kNk\^a5EK$R=MkOV1U=iC&hUZ=$Gk'an&.K9[0MBU1Gel.d0;D&U(%i>lI)"]nrd&!IXl3f+q(Z3bHT#2VV$WC]K`K_]Cg,jYoD<V0'@83qR:Xk\VL8cJ&M567RN4[@a"'9IBC5if'Yd]Ntn*mVk;6eZqq%SD@)GbJafKac"8Od'R?<Zt/<0F*LmZIBpCLfdrk0_@b>EjsDt7Qp.[#MGn&k\PXr(<%U+3g$GeF,$-\c/"7R1P"F6K3YN5+QcW$=%a^o80Hcp'CXj<k;1@MM/H7er?/\-@HZNTk+Kk]g\/k%Lebda,8R*C\.c)&YH?"PiK>I$7n1-`**U)W\qPMFW'Q>/=Q24OQuQ7':&%V`)f7c"?6Y:?ps=he]0/93-$j"$)jMgrO0+b*gK:V&\`\7nn"KT/r0]h3+VjP0ognrSEV^hT.+kk+65We?_1&g$JJ,9_m5?qJ?.Z%9<N_%Y<RpFd"3$p72EsR&8]988?`Q/-jVD\$!DA((*&&<QjjLPLE$jn$YI=,]L3NjU'#!rJo?c?_T8H`A.^`*=<&p&*Ee>^//h%e%E_$sW,`>0u$+hJ%3QWJ>[%O=-O]JcT/044a'!.E..SL5%9GVIl%nj5M^nu[*P<m0%6.!`Jm::3^=tk?0GX#>ATGA68/E0JARqO%,%;1a(X77V)Y;Tb^dAau0lOIWVD:Dn8Q(*ojpe>Xu_eHRS*#4>Iq+fbc@Ws*c!O3t?AcRZj2b+aQ#&]M'>@p,>-NL4;ar`L!cXVFhf%MnkXtC<PVJjY5VuBQ7n1E\/\]=hM<TfQLC;]IrDo=X:^4AmZ>208g"$71F'!(sJZcAoS2;@iRs#`%5q<43D":OYMdM\/FE`H&"M7%*OubpZAD/`MI+tfFI>S:bi39D?u9Lq3O9!_/SLbZAC)l^BIhqQ(7R.=@bQEYRRK`kii':nY%I0+ZUh5NW3847fIW?TB&)&D7dV[o%D%#oO)bOu`:U^LS2hTSK7J(F_s32_kB/,,3nABOEicU's/a15l8BD18EXVke#-0bBlJ-skh1?E5`Kb>WT[)OskE2m9.+fmt%9OWE%Rr-O+3=P<k]^?3:G7Fbg%5'aJ/=o9QDa>o",+E4"d'Iu]=`!aH'_[NBm2:$?/su03I/,<+I2cpL(?'^*(;=E,-e(BpAUh?Z:(d;C%f_mB]s4K=319Uqi]JS"+.REe,JrO[h,k$q.?;TkTg-YWk_s/0N/akj0]FC!O7AB1gM=+/?CjP[sGon:.P"%cs8#57#NpKskD=;r7%h?_6;-IVJUa;.R<CjPt(ks=`'Q&T^c,gWi.hfHoSrNc8p9_LoC26Y>:?`MfKV@A=<B&Ca6I95Uld5!_-K.$P":[Vedlmk=QcNWDP%(@(fK;<(LuWh"S<B^)XppFBg=GEoHe0X\REP^V46qZ^$CHVrJ*V=Lfd20%r\JL/Y"BuDE&`Bh+$EY^G_MltW_`0Ni/bMp-N^k-@]%`oRcoZ=n>_jLPQ8*P"0gio.:RkA<WJbG+amEW1!GJ6Dfc/CIo1N=P+oLKp1^\BEgh&Y.Yi7*Ys=eQ:^OZG8Q(+?`jmT.KW\7[P;=%Yo6ZJLK7f?BQ^VB7SE5@moRYp\CUqbPQbI;Ji.+JSQ[20<oKdY^f#"l<*@#:(20a"$s"-!.grN1$H/25mFhR/Q%K.]Tn]E5@P(De%/[/ehJ?t5CBNa9#oiQ#je@%8[[nT\<$#Ei^@'0Zl/d#@FKt,kCLF8:Ie-s9%$QNLh\o.\l?OIua"$A7F1UmQZ8.B+g$^[Lr5H^5F%?kK^FMCi4oH!nW3Jn#S^0aeAW!K_*uS'1n3Ag&_[i%D@_Qrt!FNI[KiE)%1gZN]nU$P/[0'&AL,R_Y,!JP=f`:NHN8=X_f9f[UBu%CDP.%"o'q_'&*U<]8T52,WCkOEYs!NG^,`5ZBAa=YsQ^rUNFUua_&J%F(_e(2VFUjI.E<BVYOa9K!Le3)j6/CI&(T@d`*i9,U4e.%44TL,Q-IFnAoG(gHKDHLZMA!'\Rs#3Z=X3`*4?rLQCI@]DrVRQ-9H*dc<X(l?8e"N-0m4R+dgM#gmE;Qj="WH))l(i2R=ZMq33JA%Q^Kt\Cdr&Qp1HQfFF?nu9E&XgX.%:Jh3\54ABSTVC0P^tZh_2cbheX:i,$DP2RRd.(35SCSBYp-O9aUcREfAF[q&r\ZaM[ch(?1q%/U?C0%.g<3FQu.=F+#@XrV]@A,U%UoF1rsD^*P!gS%IR@kF]]raJ/uV65iBk$*s=0)mKmY\-SSO(:)!i=U^'D]S@Ib6l&4#,N;+C%:6EN#fSFgh*gJ:>7LSKN(87K,bG,78,E!.s72*ceO5s,0Z?R_`fI'glPUrP$$i3I2W?hr:Z6&t@"Y"$sr_+*.V?PL^!s24"/LQ1O%dt5E"L[3(AqQ.^;C>oD.ObL(h6s7I&(2T`T3(O?f;ANPP,8*oW[4.%&e:Ijh_2ZS]9XUTlAWa%!(fq[GYSu.s)3h6c,$,PnWt"6-%""%+P5:h^LQ@gI+6'p[Uc8M>h23?9B(i(^JCb=:V=d6B)Li<ZH>S^tT"d?(m^FkFd[h0?.6-rhig<5->jl$$A3.Dr&!E8p3*7A4&%.U`Ot0T1)+JrA95TpS8Qgka1ATK$QR*co\i=VSt/hII!PAJW<A#C)Yj`ls!Ik0Z(G!HU.Q4>UZC=^]T-L?Ktkd8jf+"N<3UGM7Y.%\r*8O79nXScJ$'Rbp'l6d:'@PZ7VHM)t7PT/DCTsD&s`W$`)O/\@Vd4[t3V0`Ve!?")!^K>7cRrkepULitfl!(4>1*Q?!a`GnWMc%K'&SUI9mEqh8#1[7@e<^W,=u/cJi/K^rUEOBs/_!\"Ij+&\YO'h]6[Q'27pIqY18jnc[K*K7;[/PFf`mc_@VP,.2&\h6ZnF3NW!,%Y'_:A^&qPe!k,iNJ_pZtT7b\?_=+iUok./#1\gu%DZs\/(!&O'YjniI`k)H.(D*mU-"L@`aM,L;qHcP_D26=c&1oP)[(J#RH\NaE%?q'KtMsMB")rJh0hU]c^_U8'd8+q(dloQ=/Sd\1t(Wj?XP'sY^qn>Yq-'X]s;mJ'X[(OB+nnq+oNL0!I0H4AZiE'Wsn'SMT?'B]u%-N=uZroKZo.m)GYGZrtlBmJkhs!#hdf7Otp%;"EBC3dQBqpnX<<M]!Y8_KGrZ>VM[hJ^P"p!iOX<;uEdgbVm>kGVQ*Y0&kHQ$j$U%$+Gr\2uJ_N(u#D7g;O]b:=.YaY\d#=DsTVn7>"eKNr+(.9MI8(1152afX`'<>o!`b,ALP:Ya<>gCW5\a@/OT`!&J#)/*$iC/dHC*%!f'9ZG"WB3(Slql_?FM%Kf4Mo2$&VUa@>J]O<S"/(0E#H_3BXhC&rL8`"io_'JM!A/_'niQ%c<^Jm5V_@:_a2Ep-\P*3N;[XsUMW%R=bMj,7IZ])9-6oi*mXVa:ck*%(o^N'Nu81/ISek$&gI(Jh4]A!t;?kjj+"KAKg3e_pL?8lZ++l/V&)Hi-AIm]hO<1%ICf/OM;Pr%^cZjL(1qM1,[geh0FN!T!fE@t:L&g`fE0-]?oM[O*qO',X149pJB9njAJVd2%ro,l%PpFaAjJ?0!BDsoSQV?+NKBeBps:S=kXJCs%"Mci%FkQnTRY=S_J?<G!kQ3aP>aL/S>Cj]hC!c4P@!7U?!OU<+?u)eSFe/Z$"]MeP;GmY0/&JLmE&6eiL@jD9<<3FCLtP[1!&q5N%QH&XT`FeEMUWnX,ATY9jN*\iZ+g!chkR+.96B(J5eM_Fc$q@-F4TZcAmT]cY4Doo4j=:7\&/INKhU2:&Qe4/CQIe51EW_`6h+j<X%Q'X7hENB`:@)H?SQm[6YXi5"1SUr8)5^tg`7\h!`bP"./gF95#du8r%G[Uuh\T,D"ZXTQsO5m>B\BmWYTFoeS3<-;p%bnc@^asns%c@DfLVSG^VnQ<&2K3T_8M-u3MGH-H6'mi\DQEZ>!94_sJPeL/gUGdo_6QdOR.FKZRg6duae,`qOri#8@rN,bRT@^:P%E)?*:++A"%UWHt%H$f!d+FC8Rrc%Ms-2\sEnC*:;^A3(3G0M#_k<J[S34f.Me'i65B1)ISj3_6hRSN^cO6_7>d(B2LMt+aaFO,)F2L9eZ(sYA3%I=?;<iG@(P.PWn)NR)4S$2cE&pRb+pnMg6hioB,3I_/h>q5ef?qoNO0LbE#6PIJegn,).G;"F)@$Nd)VEmP-MX'Hada3N`?GQZt;%7JDpl(nE8(4-'S=n+;F]LSM?AMp=\ain$Akl0H(n#E)+$X3$dqhkTFjZOmH;`h.`^F><5Hb!qq;+6p`kY9&]Wchjn6f.i<2>fdFb%JhisBkjbg[ai2fsp!n:H)%=.&6E&UXM<R+R4=]$,0U&Pqmfn^LqdK5)Ro[*!gV=,C?,uZM59G>;)ue`[>M\^k_c!UP+5pc,@PM$p%2R*3@b.02(E\uW^#oe#iI=uS#\rLYdS6q8fh]#P-$O:G2\ldGS4SMK$J`4e:SZM;HRX)[1"aMi9RLP#/bkd[hUI"(d@+'=#7["eD%AXiN47l%atcMEI`XRg[GKq1ChUWJ7+TWpoU##ELco\smP+"b&DR\->W?4P`bmJDs"DgDp(g>6_+j.Pf,mYDA,?=oE`U@"peZF9L>%ep".;ptP%HI]N+ScAT8`qHdh#`'N3@W-d9CrLiR!e@gLGG>S$7^V.hUhE?-g'Y\ERZK!F,\ofL[(*hNLQ-\\\O,!+YitpnWZg!6P%[dP^P!a[Ik/RgtX7;0CpHTZ[?l9g?8&>[cIf06^rj/WVebPk,^ht4,7o21#..#`.QAEdrsjOTilZgJY"fhL8?h$;A62EJGViFr)M%c$[$GFGl4YGCG4#"+MO#ILItK6p(sVj6>og&*H5)lZdo.*-X?"@d33F?onn^E]CQIpLbl&aaDL.F?`'l'sE%ISHE?`=0jja_=5F:%^Wk1a.c#X0C"js3lL1(gam]t00NPj[;*l)5]@tWnCZ4ir_Ir?%U?K8^4)X$h`>2t:D'R(a\]n7Ud<R;C\3V"nflT&RS>,i=-L?l4%(W_/&nNu(WH"]jr[Hf$am;sS#P+cN(Do-D\]RA7f[W.Js$8]2WT#L\FZoGf;0"R*WT3+Hn%I%/BIdlbPfKj/DjP>P6VZRMm4cg+r%Y&ke$pDNVkh`0H<9%eW(ar;2=GdM_H+)Oo<J)PV7rohMZRu+VgF)P_8T+5LPLG4p=,Qqt2\8L>1r-TMEKFE:761)rL0rJk#Q*T/a%1a*>@6b=EpoZKi>3LNX_O(Q;g5<=,m&!9_9@E(8GNVhPf]6e,+3:73!0^G?jY.C5p.Xq=SVl^G9a'Entb6-EV(%^[3G'Q7l:Z$WV%,LtkjbRVk`qM3Q`K4W)kfr[tYgIl.e7:Oba1UDG;-Lga%G3K^QI+16=ADb]/hF65Vesu[j%a0kgYg*9JqhIA^=Vs5n&%%>dB$gii%G@&+V^QQ/Y#((M>m3RY,m:"nu48X_,cMNgIE;X0)*Y,X+VcPBT^M1<dbNMk0\Q\OW#Iu#E,iRe<V1@>tm`-*UHfnmo??]_FS\Kq@%O(@/9TuWr(jg[Ml?483>Vu=e%\r89<Y,T^,ah?&]\t><0^Kt8cLUah:-bo7D55F8H[t<5,IsNVp'TG>#*P)2KGNFX<hdEDDGWL1D%lsjDth%jX<a14S3%-;m?/Epsgg3M9$GpL.TgtXhm`<X'oNQ9el5E0ShH1_B%S[`&c"^.`eR&c]Q!^#l#`O*5g35(0l\auQ.LA/3h%)dPhql]6`;J*;CK4=8)c(B)oeN$OYFh(.j:CjOL"'DTF'O;]nmp,hG7%/T##e*1"ZD(8SrrcG6e!^n"MJ,WY:KT:[iWc\DMNCi<f%WBV5)?!M6,-;'&[<4V_-c%b(Cd<TtLB;<H0r>(%G$9+cDoI$Dlrf'4]mO\q)D:+.,<OX7kAoMO;@ChM1h^lKs@$hrhpMOtQG+=,+%#;"WEBUH]lMp5,e?T?9feqCq_+3D6&8p_EcF*ec!+WTXQKYqn4-2&Q'AddJ/oAMBU>8%LqI3e]5%irMq195FoqU)DOLDem9E1$&<%g"UH_E<q?Q#Ca/$RG)ZKE3$lb#.Gp!VY`pX:$DDPr'1&lc*PBlgm36@cl2<sC>]l$EedZifiI(p"%_*t7JQ[>E'k`)J'c2j:L63X%:cGSdZ^5cs)><6N\s9er[hlr\]1)'b&WCUbRr3kBF5U`t3LVsIZi`hQ'9:XhY9#[W09N#X204G'Lj&)$g(;j.2Y+2,KQc9d)u8/Q%5WeJA4lL#Yq<YoCf'p#qWUjl:pk)ejeiF?@-h4D.LC`imCq:T*qb'+2SHjX(2S\`ko?2G3kh51g_st'Qs5U0IOr\a$VF;:ah)VVi%bl%&a6JIYAqo&;B_i*cVo^VmsH4etQ7<Td>ja`K!-Q"9qnN[jQU"t3VT)885qm61W#O[B(cQ5c,h+/cWJ>1J7<;V?BdZNo=!*%M[%n!=*KEm6rj:!SK37[$\n+0:rj@=RflMearEZ1@rM]-9Vu_Ug':=!><G=PRb";W%"8rGBRF99%KZi?d0"5-V#9qrplP7-EIQ-XBM$%/uNb<*di1>iKWda:H5%&mL_h]P]bZ%`mC?;(?ZLO7JHD[:CNu([I[[JT().p=@-YQkIV0j:'VtdH6=/3T]n_kNSQa%.LWk;o5m2M%)^<bZeL>G3$GEjGLd0!%\j%g-:Kl47!oPsW34P._mc7)0D7Ge=K.5SE_ooleS=>dr48If0^;f]u<d1i^0&TQl`Ik90c+^]LDsoJ%%#8csr#S/QKK+%M569_o@o)h"_O:Nu)K+%M(\(?Z3J^2&Do;gO`GO<,s%]m9>l.QAd2L=uWWr#^H]?Ubl*6u:VhJR&LheiZWlKmrc%E+r+F';s>T\hDc0]k\_La5M8*rQo\Wj3cWQL&:i*!2+d&%s,;8_<?';7^q.E@.1qq[N@uJ^h4_$SIL@<#>P=>5&f6HkjA#YqpBLJ%>WeA_cQ5bmrQ3g>8*s]D]4l'92RgN=,^1rah8%AI-Fqs^_*uo-ldGgRki-?^iE=!=[o)s:he]1]R"f,FQ`Wr%8W=[qpH0LB/`d]!%r_5i"4:W:Y.:,/a[,l4ifr=j1Xn0`p^tie4X]=E3MDq1Vh.H!,(8JdDq!.=7:($iN22i9RI?`68lc@eiG-Pn:_=M'D3S81,O60iZ%3S83".SsNL$$I7Eict(>_/;%lfPNMWo3f$ffPM+ARtKOo_f!(@]?M0%)Rgp5i*_67q2J3(:oW5;/(>s1_n0fF]$2oI[k*g?3it+q%`1Q`86fV4]f5S>f1qH%4lo9ejGBAH>LrN30WUBbfdsYeN*'e!r>!2,32E>.TGNUT^al1r9?r%fIVf(J$q+7%JY$[a/#()6[oDs1$%T:>^`]64^P;a3n[DWp*cbc1QXS9f235F[,s3SlFC+&6ncd02Q5Lu!5rJUJ15%N5($IWdb:&pj8VH\gP!SK>k,4"_PpheumFdl24-%_Z_$:g$if.5.tmTs#WHn?\SXOl)T+L21]%9Q0[rcm_OJp<3r,oc0bmdVsBZ8I\kl=NOI)&\k<o"+_1jYF<8PZdFf;oKNS*I7oXXR%dJ7a&jC'eh.Xq=/e1]4JnM?hOmuMR5$]Q(e@+<h)Xla$@\FHn(h%lbTpOO<C)EW!;%n;OcWXc]mX)]n/*/kfJC=N$4WFh(f(4h=O%;)*DRlOOd0n[HtEpB^._\`4UWQ`bU=K:afYB4nK3-<D#@\]&s2"WB^2jn_>%O#o]5^$a4%?dFK,G;Ym!\uPs,[B=q.PNe"EBJJ.I%A5"QY;#99e]Yt49l<O?DgWlh,_g0P`8+JGc4M,Vagchs;>D73Ah"eLH`O,M24hZE?gfBf;/ZuN@ZfspQe)Lhn5d^E*`@fk2YW+la%XWQC#]'*cEg&\eK)N7-=Y@auA`f:;jP9"WNiHrUfg]QW[Ve>MTOI^Tbr31gQ2(Kp.\K0(-h8ce\Z"(bTM]LP]7#0F"bU@Db5nW4A%<uVdHDmu3FOih=G`_"Q<H=[%,qo-CY5M^8,4rh*R0Spn$]h_dmK>Mh/pjV3YF&;WA$K"/.4",I]L$tHE^<RA`D,g:JCKt%U'SQE`%q)T&RT^a$Z^?rO]d.e(hha-9aBRK]Qn_Fkf7H`E;,Wi1%l!((YD)%c;es@99NGErlSkdVgcMHAcaP3Zah9&f/3\*Y.*@51Ho03_@%(H\Poga9st",uESJ_V7)`GK$j#Q0UQARfYu::^gO@t4#pg`O1UcjQZ6AUcC;I/IF]e*28MESTBiNMWgCQZAR>^j#`fD)I]/4%s#!%7bjcF[,'$]ELGa.RRI/nbb8<l^1cr.*)CGcHi)n1%f?#>i,)AC3la&#Y@__LKAh_SIiDOg;<cd>\*YE<43eSL*6oq<K'Tk0D`=?V%G$q)jmLB\mp1-4P0D_0p),6Cgja,NB`"2$8,XIL-ET)A]f0Nq@7_)c@T+'qXm*&r9rto$HD;j4.o%1V>IR.i\b)kirju"-j^MN!?%88?qIN:hGVRDUI7)/g^6_"GN"W`)%%#ANX=@-]jHHhbnReecbL`Ig^.1VeXM&mtV9E]P(e_@jkGf<<V@s31&J8@o+Pl'EkQ*Q4e,%\C@ns09?5&TtL"(]R/8LVVC>K\=PD=h;<VcPPHA\n<4(,T8aWL(W.i?lM$,uFM?koFls)"DLs0V<dNY?.%(Q5m.?0O#[L",U2F?]%g\PK)rmp>J1)g4gdZl8"6r@)Ll]3qA$P%CD0!ECUg:YOCZhnUGj4@meSp%V%G?23+rN!:%Gr]-#qgWbVNue)d9&hR&(>=DKq"ZtT%7iUEq64r%j2q`-<>BpH=h5+!:+2$%FXYHpO9lA]YOJRlLCT92'`',mKm5Nb%oC[$,ebS@[WVm4P&\S8Gao.&F?&.hIe=@[ZnJbI"%`m`U>3e7+E0lE]CFK8hBIL4,5HOB:_/OkfeL.^b_WUDn!a1Y[Zp@6rl-HgQ#i%_[+m<8I+hp)eI:Hq.Wmhc+U",uU./I"Jsa)H]-%=dNFW%\ijDi;4p<Vb>T$CNJCYd[gg#\*g,Ic1^1eiU#mXC_pof]<]_?rp/uf]FP3@g$A"VnRMT-4#:!6cHSXp>tkOLpP><o\m9Jq%HU[CiZ-U-Em'@YdBB#8pc5te@Ll#2V+JJ_pX?W,fl0sSKmd0[D&ScJp:qN8FO\a1XgBVLb(tt"keH^F,Y)JF3HT3)8^maW4P^M1s%4iD)Qdt&J7pf>^*h0Jc`'X,6>SFJC35ghoCp$HklbVe?f9'ulRUZ'tT,lQ]cgIq=<$GS\B?b-2ckMMpm])1u5qKge@1qT3KpR_(+%rO9[In%78@leM?oHJuo.rcgPO)f>s5q/SM:hs\\Djl3fESK%.u9[V14pKSAGH+gY6VPnFmlZ%EZZ$bfZ5DSEFRUpm\R0pC)_J7aX%&><0@4Ie";Rlp!ic5TKMSG-ZKBcNp!jdX=*IG&hRs7!,Q[`J*sE,DqT(LN6$Zi7K/i\DtN9"OCFaYa%Q2=8]`oL#;J-8sKPB"Dq;%i')B*G*La5NW&J_n&q#2rs[b<MGk"7Kf+D\08f8&ru8rpXm>@%I6;Cbs(Mf>R%@=U=n/hG[Tj_kl2I@W-ia,*h[NKnB?bp,pVP/*%rr7K)O7F:.7tq!$4em@8Qt5_CI+KuFZ??1`3QXMI$-8Z]f.Z,.IP]jLI6W9Uisa,@i]VG!8,p@uh=(1('#ua3iI0_8[Ibm/5-;L2%1>a\OPk\rSe`<Dsh3,a3c<T*J\+*\SiP9D:-WKC_eLjc`HhTam0OT*TNifNT=n`0'9k?rk#>`.'.([^BV[[J<rb3<[R2t38d>p!Y%bG)I$*C,it&rNEbV9gn*^5:q>7:@]H$FSuCCqVXin;H&=0Ao]kq9f.*9r9!Zr\%%C^ADm/IAGc3!J"/K@WZTM*n%5\n%5@SfOuRH%#tnE$[]JEuY2e6G5EsTp9(q*^`TZ%u5J"W-dJ`$BNqB$CH;Am;q.nA>F4;;(qf4om*SpH-@SZj^=%JgoqMV-BSPJk0%:(L>s-9=f%jq#frpXs'.nQNeuR&VhQ#%<27[e*d(QH&Xte9MV"gE=f<DDr8=bn,9CF<R?m`n%":r>u@q@Ckbk(tH7qr!u6b)u&fr5Id9C44i%^%(peblQH/F7R2UBgA^>R*KT6l)4"bH[j-?,,:[E@PZTVB^hK*hG4bo$qM*9HLgN2&K5.0S9L?DeG)?3XIDg/#Ss25JKS)-6rO87;^%f/MK3Vn7%2[9aVf_F'Oj2Mr0oqW"95Z&YIrcX%\"'OgJ0jgk82^6n^uWP:clJ".T4;idLZ>`H?Z;l065CjL41!k@GWHOKRkWQN(R%6!`!:l%KN"8JNOFLFck#8ska(VW?R\aq*uqjMERN6J&p3lA#^M]*cEPP8d\?r.$@J,todTe5#B#U;Cr';X&R]oL!:gCZ0qRW*bn"%o#%k-.o.Uac=`h>iQ!2nk_X.5\b&O.ZS%IRcr?u<WPWmkA[S1Z"M3Zh5NkR0%=2-Dij^Hf=i#?Z1e.@;),jV&)Y.qob*@^K*]ip"%gRF[)BAZZd.c]VG/L>MZ'Y49Ur7LrY%+S?5:s2*]dqGgK?eQ<37)QNP)V,As.t%#&O8*hD+kT9,5'?$2'k3ph(ko"=XMi:H?Dd75%ML7UnbK,!1Nj\oZV^MnH#X?#tGk$)@L1^G"`&QNt[PX#Nn9@"(\en0XO8Fk7d@FA5l0jWW_V\8KLAQ=>H`[5!l90)Taa`gO2t7Qg%hdY`_o4jhWk0C$>^R<;Q^$j;0%pI3QD"W!`JNht!p?/$k)h6Vkfl=$-Ru\kdR.5:fDRer97c+S'q>&9qlh+q3juOtQN6Q4"(W45$%ILr!hQ^7W-QN*SIM04i]40L])Ifs1A>rM]%<SaR*rl+c[7idKDn;`7^%BeiOl,CnfZCc%WIPL;DkRVm/4(;L)j3N0,?>N;L]?[S7%L/U-_o3mDmiu:/doC6Lun%@:Ra$PTfGQ7KC5@1\3SJLss3Nj.YYr5@8g+\tV>t4GUVFP,GFY'>j2iZt;kfge%ZZ/B8n7G0jb2V'#%=>l-'I+[Dg'Aj0IH*cOObiI/n\n442V[FjaS.=F-^71,=qUi*56X-\!"1Q$XHQejG&NKN'r;(W(e4k/G@^tWo3GI]Lm77+Np>]4e%BR]0N]9:%&he3J#dsqDVPIfA</RD6MZa66Q[&YR#YPC6`D>&`\K]l8h^!V3gmOs<ti6^e3CC@nH3;moE[HP:-F"&_o/r2/G&"X9o%kIp'Wq-l<&rPMiCHd@K8)cr94HKUQZ8lk>MQEKo>Y\Vo0WP`;pkf7mKMbD[Lof\F/b6pih\EqNA--u6lFOlqBr\<clM`As#=!S[=%`j.]dd9)HBZf-9kHU$l1*<(B6qs&")keA0u7gm!/7)<`O_JJ"JipG9-n$G<)He!U-loghEdLn/gh9sYD?M;^jQ?L28J,X>b;tJ2s%@]<=V4IRY`ik'8T3BG1U7#DrHN48Mu-bY::M^^=4lFsBIQOqU)(?XUkglKY"$iam&*1d2sr?7acd5o*Kg&HLVRpJ:K%Jp[l<4j<U%Yi`P(BU?3S\maDFNic;RW1L9R=BcrL\lU?>`%ru<obg`p=`Z-0?.Dq;hDepB,('MTCW`[<%b&jsoI',)o+sM8GQ75UGW*.E8G;X^%=2UVNWt/WTMrDV!U#/4q?8T(B\.d[&HG]o!IQ?i0*tB'(:VQ7Xq]:3(R7j>U*/>Al-H"]WD9pc2Rk$Mn+\MA!Ka6YcV->t,@fPkV%``kCg%5fd&TM45RB:!!5`X43K'K@HoBE*8-LL\gq*PNVUo4OhD>JD#8s.d>JPC,D3oZ&YRo40^_b.95:B29SH-.AJnJh@C;`PiVX%\2Z+(bMh9p-XU5?a0`3<$tjY562)lOY&G;n),K(/4We!:NTVm+jlQ+i3@`;2SqDjMqWf@Zjs3/UJ=d(qg"Gk2FlI`A^RZtq5E#/9%:Sr,cHD?=(A5(raZept+/piV*XP)Cn#4Z8#?n\)/?@&42V=Yc&U4FEBruiA48*L%fgjPmg2m`M:#S(*hEe]q>d\YF&W'[=Z3!0\(%Tos'RbEXt]J`qOTlp]Md#_h"\@C>HGGZ%nE-T.Hq:os8!L#Uk4<iEEO\i+B=7ekOIgUnWioD@sE(_;$^NG8#P:<Uluj5[JmU>NjU%4Gn@72\4HCHkc._e@@]RE'KC2SNCt>f"(<Y"m$YsU?PG]?=(p;7i+pZ3$,]d[Tgkm'ZCMumJ<!PW#Sil=C3tb>>#s9Z%c*K_\Bqn%ee^DT.^h+1J"+/qF#kDVSb-![aQ8#&Bj[XH[B;r*E;F0'*d/s`T>)F!0)Cq#MhX!nV.5W<4W)M*#LeN>^C-.`eoVX!17N_UmLN,(%PVu`lG'6!=_;Xg#k^Y2Y`c7aEl0KKdnSl%'^CsXdZB_W)5*#N,a6+Jd]l3AojkG];a%c_X2fcA@j=>m.'\BZa*Of^?d=QSXZ..HT%%n5<J#$.7]L0D3<l&Nhunn,J,fIR>ffhg0kcEI,Oq3oFu"^cnHi6G9<+Z^<L-IJN'_Bq=.:)Sb"/Ul*>]pgs-h4ZOs\jP/Hf,[J]%^!8A.jqt;a6RNUpq/";9IPY+HT8bL:Dl/_@a8L%-%!%`q+nPB]@XdZg-4&E@=*.U092#9_np%UeP.XbU/,?U]o5`rSG;XK%2<BFe%dGEmLCc64'q!81FMij_gT=9;qE,eQTaPc(<]/=CY(7[#&8V2aBhTFFPQWa2sO:mWYI<@E:HAEssnF[Sm%XObh<aY)eE[g*f3EHE\%QdK?gPmR3MVQN6''NOW,W:T?dY4B[-.OEhAV$?(o:=sXcnuVT^A+/s3.JF\gK&ui+Zs"\R1`12$824q"WRWGN6JhFcl)oQK^!X=U%/KNHVrUQGkh0_N"1@N>^e6:#`.V`a/\M]^j.!.HjHsF"WI@7o^^2?PKRDij0)Dgu4Et7_R)p3E^]'2t[&c^1"3O%8XP%;b[Y?o\V%aul.68$bSk,CVcWQ"Orrama.3>.@`R^Cs-clcY4j>Ru8JEdm!+E]EN[%;1N;-X3TrJ(U7ska6V4r7&aMSLh>F`gC'Bed+[X^jODR%I=\`*D+nqBe^ko$E4&qF#+ZT_0AW6oa9)6hD8]gTGt8*cd@dkSH!$m(]e*X6R^PN:c4+eNGrM<Jgci?=/9Um4jBW;U37Ap%>Apge%Ln_$$9,7spF>SL#HHciGs4u2+fm-F\)irU;R_KeI3q[3m7MpYb1O%PcoAS2/%WqOuRCBe8,uc*,>?c<e(=HOuF1^e"e(7BcP0mO>%L(/!F`tYZLV79W!R2>hr_l$6h(gW/W&"A31S%0nGY\6=DM^]VB=8#J![>3f4M]ipa34s9q$0fQVI-$Wjl)aX.RZh,WSj!)L(&<+r%\dRYCIrX3B3$c0fX#a(jJEZq(CjP&ppL-+0pO%V=d9?';U40&BUeXp^:++N2dgqWRAbH7C1Cmhgl'bHgC(APF2a)0lWZ-F+:!Pqf%_c"D"YTI\TERM=cK[XVo=u-T&?qgiUY(Y'mipc"#`R/VUe!JP5.GO\jTCNW0[VS'3f3;UiD4"5`Y3hOY/oM?.`E2*tj;#p^F1X3]%[8R70g0T"%J=C\Ja1Lc?\8u"(0'UVR_`Ti>`*3VaE5JL,3_mnG%T]4HXU!JC.(Q_=pLW>,l<=&G>.[S*kjo6qT4X.ZnYsL'7`A`[%7MektZZgoUTWglIlj`\cjX!EDXKCF3s2eGK>[tB18o8CH7@t+J64Z,AV"(Rl<Q+?]PNMC\r'&`u:+,CLG^;#(W&L!e*p$,?29-ci%GKeBCZY(5&>OF"WO(s0Yq"+"J&#8*=%`8:mS.hW'SmPd9T(GN_17)i[%!P)Y!?N7lL."(R!"jD]T(F['R)isNI_3\*?2BnS_t?Zt%THG*l43=#B3bDiMr3iZ\M^jIcSs/F"Cp``LneE2VkAKeGZMeT#*Y$[Ka'GDV>/0Z<d@Zr6[+TFU8a!fnWtSBbn)m'aG?uWYNOpji%h3'j>f6-b6fL%`(c`q[rom-#Dq/FcOpYS=kqNG58[XrY*f:N-_+\Nl+c-]k<4nggIdf$Z.fZ35Vn'WX=^$2=O%%GFi3]-T>5FR*9%5P`[h4ng\63cVb8"E`86@+ZEDO+4o'mXKo21:QT).YViDq:4CC](]b+f_aH51Z<*_a31Ykn"t$_k=>.#e`7`]5p(;WK>DAGRIrNu%bBF@EbM"S[#M$1tZAsJi]!^uI!qY"1D\U%'L-As*9-&>KNUutQ,QHiKmEO%J;+D^TZP<bZR4Op5]Cn]?CgG!i'-IBAp/R\X#4=<!%9q9\,?'1eMS?QmelK=oSWLaW-S32'pl,Q..,Q+M>rO^tbj`eK>o,iGYT`='8Ik6*@h7Z<ccG$hKs5NG,?iKin^O1M)[jRsMnbh#$%qu?H6r9B1n^]3HRSuR;?iq1!8qt/(be\HY4Q$cck&PE#%.-?TjpA"%<`NR%(n3=tnqW701^RTd6s-(*FFQ^gPVuJNI6@W6&HM\fa%H2?XkeaUQ"kR[\OG^Oo:gUA]*3^*?npHAEKlT8J+s7adtn_a?B8H$;MT0KuUT$End]f?&J^R8G7IJm:HqTk6%2ZE*9O7#,Z;uH0.%[]s2oqMkI45QC<3%ptnJs3Ubm[+lIIrUT^O^AdGb?d+QaIeWX/4',eHrT<Ikd2bGS?iR<6bf=Z$qIf\=r8m^o0A\fP?_!Y@s!J`6%n\;ha4:nFjpZ:lDrO77dmC4dp:]BPEs%M7@Ie/&MT:A(?QUgeM^]"#fMgN4-KKf=d5J&tf;uc7Qmfm,.oRG^\3ENC*r;PZGni+=1%o^1iAqn"LWIf')q-c<!7rO3mJpoEukK0fMXr+Yf8YMPe@LG+SFIc&F?^]*+D7fW)#ZUa%;s8Lc"Zet`Ue\fiP^\L+Xs(>\&pu?XF%FN6N=iNHTPS.'jnn[h"JI;n(Mr:_:&s$(_b\X#pq/:%KTK;^1(_W5)O)_bdI.#-=^ZHcU&p9gNqWh.;U0SKDf4R;h",rIJ!WiIXO%\#pOYcZ6;^\0YbEQUJI)a3&T"PbCgDDsM&An?hgg/j-B2'mEa.Mn+#q6U1@A)-f!r)s+2eRBpYR<4csP[][!*28/p9RpA%&\lt8#%1H3tQg/j/+BMD]uJL.kTcEtJB^scKO4ejTLdQDqm#ia+QDPcj,107+\00@O="qPUV'mq<i&mEag$N?T%X0(m+<mI^,oQiN!]r/lG%$YbN]m^\Eb>H?n^b50:2Ds(qZAbkTJhCYn+4^cjtIS&Y7Ya7u:p&K!#!Jp!j,C$2i+A>Lq.X-\`-5>#Gm8EiU=DV%;ALl)\S_r_M%_u+=BCRlHJCf]uTMTsbn^Z*)rj)2+Na_^X.qTZtfqr[.KH@EWcZVa+ilQOa3GGd1U,N%1](@:%mnpF\j6@?(N+#;NWRH65.+_Wlu%WnrTcdunac?/+Rb?;Hf^h6V6/+[^\DBPd2SEnSmMH0[tsGN*MQ>BllrKr,K^jm6_8?)r@/-"1"`@fOr32elu"COL+P2ufb5c0`8P%5:V(3l,('?nE6>f^m^4CrT<!pIQ[:`b]YR$pQI&@C.FW@QE[YkBm2TuTma/VC_)3G@3_OE0A^Q(88Tl8pGLU&48I%M5Q-0,4tW^Q%r;4$'gqPH.f#l=nL*5okSndAbcO49T!GbLbI;#Zo:>=K0A+d.7fpl4<N?OEnUM0*tlL1]1lfrEm3/fCN0:dOcO4O?f,Ps"c=9"\+%R:^VFg%/W_H)pi@>^l"QBtu;:Y7@APbgrXIX6'''gaCju7i<GQh<aG#jgN_(b;J<i14,I)/Ca^fSj&(QpY1tMgM4;h%6VsTC;o?'%pWLQjF6fN#2%IqGWKjP]]sc>Y;pBaZ8[UQql("l$c`B=Es3=afi!0"%+N?Nf2;_g.EHT!?o^T9GIdcc7PHhlJ76c*(a;9%QNkZ2U%(CR^Dheb4C\c$R/[jcVk`kl!B\N#*)OT@t[g0H'$MUPrqpT)QIPhP[kjf8p<h`[.Bp%8A"U@mtiY5,TMY]tE42YQr_G&:6CnS.MQ%\+*IIHTQV,W?pMgAn>UfF0W/O<AXCak45hI7B\Xo2c?K5D'9F*Flhsch,o/2:c;'Q"oVhMpIK,VSeU:sjD7i=bheZ)HF^9]J#tF<%(KZ<6CM@(uV9A0_Cb:e?IRA#t%"=Lm.@0Kkr2C\qUdKC<MI5*YPQ=gZVMZm^2-jLh*(b@@5?2r>L%/\u*<6hdWtN(PkHmUi5_%W;%2XJ8`fj?;j.kmCo*"n9_c%WQ(UnPR\Bu2PP^ePPNbLi32$T?s6&I^[u;uF`l"t^mCObqsH_c*)F\q<V$)$WT5r-DL0Zr(e$pp>BN%EQuI*]X>hWNP,n;AOrVE$UNYMZCJ@C)Mfao3`^6$c;/9!m^_bE+d)>uj]W5;74nlU)?7!T7@cJ(M8fT',6h;db7/f!%]T5;QKAg;%XAt]<mMlTTX3R6ojo$<tqK?TtAYX4p2bb5=9AV#H]q[#<hr7RAVgMd?IHR=Ac`4-.</WC3-Ahh.A_A-`J^$<5880\6`$7/Z(Y,ZC%7+)I;S?5!5d;F:_L]QMbm&`8f)<-5Z``DF9E/[;U+_LH<01*E:;dDK05;NNC:Zc]D/:J=pSmQZ.>.O7b',\^Nl-<@I6PSDkWHtRn%a)IcM24&4/4%ud+mf&X_)p?)a10Zn)hm>f)iiGeDE+oK)/'7`2ULZ%e8:=nj39r?E7$AK>4!ea8WIC89:hr[1^22;Vo)%c3g&^%:%A^Nb6Ul=bZ6*Dp'Ss@IDqQJoHV0(<A*do'$'T`:&5-*@++mj^S;;3d'5F,/dP];X8l<rqXq-2W-QOZ99iS)h[#;OF("YIq[;jXe`%00c$J(%pn[UWRamiBF2kU:PWV<STSrA9p!Qfh(JBhVE*o\E_\m8ka&.kAArs+)O)->7R<3=LJ;gVX#Tgm@DDk@J@;$G&YFMk3?lQ%oPIa"^5=h'6;=.Ab&%PI'FIb`$i@TH?`X)d].:YpdgF:ET;`X(h_']n-YrIfIe<7AK3NHi,Hf$-J)!"X0hUSfrVpD2BFD75@'0"*%Qs$<s%ct*FVPrn.QX@'8jhfd+l4RGS0:k;7a?(XDI*FC!)'<q'_8.ImT62X0JFfF"1s_$-239Me@W%1hgt;Z4Rifk[E:eX`p?rou%q;0sWZO&d+C\N$gAu0sM5;RAn.LB!Yg%@:NR*8h4N"i"kWn$M8@HI;1>A&>p<fo.5<SE";WIbO4M/h@Sbe8f!/%p+QZS5=YIeE-*%Pkf%_eR-GC(9S)EZ*@Rq4P4%_\bOt?#(H"b<BT%u5-7g?:Y#W'fY?SPrOpfD&/mX4+3-kEq])ETGIB-cfB_KqG--4;B2R5SSulCL%Vt@]mAZG^FZa4;2^sd=.HC%Zrc3)f5+=o[(IL%&ap&Nj6NjjXDHi\Xk\nBHUp=rmH-\%Lh5CN=73b[dtb<$Nhb^=e4HJ@:0*nR%`%Z#s4:8/ipJ'A!4c?o?c(g-B])pjhn>p"+'l(YLo]9U59kqnSY6G,ogO@V]KLA3TI&P"FrZo^[(li*Wa7no2E+=S`SDf,HIac/tbF%Sc'%W7*>G+I6WKaN+fuZ[!&XbZ'`.)G'apupTG]R`OST6Bcdl@]rlq%mX8N.>g"+7/CuB:V3G8t\68$60ntt^C:<*T]qra)/)lbp%bF5lqX5o>5(,qQQrk7&1Wi8_E^<54gaG=d)kP+kU;E/%?Yja[10"eW2mfB%d5.GoMQ#k<Y<>EHb<;PBW@oCOGGjHlUrLSDY:jpiq%Af%geQc*q.%S00\SbY-$QHjs:QCg*?0,mRI20W!;Z,q/J>DX%dm$6@[[Y\k5A2f!:82E@+muaa0j`73rZen#j6CV[;1B<Ug43cSq%VgJC7UX<V(DLJs>-[a`LSsu#.7&l^QhX)'.NT*t2n_bYP;jY",ng3tS(ofTuG7/bq`F`T^[\:7a5PUN97VC-8'b?<32bS(u`\Uih%ZN[ci0(jt;d;"509OiW&.+]iS]B.Xr^Jek6pQI3"960':rNY`PJ@4YWNRlEK?JIZfE>VnhVN3TIIhunbD_pF#,dnUqP1,(9?X_$&%MkuJ1iL/*:qk^a0["#?cr*tW_;rd>_]!+,9j7%C=oHelrl052?g],FX@RVt(kA01fp0MQ9*lQK^0k1Jeme:R.C&dZ)(X0j,qPX\[%'<@2W=)?>bG)Jl8NSf3=R-Bpo<d2.p9=<9%[]Z1QbBr@"F^$rW\9u\*hB&jM>E;8Z-07hslWa/=R3WFe_I5%0^"tG%YA8Vm$0I/5%B8!^g/apn!T.;QN2i>?AP:n_7k\\.M$FN'2m(*'(7!H&%R8)K<Fg"bKL!(RAk"R'VRWGgU[C_j;@lD*gFnPIch]qt?qsdhhX0tV.%ksT9#2_/5MS'AL>LKN-:lt.3l9?##I5tor-Go]3oRkqHmnV4$!)dDKaO&^3peb0m/B[-9\[9;#(UDHk>07C,tQA!Ud5S-&.WK^Q`%au+&/N*0T6e+NHpQ*m5?-7_<pKXlU[g84Q>^[72)0n$@<HEGE3ROM>04KYFNf?h_<efHV3Wo*5mVepg61u&:B-_%7gcS-$kdWCp[%&rksY/TYq$=5:=tT3Rqimd*):Sj(Dh4(c;uQ=aBNs8Bpq^Vkf?mpB)H::6i5`,N&0hu>1Pk4V<A[IBJ;)u#ng>4LWg)Vq)NH=<ib%TtI58EoFU8Za3OP<D>M:?E@/GkB(R?GVj7hkZO?oranH#XVKG[>3\V[Cd!0AqY8CW6&+@\jp63G^9Y(&?"Vm?]7F"']n;6sL@BE-%f)2RK9.o9nB#:.T2l=N:NdT0]iO[u_<aJ=0aLK`hqQ1LEg.6LaD]B),[Ii$_d<rXaS#KBtG)pF<+,)G9ZhDRs>e3n)]u\_Hp6VO^%@19?<+4$10m(^f)Q,S+tYSVOuXq&b:C\CY+mb_M1mmSO.3iT!gXW(XnU*!N)2g:*/^c(W?7;+?pNKTNOD?`!Bc>Ppuah1RMIbe@M%>>A$W(!5=<p`^%%G.q<l'EH]VW]V9QYNr1aNPXi?^#s_;Y>Mo?X1pBIWX-Tm5u6&iFt<Cef+f+PY%bH8g-R-a0f;Kn0iMQA"+uTV%D=d:^LZ#Q,'DG2V/r4YL[[`h1%/<")F,TFXVrq60Vf''^)/8d5H3PF<'TZH_cX\V"g@S&&F5$EPdZcXJIt"M*l,X\-j\0!+d$G:;%%uSE@'<,?3W1D)^k?F:0XjSR9iJ1IGhbBNt)Sl@#aq;PDmSdUBGe#Ds_D&_4O4DhUk2LpcRWE+#eVF%(l-a3fc6],8)KTU7l[.f2%V;GNtHXC9cIFgDV&1GkKC_8TBI[S?l[:`'AA=rl_oB3NlhG:bZoLd?U@@"@F-HB1Odg"j*q<CK7hnOf'b1>&#?Y)<iY!EnHMrI4F%O,$M1NN.JL>=kmYm2j`rqj#c&O9WnYfZq\Scs<f!\8]J6jQ!0%B#iZ>5@NlX^>dlXHnJ)YH#,,#h6qX;qci:uBM>jel'H9c>&BU2%llYp]i?9M[?SUMYSut3%rQJr)4+F<=]8q?Ue'$K_mY.c4G<oTIboT57.-k4V3V+OQKg9o3.eE8hVKfOJ-lVdH+/B?"Kl658I&!/k%T<@Nshu$O//%=!QJt^J>Y:pRer571-F[95HmE`cM)SS(sEOE>[]DK3CXDQ1jS).PCL)Yh+N+EhG0[[P<phI&4EqT:*dCcWjR`2VU%M`UUpj'FY(Z?VZeV28"<-)om-,Z5J2/AGMnr76`1)a@!-h;5Wm25k6(U3T^`/3gdK(>]CZqMJNp="g2TWj[6e?TD^[rjW0<l(McA%k,6$3;Fe0L(d#7WS+iD+>,><=YiHtV39D#-[BJRBPFp)nl$[hgOXhio(1.o2474tuSAYlrL:kpOl&qL7'c8$>>,o6F\0ZX]SDdT4%\2u,\I5gT%[GT3?gLLL.Qf_?fe_ElUg&%61kr<;f=\SNq^G1\Lr@Vnf>3G8t[bK@klPFb0pW+THm1Y(sHZ?QfE0W0I`S-:%3S[kP%Wm<_9d6#)h*0TD(Pn)8m5Yioaah^o,mF7>)/L@9^h0aI3X)'/U"nrGhjW@>]rI$;m8>r@'qNA%!qdi6,[COJIYKHJ29bq#)Jc9H1%l:V>+LR[sCro^`"F."bQeV=ihq<DI.qUX<VPaeP?gKq&=j\D.iF0XJ6<kj&lgY:#%q;o"B%oI8_1M"+K+0AlIrp:ID]48Tro6)kK%N`J4M?toMsFOuqqa,E2mqX8<=^7M?AIbJBG1Q]moo9J_0N9]j,j);C&fZH?C(;ZEGcCplZF0P.XTWbJB4P_sm`q&M+YLkDlGKf?"%@MX,qnY,_`CtG2n;(H[u\@f(oF&LH$[[L[ek2f'ApAXU&7_rhunV`#I[f>2bfRuDfBXKa"Du;TZ8GV>:H)bT5D_G:8n`!HH-5T=/%f<;*-=nCaV_oB7o7miQ[nlt["T'_m2_W,Q'QsKVVnZF4^$R2n`5,Xg[J't?Lk;4L-s0H=(P=\SA2RSUFR,+_K*mKKYISOc1jiYDJ%);k(Trtm/.$a-h\FOO7^k^BKr2]T+LI:\O*%prB!m;d\.QudJ2pLX`Qaeg")TW67_QG?aB2^C*!0>"+<lc`CI'nens2p9kIT+$3@%b0&\+Cd0nds2##anp9o2`6=2:qrZ,Ml2r9&M`(C2P[-H#?B^dP7o!Y<o8KY'<qK]k/fM9]A:!sTb5SqD-Zco_ot9'6fu)@4PgYh0%&$^JiNq[>+k5G!7%*lXNPtJYel;b1&NAG0E,`f(*Q1o["X)=C#c2&n7KsO\SBVWq&=]r<rfJP1GQ1`bjFj\9s17rX.jdWB59(hI5%q]IL*oe/c_R7#iq&6!'U_o^1'1k1_"f708D_c/C8pN2\E8[[ShHF')nT,0dl>PlODr310ZJ+?/p*0iY8V$[+[\fCbB]l_jYGE(<X%;bEMqZbk1]Lst"#OP[P9^)3qaUR,8e-g-_seD7O$2<sbco#roe=oVme?;s1\V5ZDbS^)9MZ?*@"YV-]Tj0X.VYg^1.Xdm-aEe0e<%]Tb<A4(Z8uqH$3Kh0M/"F`%T?Zf"UQ8su*2T8uH<VqmbFXlOSm89qi'>W^HM:4kW.1?[?Pa8Ohe:-6/dV=[)h-$^T^Bd+kQK_:Ul%\S<q,`q$GRdcn`Y:hu@,"(sZ#qcQPY^[3(NVhpYA>G47Ph$ECiI_2<?L8"@;F8[M(6`1f/Vhl*lSEVgiV>e`G&!cUt<F)&!j..78%chgaCC$P@%m$-n7<n5sh:$:ZGFbH<[alF\CV*"A2l(nsDl0Vr$0=4Zkn9d>?e7g,Wl)ZRndp:+>KBClF%eNt`Ieu1ncECN0+e>X:%RJBamNh%LpI</CD2qaJXc_J9NVeZh.bcfUP%I-okm2VFD3_cDh<E#okXp61R\[W;fhp#bPVtJ`n\OQJh,d>boTlGs\!f-#-nE/M8%1B0t;<j1CrmS6i\1Yqkd*27YNYLCb.:\Aqj7pqnQ5>J,H>7-@l]c0/eMoE&aIW[N?^C9O0\L\&HcU0k*e#hl+dC=F3b*fG;l?*'$%]c#Pg:B'u8(XhPJ<]G!pp3`F:?DuU!q6j/$XX=34D/R%(Km%dTX#9@`3ir[c_QCq+$(Pd@EMiPR\$-k)l07SM2mh&_FSkLHf.$@/%]A44I(=u2&SQ<(0)b-_Ff]ctMGoPK%^Zf@*KMj@7Y1K+]o5L<2mW@pYm<pFkQOE0Pp@eF0f.$F1]DZWNVdI;%h%f@YNCn/f[1dQV%r9nSTW7+LSDiq$]]\AaBnSO_r\PSQjdtd2&\nBJ;QT@:?/3p,D^/"E(e%`BBo*s:8C'Qh3;U"Pe]C^N6j.3oR$bfA7cWAR@b,*O?%\E.947m_@eWXbRPp<1t!7:qj8aiapjg[^sY_:@hc4E\6,Y3(,5E;h<0H'1;%<8R.#_KL+QfXl`1$eQmDO>u'2WThrkbtZdRG1+uV%;C_(KnkPM]o=gXlqd-D=;lAq/NJ87_.H(.(?GB@;1*u4Ym!^ScI3teeY?&`nhHWs-qYUYKWasbZ=]=)M'_["5o+!""h7&KL0+N[#%b'oVIp?;XFX$U;`QLLlkhORqt\Lo_!eeR(`qe8o@4RHfj:WpUmo#qAd>%PD65AhKq4hhYjbO9p(:TnfUn``_&ltKd>DX=5\`WDa4%_Fa;W+8ke(;X!b93e,l0*]Jf%PN42V[C;Q^O)59&08o/1kP!AZE&MJI_k-9&B3M\_p@Nn.E]KoPKK]>_gmh_(KKQs!Kq!S<\Zi!/%E-nlA>8Z[U^*29GG@nqJG9&EQYbQq8I7T:Y]sJ`9Z.=k9R_,\UI,-h!G7LO[6_6JjMgOp@>KG8@VY,c^s*!OVT<#G.c/k5*bM]9r%pE2Jgg"sWEdem9pe,-M>b\qC#EK'S\53_M\\Y<p?UTa3%H#_faD1SOURb?,5GE;M0fk3qF#^B7(d9XA;XCof5SGgM$0pd%0=Vk!U%KtmG(XgtTA<%_r&c,sU?--oscX^'"5QHQ,A:=a9qh5<GE1c"ael?Pjj7oKu0>Ts?;cBZ<E$G4=0]MM]nn%mkj@dNW1`O8`Y$?)uI%%,4.ueZNo%FPu-KSS;eeojEo8#hV-YIE^NLq?iP6GAsJ&`Hc^+e$Z)?BW#5a0h]R+jkZI_eWs?!%q2$c7s%pA1d1]fe(i`;dk,>7%G,MVV_4^`[>Fj>04Qr>2]/s#QB:VecI-KIFH.Q<7SYGg"d]#,,gAc;7Voj^/9hFZ?ocX$.$LJP8s3OM,qgSt<'P+%\d12]tPL>6L%iLPQq&W0oA../('bWj^s^/^_,b44oi02C\'1#H2)I;JDBb&nrcH^Ot^O19nncl?q;3ON*r\(5&tpA@qDER:?g8'JrhXL$qG`8$3:%Zi@RV)saFO!Est8cEHRN1i_Ss^o\X$IDbP>)aE2pS`B!a>>:s`+'?fE[gL=tp#q]X4;G+!CA<t<qm9td:Cc%'\J5),iS:7aF.\l.%ES8N:'sW)6XZP!SHqH*R[;(U!PM?$_m#^)loC]@+0FB@X&Eq,\WUSWEUu3=aOR'cLgI_ek'Y`X3"94I'eK"P*nL4[Q!tWdKT'O?\%3r[%[LK8QUr!nlUo4,IYAr-I,"g+G5rKs1h4)"T\H4/<NocKn_rsY$glpVCM<p]K`cEathLTH<OEhQ2R;DH8K:$hP2T=C-Id$9SF%%qQ'niq12dQk.0JMiu-#]F^(s6o;3^X=+&(a*K@Y5FrAOfm=Jm&S!\u0TEZE$%'`7eruLhWXRXI(V.<EnK;bjIlQlCD&Rr:lLejH%Li#ZL8hsZRVRA,F1kqH&,1T1#(Q1((:bB$bnoGL>#fL`]i7"*ZLW2H_R\O!hZdIO-d-eW?`LTgBLLIRMPnA$jS_&)JI(Hn%R48A.%$Yk+M+Qb:]8dk%$P6)AVLQ]bG$#H]nNR:j1;a4UGpq?IO\*mMKD[^*2hK;6.2/jaV7BGTVDk?3>]/c>gVF/GaTdJUf8iscK,YcCe%T^WI64?9/5BnO[V/#kb>OXm:(OK<F6-"fS8-9RXd=!<d_57GuWHqWJl>hppFI7s-KFJ=%t>h6fofD3tgDO=fMTJLn.Z0peT[TH.t%L0`]7](ds@^H%PP'Xmbnc/^!XXgZY4L*W$:c0[2fBoco28d@_P#p#2BpZ&@u_rpo5Ugc&75j*?phuK$[M"MG8%sKB`@Pr_Vrj>Os%a+]`tZSAXK).m.A#VS(/4TBal+cP)Xh'=]J]Tg.#(rgqCD-2a:c^*[Jq-3ah)6Qm%r&0cGKkn`S=F'guNTXm%B+.6X[(ufi'B1O3%OaPBT?jGs(CdRU>'AA_@&-^`)`_as6XQ7R%4M/8T5hoJ-q!coR_X'?VoV^1MG4+q+h$@G1EL9)FIYkC)G6=o^B-:GX$671g/eDe@%P#&P,#q#h`]epAA7UGp#(/]Qs?'KR'/OKq=HBO4lI[EPDPiL,&j8$1'\A1HhIKq#k%E?G+\mL#+NA1&<[R'n0KrQ/Me51d,6i*8i%ScQ?7bh7#@'4V%B[ZCLuA+,2umk6aENUfJRUcZ.S4F`)iPP=kKf$fmKEM<$.2M([H?R:I`E;;9)n-QAARDi+>rf'49+HZmR/*7TX%21$l)$'7%*(AAr09*kMchRC<u<dnq5[s3_Z4j^edcRqpfa756Zq@Z!$,OE&kQYaElA6gHN_&s91@$`F6RReC>VW8?E,bNi^qIt"0%L3nP4J"R@9B?adl>eeTClfIb#OUC\O`1E&tV?ZgD&d,dgCmh_Y?B.4$h^=Nf`2LTL5XPB+gS+Tb5:&C=e)P03Wm^3+#Cep;>$aEb%"Zd=%q*Z]e12UIqB4jW)RB;OtGf49)#hOaC\D-P16+<^JX<@GoEAZY%pWNETC1^.#s4K]sa5`F0HD<bP:O;,/i.M^F-lltk)4(Bj%?nYi32]?.QK$K:?7&jVDL$5gm*Nu+T.#0?ZQKr$e;)cgISsaeV@bG+"#"sFUSo`hmo6D(rO2m8VT_$tem/j#VEW&na=Fe.DaP3.#%k\k$l`SGnR4;kSe3%h>MWb'VPXghkgKA0NGEAXhc34>$AaK0Er<nof_R!'7#P'_BO=E%dG0ncJU5"K]Ydr/-U2^]AL3(JD@CNkah%DI?]m6(b(m?RRCrk+ojjl6l)^If%pZBZtQq1Hpi=?q]BEEO8OQana%(38/(RZoYW"+4s[@8+YC1K/hTLpP9g6ZRaedGBrPg%tSsi%-Q6RbpLc]!)GQmn!o&RL6O&Su5CVr6g[X\O:[$p541gC2P6go!Go&"N@6qLmLP6ik`RZWCXTCE,Jj65m_;["6S=HW8HaFM+H]G(n%SY$*@=iUV/*1K)3MTO<'%qW)F_e24+DrqEsa`4HI:^%#(c(!2sb$bL_'19/<D$=IHh9NMZ&Ca=&5ogM^+5"l3r4%3@4?/cpNK*8)%G%;c]0_MMS)EphR@b<MiXm5L6P_EUNHsgC%n7EtEnY@=D/>dk\cj'r<NNM)*/Ca-.)+f]K9^b_EMQq?a.'J7n1P#rYCaY7</eOj!%0nqNDQA%5P&Z6GcObS:iE%.?!A>.i&;L1ka+s[K!bQ`+\kM+B:=m8MLEmcYYF9+;&E-'N]9&,[6U2S7X(suF@n)qa2`n9+]EV]>%%i*>RRN+m95d]2:8Z\[7;T#S6=6Q#DTHEL"1D4VU/FM8n%;?WoY(u*4]R&&1+`M--Zojpl,p*YV&VMciI/N@f'_VSoMHOY*c&%B(d%`h(BL!Obk\KILRad$\flQsl^Jcrb*.*fR@^l+(5%N3F;?o*_ATK@p1EONlYI7O?s[1V)u$7#XE#\qS$\QV/P&\@9F-*"l2^$RBB!%#$<Id[f9P23.8<;bWPQu203s$[an\FW;8"-&uj"&cp_$_"]Pni<'qI-6'k,:VM6_7JhE1S9FY9L"eDi#E9%qKkR'@1n88jrFO:hF%IFWoof$Hied(u,"PGk/_kk*5+/NAS*]'/m]QV#]R79@i]/;l5tkk`J)g_Fq>4uTX"cC9n8;>(cel4TWi+'o9G44K?Y4hYZ.K+bY;%^LPee]pi4I)gULTfW0m2qt1J6(f0V:r(srbiA&'IMV#g(3hH2JD#,s44=4,t0j(N)4AUnhU9R"0=9I_V)JkAT\_-K],#.NTM2h/>%kV?$8O<Q.r#C3HrL?("U,Oai87<A!Dc#)#$*KlCE=om0fhr"u="lXem//b6ERFiKkWSLUqp/eMu?-e1!c'<E-Yh73i#s!rSd&(>%%FrS>/C_s\eqH<ZsUd;t;USNM:\0XL96o'SQ1`^7a5Z:]@K-g8ICWol)d#u+k&K@@C33_s.*m\Rm]spP8Q#RUDAGS!.(RRNL</IS[%`ttq40nsNU5"NdS8[gnGF.L9h*.k&Wo=@NYJ<m32R2@Yfoi.!6D#I@AW:PeqJJirie;5@6phkF'<h+F/Cu$2i$``5kE'(2=9@MUg%753]#FJ&lQ*gHiBJ)i--N*a983UlS)p]d6G0N9'bc\!+-(q_`=]WhJ@2T(Ks+0ufbZ%8eU%+A='oO7r^8X%&Z4<DMTNaFgkdZ`ne%ZK^T<@?k*&FP4pcU0ZYW#Pg,k]j)Yg#]7@d38p-`\@]_2]DH.qg=Z"!Hio>@^\%W>gX2RE)Lu/nf&t%e!m@g$aJ2TFmZe:"al*$K%!@niq)2YSC6;-)<CtD&pFN!l+KHUGl$%n+F(LdNO?p[KLKNtFGUgp7lV^id;<U<HSjY%P6<5VoW5fl]A%ct.gRnA^<'N#thaE>?M%UA@lK&bWDY>;:<6ZeplmLZ9iWG)\-&nn/MnN[J0Ja$ToOKj>Z2(gIpp1*h?4o%(#dRA_:^e.b]97GoV\7qQ.PHCU_>L`uT?mTBGZ%HXrcpBbDJTcg=,8m!LF2Ft#Qnm?)D-pnH#fm;Y6D5(!<NHYe`OS!oKMcgHTrL,QD/-E(*e]/R/g#)^c4+`OW'I(9$cp`>i"5<mZ\%7@!&S0?t0glDtT@ErqTf6GKi(Z\-D@FP_6^AU,Xm(Am$Y`21B$+9jOHd,84iH2U.'+5<d4MsL3qB>"p<<Z,(Qp`ql7I+a@E\hL@k%cBGgN=tM_<Y&5(')k<T/F`h]h8#,D8*#U].;L!/4#SbmE+&_3pjKSUK9@[N7Eo*Fsc<pa1!<o$pjukOUC&E9:Se!W#:0hs)gh>l3%%9j>ZOp+#-HFWK#<9)QI%E_M<9KaBcjPfZ[_aY<2AJfG3k_/9\qQceG<HFo-E'`ZIZGn4r%i=DnJFVsa4B7oSPeP8j_Ze_&@:>`'%l1Y<1lTr;qVuhpK'?Q[Uj6;jaE["XrreSijg$&m`itrB/kZXgHfU7g'g54#^NZI)tG.bid&>O7;0l1Lh)LH:s09@!9"$_mB7@sVI%bBH_"g4n/D[0?RgXBq6g&a7r%Y$7:q/%m9-&LA^B=6T%k_KS`l*t(e;T)Th)SCFa%Q_RIuig1'Ki\Y%Z-Xn%7[9g,/Ogh$^Q0[>4%capr9_W0msVeLj^=eGC.0f/#M1fmTVV_tatp14s>Cr!k^;$OG+,5#C@..dN"\-P3dA4>e:,V)d=-;fm41cBoB<,m5(+r.)YSV^=A%69F6!?YF!`'rb$C(@N)R=7oa!?6=!FLdP*r9JSpTk-!1J%IZ@<CdVhK@OYPA+.Hdi*:U5L)*QhJ%WAe2Y004+iS\7N(l%pTV/SfU%Pp;U3q9L0Es'I4/$hc&D\eHdP58M^3CNUj=PJmn,k9ib75'[eeL,fj[:ESma>'T*1eY&o!ff1%l(_1(ilu.D$'O-@'n/jDJ9Q7gL%N=JBn0g[isVt0s?0DIr,\!OqMc+Y@sDK#oW#a]`l83AkTEsYY9#jBT_)1)-m<epRhO5VS\7WQmY]LsmD/;o?a106Is9BJufO5\g^%AoaSJeDRM4GdEoFgpp@;_YLghFi)\tGP@1NO-@'*/aY(@U$N8if^5=S\?YD"46t2<I_.6uobP09>I-ig+]W0Cl_k0&l.YN6BW"2!%V!WqZWm,e2UA?D,DPN*FP%o6>om5f<maPU%Pt4?nSZO/U+tc_Sgc0=slFSZdq;Z#3l*UIS^5]IQT<Js4Ml:*o(Ep.a\<$)j1VCRW%oj0UpKm!5'd:llgo&uD=C;Q>)RF"]mf/),P(j^7#'mA'6XZ>:=_M2@7mdVsr2S7gEXS;F$g:m;0o%s-'o_rS\7Z3hoh7NRR6C;hd%,0Der\!#Cq\[5/*7er&LVqgu[YQo6Ar^;%H7s3n@StA=EQ@3)'n9_5pU5s'_k?N]OC>^*a;0a4CofB(AjFZf^$TV-sY]hPg-Foh`%E!Q!`PGs;41EiO=&bkD[79q)r.'IOpHA]4#/p)PNpV%*JCaAHHr+E!gN:[sdPhrar7__/?rdGHN)p3:S4LmfiEA!n'm-,P!RVlY#%bYZi36$@e%$TFbo\tE6<Yk)9mYGM]u#mTd`nZ(i*C?`a;Hjm0T$hD8lBA/DM9c$c%(OH)5aOPAu9as90ACtY.i#K^-=47>lC#$"7%1=^J4[<2DhaS=;-6%0U,\Sr4\V@2t&]<'Tj<RV+#2n#W.@b#Qd[<2E'dIF:%JqQ%.H7)lj(GqrePE!VbV@-Ql>Dc.VRP&:P6>i//%UREg.WViDNKnlk/Ml[ea=>eoR(`TlO/taY-Or0D'_q7f9F?p[C,&SMLFu<QeKW!Ph8QO:D2*b<8PH:VhMO"D#.6M3">u3+YTCk6g%2-j&SQnL3MJSMch>.Qon13PN\&2LoPp`um(JdanojF-r@\tE6<aSYbP2ZT2UBE7b^0/f4"1#F:B6$ICg/:<>u/\#sYg&(&dL(paq%N,i92[!!#l:BPODoan*VV>`OGS*k(%!$@($S-"E6Woq/`"Uo*Ql+/h&53d;ODd[>D+n=n/(t;C:3GM+`M%l'l-3?us:b:(Y@U=s`%Si,C5?AiLOD\;Z?=bh@d4L\mU?$&#)c!!rXK^YG3GUiO9fA&f6)!@X*EMeJ):m%#JYmT_BE-h6O:oT8E'7sukJJ[.%IEc%KO5egD%gpqNon;H^DeLF!nF6D&e79jpN4*\^)_G&=HLHF[6B7b7A5<BNN;.<In5V:;WXBZ0'T8?Nh+^K3X@3#,S.kVA'^rIt$)jL5hLj)-j%GS3O%W\hAXDErMP]Hf8JNZO+AA)+:WF^Y1@7)u!Q0'mDQOE_;Gk!pidlH=ok"'#PMLZ;u6U!>m%CacC`+.L7e^12&p6'[KE#_cY:%+if/gWun[=d6sQZZO>J)EsM8:4=4lHV=<DHG%ti$@;XL'm/FlUJ*h>b@I:i'J67up%NBL>+>al"b2::!!/nb!`YN#<1RIG87HO'+%&!_/&H]8@a0l=$WKDO)Ak\]60RB^e2q_CZ2X%YOAg^SucPJ"a$,d`YAW4d]W4^oRe^[a*@[Q8uA6tUQOe'@`d"Ah2?hH!@;deW<&%*:b9phZeogA/IAEbB0reD9-+IKab4Ln719nkGk]o]]3n:D<SanDOc'Sj54elV2YSk-Zd12+uT?X*.5Z[&3&^1;,?8`.<"Qi(j<f&%5[@9HqN,-(\/T\MlUWti`BDbaIf2?j_QKi+OWb*J`T[E2Y_aM1CW5O8Db9\'5.73shhkM2fO*Gur&Ij2cB-na^b[1[-;mrmjs2ts%Yf-gU'7MR(/%$]9Vm<<e\RrqKo'FRQ]8W^R\H[qf:8.pE!5FishR=>59JMHmc@(g%T+i5D`me?-ef*JZj7P'Fb*_<m?Xol>L7@Su%?-+"3O0L3F'JZ0UD"hr9b.CF(+t!1^iSZK/I"\:968>hs;Ic"I`D[1L?(YS^]eJY\C0XEp:VEETV7_^pCL#'Y3-f\]F5S8m_Bs=\%(!"tFC0Y!!TF0;uFI7)4coi93S;b0dn1O^n8Kn!&!_$G>Woq2UY&$X+B6V:sEHQHnR_&A2fH4Io7^pj/rapG4hR7\1FaUCmRdeWm%1AdHrL9eNKf(S4eL,j$&m@8*>r%Ci[>,NmJ3pur\<DFi<F:[-5Zt+nrF>l?!=qB6Lh<2\6n?ORmbFs\=qsIl#^KjXG\;[Hcq^2Sj%b4Z4nr]T]j#L/P%@2$-=*lC$eMC??r.iita(Z*TIm`]H.X<,[>>l1)jZtJ[)LW]f9iN`?u&\RD?F&)5^3+iSF+e<@(ZU^Y9D-.Ak%PoI=,0lQGd<se?&T"@2rm<$(5emEirg@r=`,kFk:LQ2,V:-79q[:EsKac2e/VE;,BFk\gV!T7=4+Yr0&Vp@?kh=a%IK&4CK;<LYj%k4c<1^-Ahjop*uH(R%Z>F'\DeSX)bmr>BSK;m"XX(K%W6MjZJkk&^(2K<?\VXpg58U"7&-bo<o+PVNqm/"S]-.We54S\j?<)BuR=%1sgrgZ5.j0:YZL],rDmLkC\cQ8\1pTVH/C'?/WsYPp'),+pu+$-<?Bi+@FU=V`,ASq1E"kbg03D_Ibb]-Tu@tSO`,YfIucW*]ojN%3)%hp_YqD?m[*$k>NoiarOK1>Fqns5k&&XuB?H%-6oFCP[#mQ)Mqh[H"rl1)"m<[.T13&6ET>X#M*uVA('@KML@^I+-ZO#Ke,]2t%XG8sj)QNjnG%gU2N^=K=J-.k<B<P9iW>?La[8\BWZsrjO]La>WIr)#/r=5RnGT>k>2E;_e,u;QaL_t:(&(A.ALL'F`_N9OY0k<]m%L#;@),E,':<Si]Ws0XV2#NJ't"=8(jFdkmB)lJeAJ"O[sf<Q:nEt7!\EnKrX<pXl;S08'c^V$&pk8_Fe`]Z]KmS6ijHIPhX5JI^W%jn,0d'i>;tkg#ZRp%(Z0hi5ps6ClcId"uaD>5ZAEhP/J#>oV>H(_kk_Z%9;FnL*R?g'M/'i-dZ(?nA#pXfl!^Y8t2.2F8-dg_rGF%bNMrVEGGRA;`.%E!fU=cLg&]W<If()!8SNm_cHk.f5Ll2`C?j/N*?B$O9[j8'k!DB$-?0aYmSj1c\NLTrYhh6FGt47T%c^U^'ZQ'%8=g_bT8gL5&j33L0BF/<7^eF4jmuKJr\%R"([+kdpn`?mDIf6PV0od's)%]f?ckm$`$''7)u<IH5VLp20BJ,++*gbNo#8;WEi_q0%gg1.$<',4%DU<&$Pm.KNl8P-;Tg#q5E&L[SHi7EG%5l_MIaPY$NKS,tFKaTkGtOjelPEZG2u_K,^3fgQ]gC[j6Oe7C?g%hcT+*[=%]meA<qRO"l_+-\Ehs2)L)<10kNH)./S4]pj>lt^cX.N&!N-2=2o[Es1Y8le5^HNW5iWbLYHi9Zd'U#.NoY#]^"aB5Wl73*HraF!m%8_iVJIB/uE[iFR;^M#ogqUbr=oufh]l8S>A<$D#47@Ul^=jTOmlPESK3A:heW-eK_Wd0YRY@!gspr:)#0D\^6cUk6Kh!5b^3#bhZ%3m,-b+fZm(e^'S+1%N#,!GQMU>Q('SV,>E7R^$cd)ZO-YkZduuW;n5RKR<Zl'<Z`uW?^<dkH3Y4cT0pRX-)iCMah)`6ML<cgA@)E%f.T0G4Oee,,G3uS]8pn.\qe(*rC3aJkeG_&V!]C,[d?ocqF,2jjF\KQ?GE/E#H,#T+%[IF?GAc@6h/?\U@.]4N]6]D&WCt<T79SK%7kB^B+(+pkNTg97`]d(Ohs*.gqtLBKdW&$#keG_fLo^:P.T/dOf.Zu$5Gqt(]R0T^j:uX7he6#(_l>`U1cF.&IZ\@TjGm!r?GG\R%h"^X6NDkPs\W:ZfHi73O"E<6qmc,8#$9*K>p>,$n7PR$?e^&S,o'#iEAKu-dM`g*;LjT)pe%5[WfLYc5741,"jMQpuY@#A^n6>hq%T*lI5k39#^D70uG>C&">I]qXjG3+PSqF0<,2cfXFlX%>>MF`CFCT)UYU(p$Cr\E?DIaJ>(/r;^A]mbE0H>iHaeAk%gf.U#.i]><Y%p\Mk[@E,n1caT(O!7$,[g=Z/r714l:<Lf7%Lp_$UlKu;V,Jq<?1bKU@1-U*K8j/dt!KHn[]*oU_SYHkeI:\<p2%^r-nO7BKiZ+2R%D=;IiA\["5'$CFE&u^TMY;4.reWd2RgpP=rcJ$\#7cA8s]-nS1a3sn>F9Q$'HE,5+oAH=+9O2;oP2HU<cJNNR-M+;<MV7+!?Sf="%HutKf^:f"(e`so$;#Rl5,h-uI.miY#XWc1)bsg2V@r(O.BRE"Y#l>_2=5eC*2ML;EgSo/?I=2l+Kte/WoQIViS1U>0L!/7C7_!/,%mgHV6kKh$$Oo-T^bNJK6rGMJ9e*0g>SaQ1FEi1:6ST]='7_1[bcZO3q+8nKBkPX>oe)pYlT)$$=H?8nF>aS0T+3YYH+/RK'EIE3%%ofY/qD&2in1EV[W/]F77DuDc$X=RJ-JB;-c8(kMp-)%WR@]e<W$+'"Hgm&-%JNSUh$eCYf]228V81p2\'\=(]r#W\N;@'Ro'S_S'%0:U/`b&+$)fiuZ)c'?USadd!FjS97Y<n\u/[HGSITt\;9fq#\(>#;bujSc4Z<jSjHhN^p9h'JaAnPH0Ul?A(!?LoNYp=hUbIe%@u%c]rqQktf@WlC+.dIGB)BRnKQ?R?]o]\QG4`KppagEjfEkP.AfV#/I[2fu*&;.(e;f#OBLNUAU8"m@J5C(Og#L9HS]m:=HTln89Z_%Hui=n.#Z:1[tfP@ZXS"/=DfBG\2^mrZtln\Ndo"&bKCh$lgu"<HD0glS]@qq=nD5\&CU@UrWK*ck(!>F0<d)f1NZpcoDEMBIV/*t%S3"9H?3J%fJ)4"H'9!=s<?L+J9qe4t$,t6Z7^omKG'5*H[^OIsGF>KP0dhA)>Jo6!aB!>\?7ik$[3atXWL!J_jM's-M>1UGb.Ab.%X?PAL"P8:Ffr\?A_&c<<X>d!uCfhH[:8I+HqJH5ZI^J<RVuF"J!3F!/2K_g2gBbbmXWbMV]$XJnh59PI&$tn#lUM(/*A4oc]sE[$%Ud=Djk38^4XUOS:$CELo5&TfK:YtHujd!ngm@omullNpbltJ82:Sj#YA>>uh[sAWAZ\BTN*2fes1NU15/=b"sh/80A&n.R.j3qpp%Fqnf$i+k/(R:ZV(ZXR@?]95<[mV$A`b$Ir[GtJb501hSTj!:P#M^uoHVgE]4A`Xut8]p[shCU"Cjd`02.\!JaJE7)?Q-1`kM,^K;%m]6+a+sg5Q:*^>:?/;4TPH(%+48tT=U-]MC20!iN!A.X?nZF>*mXltbq!DAULpqf)3Oe8@;KC6RFMIbGc[M[#X/G-M0UJ(gQchQU%__Ma""I]!SpT::&caUsVbFM[8(M;c!@rlqaC&.Ji[=m408&&qB5r\0HRF[I;<08Uh#\;HYSW@:gM\toeS.RRK4C6,f[Z\Hsb];M6%((0^Z;9[;"VPVN5`\R2!/?_#49'Y<MCqG.;g%neH0P1aOOY\*m*pAdFgk2&>H(jR45'a"tiN7Q.JP@[dRErc\-G(dR[XW5K1if&n%;WXlg3poR/)s<s7n!]D6!p=Ga"*@@p40PdcUcd%>'P1OsBe6g4rEa[chM&U];sT!F4,7%$X,KiHSL64?QYFafHV8VVnKqc7lV6=8%D]`c:`NR0p@.7dTBaSC%'iluDs"_e6dt%&oMsDA_n5gZ[JYcUn(nQu!;#!]$,2W8Q)WUGHS;4c4?XVhqcGBUk/f&p+S]:o!ju8G^%\;*>9c/Eq7bS4C:._M>PjiP@4Q<VKUm[.-]h%%06;I2TDgEA&Ps+(D&X;@GLXu/B&#QdIU3b&k>X'$8*@=%6p_9.Zi0">]TVV?DM%I8#.@`8%KOFtrbLrH,Ans'C(^Sc4k`jJsqF@))'FdckQo%GH_Lr?MhViFO,+FH4Op(BlM$#M]rJ+IY]7m1HF^L?^,jl_jciA'u2q%O/l'L-`=[.S^-MqpW?ji2ck1D7`O&VEjMT%"GnhB_0OXIi'-7@T[u7"A^k8_pdl1A\P$YkV2?EI\U*d[l%Ik+cRB['Rj]'XfE?+X%rN>r8OLMBk!N%<N-B>&3CTA"ZjJuIrRqLK`Uk:FfAhs$JJ8Lq;Y_V*>%XXhn_@in-%t&EeNp?b*$YJ5,B1@U<DWqD72mP;%#R!+*%500POY<G(<3LAkuJh2BmfdC.B+Va&q^JPn&ZA*p*pDo-"/L[d<H1JRD-(VPE]"#&q@Cf)/RZXaNB;6(1*k%%EJ9$VAP)^<H<4Z.P%Q3*L8LBfU9f4nN6)%m97A/>SN/'3,G"\JemJ7knS?#<?WK+S_Gh.,W2EsE$)jkeP%NIl4)$?A<E==8cHOW\Q^VUHLk&*s*6,iBt.%UnM/-'QI<>&/9@O=6njhQW&A_ZXY4go-Q^#mj&)XJ/f1]&aT>_*!K59`-^?X,WtM`L=$$_q:hgj"HcSq".jaK,W/'>,!U!#C^b^[%7o.#s%)YgB)dkcG]k_+OK<@BE=:O`%N#5";]c*ZmF;icJ_O.6X\<ofKW!o4dG(&WR$W`mg=@i7VE%hkYL+)KN&2s;9.`X.<S=M>%%Ri)q4r:$:il-OVqO0^gkHR%",S*Q),@n\<3a(Z`>a2b)42^V"g0uQF%NQ!8Df8^@f&CuA!A,Ts'g9.3D1@;.HS'+>sAD@k2M?g0_%OHoc=N5L.E!>kKAA$F:6MSC&IB/RPM]QXbjhi?$AbC;>9jg7iU(lLNdB0kQQ_g>u3CEe^W`?%AtM4C*>>T`M`V!b@oM1osC-V<A&%LFtqK&Ntk^3Fm3S#YZeZl#IJq=MUH-JTM3]-qk+&`1Y6Rgi>\1?&2^fT/V6mgWiT?G,`,A5lkSX(:^W`HD1+]R1r<bHS[&:bHrf.%Y;^ON^.c_Fkk/O_g6]o^5JWaKBjW4`q>7gmPP/SYFn'`5-gf*q\b(/'-gf)f*%&Ij3GDhIpauBVR?R>UZ<dUFRIP]n;F?N(k/)NF%pl;Khh-=bt%ccakdERqI%HZdldERAobP7)Ma3F9ACC+:uKdfADN4`\Wnl4SHpX/EqGMZZ_^8>q-j[>fP-&O'W:Z&QT]A7<'hnR>.%A+-c&of'98<@AoT\$c^QdXM+CC/<g&<UZJ9c>rp0h.,m"ZH$lQro)#+=b#>!3Egj04:;s@IM_>J:\,B-XIG%\GYM,p282]FUtTfD%^"LZHcO4bCGeJ>Ca8%ln'Q%9UddE?Gea.26XKo0t4RR9k2s[N$<;!?B52%E,?WIN'`QOgpAaT,7U[TXYUYgXCS3:F!0uACRTHBZH%s$kYe-R]Y-s-9g\:Ja@l0SZNRpbV_2I;WG*#/2ZE>@+]YPS`.;8h+,<XBUao$I/a^ARC>GK72-rE6D96ot`Q3l@K+ZpKTB7n,_hY%+1_6NDrj8ZA.$WXFV]-Nkg09T)",23o(kq@rB/_Og:kH9$%pcKaO:uUCR:.0+TK9NI;:M`Yg8X/@(u\VA.J3JfZt4IG(CF,E,[,X%!g97,An;1<Am#B7:F87DMiRS:H9l#TA/M?]*`hEh?G>PtC+E<GT.<il][ZWG6[-8EQ*b;<\P4SQK!uTH*qsNjD:(tQ^_S`\`h@+r%CE)m4AnC:B2&R=NYp*hKO1Q9&E]toFe0!K,e_3NjRcAe)F]...h`;Rl<b!YtraP^/$('5FZt=2ICopkOE3fWGqanUNpsQku@>g&2%[DRHb(\lVN=+^+sX[?qWBn!b#`^fY",eG,Q-KR<AJY`2!h\=ATRp]0<kL2,bFgDsT$OgW'^b'hT_$^+J%KELCYK?bBlj'j7Rud*$%@:9Z-P9lE:^\DpFgC'<Z0Y_pmVH==2'3pTWnNm8GOOqgY%jZ*3Ere#&R3qabm_4<`H#nPC'QL],<>MdDN,Pf[CtZPDX03DJS;6I/%F0:AMG;;8e:TY@`1Tq\rYm:sTW3%Uc`YfJ4MQgrg:+oc*@VLDcO0i$&?!=M+)`a)-'MrAR7Sm;Nl[AX+:KaW4YC$`V>_gE;=usZL%`6HtbCWM^-Q4E4Mfgne0?R,fG`:_GS+\)<b46Y@aOt>:s?au%)4^k^3[IDL^kmQlm[GZs$V3J[9TbVG0AGa8Elc3/.p7WhAY&el,%'<c1!G72rWBTpr:ECZMp_c9$GA\[Mf2BDKMdIT3"3Oe80.a%:o-*LsK'[,l8?t]X*D._b1]F?A6%*q.D@oSpZrWOUS6YqJ`a%N&m%l3b9c-`+ij#4_;m.2$Y7((%O-#R4^VHsdqIB4V6866'p]:qe$lP'9`a81e(hjHbK&N6cJh^hMu@()"7bp"q:72@=?X-pYNL8&;$S%!q(8O,6>1M!D%H;flKt4?[[`b.ioJa>:'ka>aJ*4`1Wc/JU,#XZhDCP5s`)91,u'61_utq]KpIH>/WKhY()3;m.D/I6o70p'%o[R%45Q:'^\41&ajF/Li;+f*9p942`Z[!2'6bVS+tb>Ug>*U.k(Qr>'C4c;Dbh&(ah_I0<8*p<s!TqW<YH:A:(tM,m_tqK+8=Kdh[A&Q%$alJK,9MmcI#^d.a'W?*(a`(?1PUtOfJIdJ2)^G"Hk42Bq\s3kC`83SOis\;]Z*EP.#kq7``nF\44eX%N!3W6ZAI.OS<%<NGa`;i%``nF\f<111XR)S37!8#`!b$F21Y+1mH=K^FP76._b^PC5NSa;`A$GXebF+baqbucd4&%!`:L?8/rNobe1;G2uUG1)1s,Jl>4H]Pa%9VQ:8&'39=bUm%+IfihZU`=.Jp0;q786`aW9=fU:c:iS6cHW#]J9isfUjq]5n4mX\%uJ[4gFuI?FDO")g%R2tGtk16r9=I[]U-q4%ct$DBG,flE-+hS8[=H#\s-4pL*]&Kd]V[Ad`]=%)S4C1ODgtfl^$O@2<u<X2$sT(=c"l.H*,Aj_fB$%S\LlBIH.R\<hX-'H9>flC%o=:^Fg2cpmhoNAkDQ]Ss290c\MhfD1=JK8p+&o3-$fFLqE]7,!6pe)EgX1(=cD'?X4*hCF(+gc=\%o,]K1;G[C\+UiN3EhQ"OR-:%p<ODR9B"g!R[)Ko?fVlc1:-e8'qF!p[EQ3FKbsW3lpWNEZE`3!brh>"[G!f?D0F?pd7qdmDgiI"?Q?nIZ@#UgWl:Y)'&FC""K+]U%A9FkV4IKEf0>Hd65K.7)l\o(gV5o;S*c63cJ$T5pZ;"["maZ/3E\8I#"*[#=Nq27IX'Sj_o[h"Q.66<+f8rtCPW'aREe2URr/34E%lU<,W)L6#R:\#4G(>68:R#SId-UBDsrNbl&P0:,mnd*"F.$jnsdRl&R(M;#NF51M0)`c6Xke*sT[Drck\YJKg4_np$gFdcshkgqH%CsRCYEd$WFlBFAZXiu%^.R7ma\s,YX%rH-0s0?Q<"kqd/2[cNCk0[04?D1$Gm(nJMD$jBHM(pO,.2$F]:)[t[InUco9>4dj_+mDV%0KTFcg>qe.2[&c!+h-5=h-oBmY@^:o(@4:jL@,o=I]mdP?ki,4D`WrPFT5u*Z-5aR9,-ip?Vg),;^.K9OQ6%Amg!/qmn2u6\$*fh%J(pNI3(<i\f`0l:h4,*(@nKX!p-T!sUQnC1]2N0NWpu?Fh%bg<^WP<khqRnW6g)3_9)q$1D4GEBVO"+Ch)k>unl2';7^urHZUYl=%Cu)?.hBdiS,5^j,s!2pWJ&9]a6HGXJ,)Xg5OI$\V<_O?&?8?V&S4Xm*$<-Ut;%TTsX/_8tOe0<8"?pMmj1js$2Z)MV"9"i@ASQGS%l:..eJj,2-U8$dM=VI]4=jEM6UecCc=CZVD;"Q2:2"R_bLf:mI(I_2m;@G:`C5V9V,Uq&'d\k4o$RB4L\iA52(p%RQ0W&AZb_qq2%&8Cg7#^TfU,]W*+?j)J-1Rk]n/$].r2GM#P24UuqaJ'lrUa6nU/]4Z$B@`e,jAh%r>L/5)-Gs'sKoMHORjtbj9hh7C=>ti16[r"j%O>W5]6%V<Y9q"sR.5.`VakgJ_eR=34R:juLVZ)d@,TZk@Vdu&%fheS7=^eXE[%I[ohUGMMatWE2l]/Y%kLnGo_i"ge:K<mIFZ*gQ%!!4qIZHTNrS,@=kCmhtOaF_Dqnk\<K;)16OLpG;1-F4k2XDLCWjY`"0`YrD2KltF4_bd-70PFV4CSi_jWNpX^fE<)#fa%biE-=;O%,&!-#p"t;.Bp>X?:gh(RRBg_g$L3MK+@KT^e7#^.Y+KCCG]dZ3#+L^mVPpG&?IM<%%G)<bMQATRlO<$:@RN[H\g#$qR<__C009jn%Wd0H**^j!P>:%hL)-Rp.$APWW)-U@5g%u+\$%YC?qYDkO.J4;]4iRdX5a2>3+KU):W$\E6"9D6&V.=Yq@8<sO&D>gLUp16iGu]r"%TZTH#K4"mf"rdaX71^/bLq:SA#%=7)3A?+W%)#sQ"$)H5qG(&dGD`-A>FK1!+K":ILV?\)arT+>_'DL"ShF*ZT+1TL]qq]U'Ir,e%#glAkJag-B=n]S+8V6)WaOUcB8`o']'LQkJ1bN(<`X4DQW%&mgU!cI@;-":'0m_ntH!u[D(u#c,a/^QOd$i&>7H\To9nX&]G,,Qr%j*.N'CCZ<Wnpb<;K&gfRb"I?'^B1hK/brh7!8%Om'Y`9\H@X(g@/(k%,WiM]9_?46U8k5Ge,S?1MCD3d'p=*2\HtUFl_]A\MZiu4%)Q9?eU76BFKPbN!2IJ:0'BhNsA2p<l]J+"lcAR9GbG-a,2['a>S7p=X6P;`<f&5El3jn();-SoL+3H8U!2unk[)JCZ25LU?I3ra0%cC<6!"*%_uP]$!@QR0Wu!Q)8_@9G?&,"9LO7?0Tha]**!#Pp]I0(\=`!dc=NL*mqM1UOe$Ck;PO(N`n$@-.O]_EM'H'IHF3,6lU7%CHr.r"GAI`M\&G^#n@Lnk&@7-AsaPb8MgcWd/=MIO<"UT-^t1NV4*9pD_^gVq(Oh/+@HqVmi&DISU\]ZU:+%SUt/O7oE!V1"HbZ`%1N'B&e<C#]%3S=jTS?uELS\FH<@&Q6/=JCY[K;%KXil;_Db78'[k=TbO\CU],YKV0L,=\t"1^FEW.Km<7Fha[KIHjod1m.$X9Ds/%"bd^\&kr-q<E+R+L8aY21dMfr(d_2]7Ob?pN"B8/pid^A$tRL;E5=Bp1W'o?!,MgQge;D09E\!<(ef_EX!06;5D9Zn,fC"rD*]=5%Nhb`2_iX\<U8F)-2dr9XOX+0G##TK1+I^4l18bh=XThZMK8Cq_0(Xf+'@['f:dj@`%&,O@M`t&rK8*cI\5H!(OCW*^.6e/*F@.:/%a9;WDO_!-a?jP-_HAa40&jdEEEJVWcKtc#1hOb9u!?b&<VTEKU%)?E;6)ge,bCm&98ELT:AAP(.(`<lQeG*[fU,rq_:8AV:\rNpc%p_G)"%KS-j+L397[e<+]aXWniqgX6)dWp%o.8b;Hb`SkAr%"&71dMtV`ckBLjq(?S!2=0G6"JF_ULqZu[&bK!9njQ_YriRliXf,M%T,E$!RDqf80b&uj9i;k"M%Wb#%"X-]M/7f!7d%R;CP\q]3A<qgYjE@]]PbhX$NW#L9O'Q_FjgfM/&,m=@%1+ML^%CX6]g-92?mXt%-8R9sM14(^DELkY$31kLCu\*]iGOP_=Q6=`$6d.0%9[a_'ga/uL:E0Efr]6"1DT\/S7gK[&HsPAMW'Z*^7oW_`0RaVNT!`,fjIe4%/[.Ns.4u'lZV4Tl+q9+09Ns;_N7RKtF:9EfL82fi6id,5$^%s#7`C5Z\nSjrA2LQ6&dR"aJom4t!.?+2*+U8."PQ@^1EJt/MqLT=%R",U^9MnG4Zao?2$mDo!3fsB'T[jS*q\GYIInKpn!DG!Q.?$RFB&g#RUhj-=7)I1U*)K`3G:N,C%RZ%#n.F#";i#*!@dm+ZL7&6o%LEp@sBJrDC!)k/n^pbSQO26CgHj#=C'&EFn%>%0aI>!;>7"p,gEk7>-?,.:rHQc)3$%KI)&-<6"&At;f<$3fR;*e5&Qkog?lG)tW%C!mhtNR4R@&dNsQ!uG;(_pegS[r#'!-5rC89M'@LKQY2jCW"d7]k-IQLDU5YXJ"P'B6$N'\sOT5JM9[U`1ZDtl&CKBJ/AoV%M2,e%9EVX9C<?`8q*kgUl-2IekaM:7+WH(Lo[8O<ZrNQPWG<Dja<\dB@39B`MXb"AfA2#q\2,faRro\.%T5.pM`7$fV5oKmimH2]?jKW?%_b(!`EZ4Y;V_'R?0RZ)>b63dtL.d7VQtUG%L/\BN-.=l1<LMbkK$cC=Ch_lAr!>'cK8?V=:<u>"KW6OY4`Im(:uW]R"OO=]5VhBQ%N(no8`ZQTF!'ijX,7Xb@BG4?Ac16Dsq_Wl1e&Z)c#[:#J:F5t"W=^Op%F\bf,%E?r6S;q,LJ:.4Fk.;gBXSS)#TEb;O]*8)6_?@m%@SCYF0f4I7(jrq?KRG4%h*R6\c&9/dWsg](,T4HY.)UW:=pc^PL(6[0!)/4g21hOsRh>k^!"?^Q33j3/R1II+NWHVM0NB8X;s.$Z%p=q%LF/\"@8B2Tu7o9qJ&6U\,#haq5Du!T-F][uQ!I.+C[:RNgM,"gE/t$,Ke1jlI%3GG+VM$4/Jmf(Z7qP[TRUcuL>U2cV5[4pE%_/s(hU"EB[:&N?<,6lj;JHmp9T1t:'*(E1O(k_%X9(_6f'ol8oRR]RUgIUhU-c/9k8J!67+F`9$"dNHrpm+2W'0-q_J:^Y<mgKZu%#W>7DdRY1YqAOom&Np,5W*L[aB?6<TBUru[!RsUD6-5&sE(U.!,P?]VBgG*%Li-t'<XqKQL5$J!r.j.'fsoop$nm-8$QN&>oYVRM%1IU)a,g`dJ,\ZBcE#=+EG01thkh;83e+4?Z;h8*b9Mi:88M/DaO?&U?I3@6U9\AZe5#Xf8a`[]BD"!#6)k:/f6-FfPqBJ&.$lNWD%aL8@Q\K+f1,uY,eU`t47!r")=p;4nIV3>+X">>Hmjmj'>Lko*9"BHh2Q)WMB`=6S/VGe4d5iA_50+fD!!G$5jE:tN<WCC+B$R7Tj%7,h$.E<lPI-5%Y$R7s\!!K<03L:f5.>#L4(\`f=#7:?ij6;0gl+Pa@M=PH-.VYU;mV0@$PJ#>ieP"q$&CKiNL6&n5"Q?&1N_*l7a%?o1Qc`:P+GDYhd\9PU,WBa$IGIml1G7?,5H#Edb50R8^/;BknE<.e@`[&1CA3Ue:%Z<-3&^mD782*;?l*D@6rpEDSc)ImG;)iWCY%oN^m2laH5^8W!VFOYSZ5^EhOB2*AmW9[fcGK>1a#olbs$'uIJe:)3SOMS^qK;551DRHrpg737C,l'@$3_9f6;HCl;t%YV2VXpYSA%FTKHWiHS`KY=K4'jmPaqSl73_.>NUB6p>8XG:(@raE5r]QVo8_:BppEZJhuXQ3Je%D+#KL."'Lr!*/2(M729?0TJR'_pkV<`LpfG%K79l^Scq8Q[77*01<gmQiIsh$ql:FWZls<=Q[qPY)V5jUV\IAY`tsN(Hd@;jB=K`0VNN^;UJ9eN(r3E7[pglNW*CPUI41Di$ig;;%>Rc0"]#q-S5r>MP'RU1K6#LrjMF_S$J0o0iMCO*K''UuF1T>.W5k4oY,OA_@d<3pDMTNJG_%<>6e@Mf^r&aQE=qL,D7C`g\8Ke>?%Jdr9@crZ)WdoVt]>@/hX<!#`Lh;2HK"SE02_Yq4rmgZ&5!7=bbD$#A1"WHE3HmX$,`sVQTi4@@8F^T%lct2bRlagOd&Gh>:I"9<O%]k&$)s,NTlQHK:OJmo1Q]ZZa8rY4*c!<?CMh[/>^Z3)7/#\iZ+;bV6%OCJD9!d@S,oq[/aDS'/hhF!BBR^UBCIV[_;6r"U-_VN]c%d>=qsjBS!&&sZ$NEA'0OT[D*!6E#G8bY\(-kdLbPgM9Nu\Hbae=HjO!Nb/m&`*H#PM>9YnBRQbGS4Z4;V\,(r$m;?'6U]QP>!k04%^;CopKIIgfa#4?E8MnO:AQgo?R"FFQ,-/t?3W<rIOKc#1H2msU_`d#Crrs;H/+=e*]Hr,U[MeOen!Mg?Wg9]RWHfu0+O:$21858A%$;_"2*cZ]1Q+9';!0^AsSW"D9LmC[ROu!)I(lIF+=&an1,,5GekZS.GC:V:1Gm"\_8a/<ojoS4U'pln_+M)!#)d$2+41:'K8-(0M%!7O?Ao5unE!$Y(cP-0_C"/51N7$S$)n-FYtWj)caE;-C^bLEtt.FpIUcU4)$o=%DU>2le8bM`pBJSuXR_6/@P7OA'm1SL`n*fI<T%AUl1\jh-p*8TJ2E;.[V/.WTI=A9-HSVJ1HK*X%!2gr7OPVti%NO]kWsPq]:ih+uoWL<e[#\I3ScUA,k27W$>'BmJ2cM2tph\H.Xk%TTO:+N1&9XiQ6[`IE"gL)OF,=;:&$'og0(L^LG:eODi2M%FX2H@d5cs&Tf>kX'k!1+IZ_B^(u;T%a247*gPf&e0'<rC7rhmLe!$p%,"mr(-YpL*CP9JkL'OkR&c+n_^.5XF^uEc_F-V)?1t?0SP3lfF1+<mtZP1.Hef=W1/1s@JD"E9Q2js!uBTU#J75DLUJSQj9JFega%0XLgSflSA:+feGgrGPP,_6Sh56o5@>Kg`&$L>m^+"8OU`V9&YF6u-r]K\9.Y^NDgYr,6;$(^AA>'3C:kg&VH[!k2>=T_"`Bq?V/,%'^n,3!5<!HD^<I%$<V\IhjUr`-LFHVa]p,\(d]K`]Ds*N!@'JPq\IYeA08`r1oGKaG]gd_s%67%s&YZJ)j4gD>nHSaKZicAIS3Lc%K2a;7_pc,i#`A@.mS\$jR!'aeD0/!u*'!.(FU2<[,3>+.gZLp*#FuMfPaK^+6F%H7lu<Od,)-(G71Z0"$J:jeE)lC*WM!jU7;qB6%pKWiHaVY.1cJU.:R"PY8TuR/oWPgcM#b_?.Y`ra-R<4TX\S,Q@+Ta?_-W(/b"=0(:-L$)G*WZh3>VT8a%?_,oK0mTm]Ts]0Y>CmV%ii<\oJ#:2W@4M@H->+rWit*?T`9'3R.eht_>`.HWL8gP$`&AsWVAlBgg]1Lt(p[Y^&#Oo^#)E=MK#qR1686Ih&BFu'j*-H8%"a&p%Je/+,_h+Cf/gNfmlG+;D;aC5b5GWs(V`X'#%^MV/+b3o;-&\W#l''Fu_khrA)?]s0-MLS/r[8Z3#25`O+[ZEm&g<DD9U,W8JVSeN%Ph_!c2BN,C%E\GTIBOCl!L-^FL)<$-#W+d@8gEe_*RY.JU$:Y!QC*O3I)XI7'EXl$JT$qj6"_CcS8pJTM$MNg%lq7.ZG*'7$3j>.%bSoi,5%CT?-*kTQU`gV'f0NjTd]PkB,ad)6?T:7hrBDmP=Lg`u5c_iG0`m/>RQNA41d/^R(Ih+:j=0"i9aHkL8qYM79`Q<IVU?$C%a^VB3(Ii88_1@.>"(X>9ar3DBO$`5glsq)FEWNQ/LG]-@*scB3KYpWK@LtUlD]fcNLr)O6(j:AHcg8#5KR"`>g&XV'nI1)tG;B!c%FO#R?,4Yk2%"U27'3Nc!W@6>1OqjqY[*9]p:J3soJ+,$e<bX0'-N])ELLeC;F9gZ**\\d.Nt:eI&4*$]-2MHZ@dp<H3jSgZ]>O9j%N\9Y'"%.lXd]O>4$:'F=S%cbpAqXm6?Ps!1'bGs4#(n=)Dn+E`4"lQ4XU#i)J=LNd_H70LPpO<jLnsP0Xd)W]0M-Jd"TUrT9aC52%HqUh6rYRG$&B6YSGb=aFjH#`lXp.`cBO/"9$pj-rmE?]Q,l/W=O-r?\T0C_H*gWOf3J2!smZ*#hP`o"(+j?U;r&[?QiomsKNMC./%"/(Tb*Zq<+AD%<=K)l.\=..)I;)J@[dqs?JS;5PnAh>+A4qK&;U+I4AO;`!B7&($M5TqhsI;_P5<D!GrQu3)P!VV'uh%49Y3r1fQ%6o0*VhVaALiD%BL\/WF!*-ks8lXBk3<4i4%V^-6]Yp!4h9@*ndhoe9QLB%uN4oh7'A0-&pcb(qM[NtFW@&!CO5t%-]=#'O]&@R-=%jt-#_-4I.0\cY;*&'uPOl&*&DeK+tu:'D1Mo`=q-ek.m31Bnt`L@g;Zkq\W^3g`:mq$r-Ued$uGGBO`;(j_9=!P=2%_^(49`.TJ*%+Qt4]/@Z5A#_7=G9U8B_P<j$MQ59uQ?jm-*TK&AHD@Vf<mtF()kQ.LO"Ua>V)O5@d7"o#58/Hj(a$^`lM]_SB+P#C02'H!(&4P]*%0L=q-Lb*TI%qt`(#`o2,Jc#a[&j\-Z8d,Dc1!^LMQ'Gl'6B3?_+TV!G781u`FU-K:_g&?&5T""mL+[IVTaM+s-X]a/;P6_f/Afn)%>\X9`GH_[q'jXQo1]io&k-W#V/0"a*(Nl<O_A-B8":G1_O`4$l>W#'F_"o0X4k(mMjAHg<?q(Kub*muJ!QGO`L+<`2V](939c_0I%%M:X=^+aC)o=goJ#YfsMAALP,"B>Wg#<l++T;`%hR@4a7+kn6'aOB:1$"EQO/VC0P#Jo&ZN(u5`N6R-W?="I^Ee`h4EB=0&!sA6#%jpio+)>]1D1(#13$\\Z7eu6\V?k>GeL1,e!=Jleb>#9^El4gt0R"k\^<hM.R#2(j5_7*)p%2_dd:nn3NN#NUSDNL-9I,aU&M#3<<%8$<rGV<IOeCRi9.N)U'L1aBiK$NEe_"Uams^DS/q9kmqR[<ADP3XMWFoYDFK;Zn"jJWXo%83DWf5%oUG7O!UMP,aS3(=XCuZrC`=%"$T-koh@>*NDL*N\8oFgdE*;Je-3&W;$;]6U[VMk_%;F5Rta\<^Eea$I.P,fc8D"QV?o?u)0;!agHE@iLP-Ycg>KcD6ri>1Nl.BM%(YoEafibcQJRB5mT\4pR4/TL<"76.r$:/YGZjUut#>p2hmrV?W.fa\A>p/.2BV*XFT,A?+[*j=V^PGs6@!3e^9[dPZd!)?2\?,kW%38tfKPcP6(X&-ec5B2@5<GR3J*PCOSJOkAO'j,Z8BIR:*.n+\cNWUHf&i^[QlSBD!lP@\j"g*/#Ri,EAqG*0_nO"2;LfZ*^)0i$7%3Pbon'/Q3D4,Wo;0SJWsNI]/YF=Ru760LDU-?RC46d!<^XH%i_`D)7ch$dIc4M(u0!&8$7#LGH`@JL[e`q^'_3j&g/>oA62i6L>Y%2u&$4'78[l8IZeY)X\:sh(EVr(nN/In$pU$0SHBP/KG+h]I7g3"Qa!5_#Rrr#?!\rC@!:\K/P6.8+@TF1n>mB:C_P8A<'23n"fDO%PG_nHYsa5m'V9&W6[/qO3$;19S2sHIB)3_]8lp6u2?grOYu#H@oT^S>[_d3RL+aDK0=.o,A?16I7^*)2C/tA"VNQ\TF[d=%,o>Vj%0NBkG!QM1-9_9!Meg^09*>>Ik!2B(*)6Bs7cU:]o*>h%<pj"%69FR+`(IWdu&W^@N"fL*T(fp2OYZfF"[u-kWrY`Ks;fZ7O;+/k<%d<JrZTo]sVmFWPgE+P8"9^Wca2$"hg`j7#r_>9*W65BtQ-H@c+r^0kV`gogbema1#V/YLhqo!%pBQcoW$m1=-8Z<thQjkG6,t?>q%/PY&ADX"`LO(u=LN!cI"`1Whm?9*^OXJGE2":DF,_8oFhGuNc5#(,+_PJLWIR.?-[$^i,'QCIdn(q$0'7)e.4FBp<-dKRg[cm`E2%][fVP/FSQ77ZJUTo$=FQ+&EV>?H5FdqhAjr`527?\a=f!FKI:/2Fn!-"d/]\W+nbpV$,V,P!_L$K-JH.e6,1nWu;>2@0)%]MqejP%`EPC]@t7n\J\GZnV,0S#g%n8o#sGms71ZGtW0WJ]`%cUl&-32<$hB\S^1D^_am1"(VnY_q4Cp%=_htBJ'THOaX92BMhV7P9%&hM`%L)?TZX,nr&C"WQdDD3g\<XBD:"h(uZ+Aecc$e&:qJHmZT$?RKP\d;b@?t`d&<i5q_-Eque;'>+jUC?gRVWMEV4CXgKeTh2uje3g8%H:rsV"qSZ18ZWik`:0Q@/1h'^A@N:k!2?Kr"<RO_B!p;@6P-4/H#a2Q@b@@nT(MZBn:Ga3>_S,AJVUTdbKJ#T[6gqrBMTgJa-/?\%.E]W6;Y1Npo+7)mWYK.>$<I!FjB_6lP81<s"@*6#@E+CmDsRftK($9EM9<?JRV$,g6REeM3/Eq5%1>T/W!Y=)j&/]f^l/:L`\/!o%8>/q(?8W+a1"7=GLhg2I^BPmPnM5s!k8KT4Tq^-I;rqS^2Lt$+'Qn#>>'!RJYYZ@ZN?)+;7H/;*oH7<$qnt0GSX7[U2>*EXCS\%a%"^q%]Bbf;_0H!eQXWn-g*8/@JBW;f3Js:Tk;ZrJQD1J^=4C]+I0LR9+):)alN2SKBJVd4)B],9tWe@>TCh!a\0a.&t@#g(o#mhe-%1=+c1%"^4gO+L[`m2/6GU_-[?JOoL1-egnZ/-W'?TGSW#M3M4VkApo01,>AD+jembVTJFo5jNt]"&+p6q(Vlci4GO]!t_>?>5:-)%6lmo3#NbXr0Pc1F#(;?r'S%$t6?j'HYS&'Z17+85">J!\ZKc9i&6)LY#^o4W5Cgi[AR_'pH(nIW!0B@?(c2:U-.sbNZsZkb6Ueup%j%3QZQjg_ER35IRW,ced[7'7h(5uE@,6VD+kUs2R&5ALj2OV^q!TIX=M0q(kDTW-e1;PB2c@XDE!hN'f0Th]`PDKe!B_!-88d#9Q%Y$8l##.Wo7(d]nb%M1/4&/-BNJA0GcSJFJT/V]3gFORsh0aT5SR#9F`(PWL8:^HiW.iB".<rF8>H3-LsAc,Nm%hR,@a!\R9K#&YX%R`MABMnMe&1bhihk7o*H<?g);Z5/Da`c*@<->JDg2ck_25_U=S:fDS$`flrE8T2HA+ob7rM8oU[AK%Kmn4eViF\XQr$<k,O[I/`G%ei)&=!DF4Vhja2A!?tC#+'%s4O<LQ)8_[R=PQ#Db-u#0.3<?#Il7Z/rh$K0gm\Hib7'on0W@1]!<&Ts8U*APKit-DY4MZ'$`dkKI%6ATtlWV?H*Xi<LH9)U\/!:nF?'L3I*H5W/B&CgUi+qmOPPm/3rm?!b;+@5%a%N*eo6)5CJ&d=6p,3r:+'`*r.(tMOa$/1L@:i-BY%#(T9#<R+`<Tm/UtJ!dl19i\9X$olt^#5&#rMeQWo+615[jL$Q&[fM#XdtoFZ)AfD>FTdb^IMa)E,)c@l72"G>\c>.FW45:78e0CE%!\.rC'.8Q`TR8RN(^_tVdip)]!ed'oE39U_O9d!?N$!]Q:"K>OFmlbSbE?+cIDPc8rBc#[/?88E<AsV;/kLeK"j!@=[e`R//9TEp%p*PJ/H&V@hXt`C6ACR,jOd()9dqCSBf/T$UZa0-7f+A&]U`_Y\6\MJ2&SDOQ]$c]46ToMKRVAAcF2p,[lS?l/9:%b=qe!X@!5$Zr%::B!"%#R`KJZ5QLg5;30!C:pcC*Bl'/Vu]%B5FuO(/afCoE9tn801JjV3E7Y%#@VVoLheV]T<D3ojgM36p&=(DEph,fM!Uq!]Mq]%,-blJ,2@<F"1&RNqG'S9n0L&ck&U[2;,TnHHdrLb_gA,Fjj4\11S95h",Q#-6m`t1+l+on:3n&gUt&m.G7-a1&eS<2*)Rj:ku3B4%HA]"4ZY&"f)tk\@,2D.?/qIk6Dc15WVf%;OT>frGTfa#0)1XN%*K<@Mc/s\QV!@o=I=-l#MX\Kk1+a*"``<B@PG?/o6TH#\M+h,u%`'.L8hc%<00Nnd6d%1]B;`sdG6m0I7#Ae3f5m/%""p?F>:N&lJ)H0d\6l=A_KR:^=/I+I<)Wg?0neqLZ/GQP.3TaZX80+VX4_^'E%BI&5EM0&tFD4[mhdKCYZ1dJ[iVAQ12O<5#PUk$fh1St6FeCP^FBq^Q#)O*>kN9Uib9FmTsIM*h;qPMPFomXq<;F^Ha.nm;P;Y5U<%EsiKR;i+IV#+r-g_Fi?;PZ2TFngsj0;gk)33"_Ul>@5!lZE9\S(Cq<kN!$['-2Y5eJOl8b%*>om&/#YDqGO[FYcVRQ]ehmk\8*5H%CBCf`Z3q(L8V*io#(6U.G>jq\N<DN#1c:_I*C+.R!]5.^$;sY=UMjO&)*F!A<%53oA1)u&A@J.teW$^QZ1#Q.9*;5"i:+B;R:_hu%8u,NUG$>NNkr9IN"T6JV^uRigf`qYiSVIW`!(=W^L*?5;a$.5UBZj&GVl#Q\929#f4`*eQ-*=>ggeZXgBVY_Wk91E(\1XBR&LJ=p%l,@L:GO0ra)8(%%XPL7*D-RJYSs+eT;>g_dJ#h8?%Sdef:cZs7J_MQTi[:5N]@dQ\$gPJ"*uUQ*V#&0b$K>;mMFUC.7@t(SE%04W%8G<MQH@nsgj"8UlcrkCbBqKR6Xj.U>dA@:ETsG%]f6Y;s$U1fUWXgYkoGu,XIt.-UcMo`7Ep6rb!GP*i<+MZS;OIjnN$9\_Sc]]3%lV16<Znha9+Z[<dKRJqoV:%Iug\8XkNA+lg5l?McaJ;sI7,.B2_[qB(kF,l@&;`rN*n@j9,X$i@G=]IWVIXlFKj<fZ9Tb9VOL[^&%DU?F*:ut8QGubq7#."(s#a7Etfuau8Ql08YNHOMNY)uNE!-HF@XL1e4pH<m.NlY;Z5VRqsDb2nWG/,73j<,I5puUfbWi,3aGO.[/%CRQ'#1Ik[fo2_l,ZNpa[D.YqBN`TS3lpFN8qJTOLi=b1(W2d;l9i$(PRiU,jnH,Wdr_5!`@'e9%L3!XK5b%0PoYgD\'fDt6GO4>t%bT5[0=p1``R[@/u%?rl0F:Q.+L=\0"SOZ6=)`fPGdaK0qKjg&#kD`S;RQ'Le)QXHm.U+;&4^S9.ga`Xn.Fr5qe@-Vkl`$Cd!2Nj%%TH(^c4&oGhqR8*hSln<No;GPI*KYiFB\[q$Pc_'XKEu_&VW=cqWON!SE^2VS(%nm7:.iu6N3t"L]=]1+[TkDsWudur;X_%9%(db.%)Y!]FaEI-B6@47u$\8n:&lq1/M2Bm>dYFN.Z5Wo371UF#9H3,SPSWZK-;5;o$sKu=Oc(N/3n08/5L`7L#-b6&j:-4lV\JQ(brh*5%[R9a.,&5YeL$8W[J&>i._:SD6'M]687NeQ)WFc5`&p43%^BY&'"Q/fj80pC=Lf[ZoJIG1sTaIs:$pt5"gV8/flupgJQMLfEZ@(Ki%R:kSA'BXi/*,T<XoCGfG']0B/=4\ITa4-mDlQ5J9g`1G0,0<=Rjt8E.+JQKdoqp8%F`DoFh(eI]![.pS&-dokCXMc:CDRfn08TD*%5ih+;42r*f>g3tVlVrn[*SHZt%#g]s(&i;J:frOYF9A9]&iZ#g6oQG++O-A2,QS6`CN0gfY5``NCYu>kfOr>t8pe.5_9k0T%Kg\5%D=0Na5YkOup+V>i!73E`%S45+&YIu4H;=*l3)0Z4p!)NX&L#g=?,XCu;ES\lfWI$jirPpMa'pPX$V"Tc&_Jdgn1])oGt/>V!$*Bu%glEskacZ>,Q.G#`"^3Z).U#=*AIROP@,UKl2iL<t3G9'Z?04;['<G<r\3[>ESe(X%`H!qUfI7R>@8%/S#k*%eJgQ._T9rMg%JP=@%H?=Wb8-.!u.P!2(K7Uc[OdE=:E((c]'$,Ho'geY`pU=d/6&!I/!]F7SJdRTfj:GrHB12&#3kV^!O/[<1*tg*'a"W%TS&B'Ec/!du%J0Y:aDBImb1(XZEEj-U\b,2-1PCZoice'Y)M.5Clh3C:qY&L.NB-3Ns<aa7-1lA1BJ@81uE:]hFR-NV/+l+`?8[F<4(^Z32hFSfd%MJW!p:Tg>KQh'MI>:;9^pFb3H-S\,V]H_R(RUng;XpGS*ajiL&G0L?&p%.^j6O1hDA?d#AjN\ja.QZmnZ7U!NXJ0?-k#l=hTh+79%YRb1^g#.1?s80AUNS(Z[@K^9'0<#F"Dp;l[bKY^t9<?Z2SOB7_dC)D>`<md&,gj:T&`LO]"4=[pIXf@2dm`"Lh.B:9)['d5;3)hu%pr_><1)'rL<'AZl0W:!Lm#PeZ"m:\T[ipJ%&AlZ)l_d;WX]@AO_9,gaLIOET]'REjck*T[M0:g!!mhEp*qs/s'_Lo1e4@-$8Kqp]%ie9oWKBubP.\bCs)/%a:ne0Uf7%L:o-B^"_+fX-e&SrKM2N;F<l-lp+8dM6R%uc90U^/l'a-tEcPp-L0&+AhE&Rc*+,<r$3_:Fm.%6_k`;f7j:Ve0#n2BSIr%BUg:!CL%ol;7M:Je94CRPG,$O`P5$>=kJr=WDK;tcuEuSM*]X,g(a;=;Q55/`tJeB[36r*ZhTU+EUF3]%7Xe+L=drmC=unMh$=uToc/0(N\jnY$hZTXR-F-9NIZ5IsoQ,j7D)^c3:)`u$)Ih/hd@c'k?uN308W*RlR*HllXs;A;7^q8b`Ik!"%2N[ZM65[q#C++8X7s5q-M=h`p"SiMk&a60@]`ulq.BAMlJH-sd(0Pd)>0/i7L`T$<BL0u^&aRj.d6n0=M(]e>L.sh=D$WuC9OuI,%BP9;""m;^C(Wd$rdVq*XHT!3k^_807@m-*$#AiS4o,PAs-si;c(d^[,oV`36+uF=or'hH.41/ORd'NqOR[1JJ&g_]:4f-Z@G01+/%_5@_C]>N+s(06Ldm2>_&=`t?\JMg6Kj&lFo7'7LY&f]I:eN5BqH>AuTfeF$'[&80!!+AkC+QrB?fC>mr0TqG%\W#6V$?i5k[5/GC%,<6)Jbs)fQgJ3mKXoMg!e8CGV!uU&&6HJA[W5VfeEApLucP2l(4fC"XR(M#,'It_HF[3I/(^`u;[!V!YU`>+XoIZe.T!7Z6B"Mtj%qHorQI8c+P`f-O)7>p?,!m;HN"Dh8'4S&RRJ7r`;Sp,F5V['Jf>uNF/p3]2S"e]NS+>cLffcqK-Oie.gLn8-`5`gjhKZTQ$?KpIo%'VZ+s*lm*;)>$X6,Rj]CeL2VSM3J"AJmLhYa0^EhiGT]i!*]%RKhJ'`9X%Wn*DRdY429gl5=i3'(A`+!%!_XOrq*lUj>/)[F@>^8%ah!FM,bfu!$EpHa0V1l'Phc?K,RDToTcDF;#sq<4_US^`>1t2XZ!H`fK"eNe/n?k5/ehY1OT"f6&`p>!e&k'r%7JrWA63,`0L34a%Sl0;ULd#]#a=JZ)U.5Ld%(QT%H(MXrd=@'S2,'E'\trHTj[3S"9Z,orS.PY10Mo;hjW8Qm`X3gp$%T^91?a`haM@5b@EGJ%/-neO%O'jD8J;30I.efs\W_%WV$2K)kRqkH%L]qr3WG`JNJR$h+83*b:7e'G.'nGOFs2UOJ<e4*@$ao=fk#Qk-`!d!Sg<12]70!D#\u"<c%fjgO],O-s>=ot'jb$L?*'\TZ+E)[]EG@tXVT$TuV%%A"m`#-h8l\1Bu!pT-HE#3]j3V_+B(5)IW\g]]];[3nT-b[:NSf4O"0)hL"%'t-kjr0*eV1%j2P<+:[f<C([U_4uo="(DKEF:u&#Bb9Id0u`%f?YcNif]PY=KE<9f0[g&E+RI+H,3>[H.BAF"-UkDg[ffA\%CngR%%l\Ktf$]2K!@_TX*b"8_ob3]P&i.<4RiC@a6l[;.d&9,pe-Q7uagTW#'S4[C$!(e!8ab2m`*YC#5YT,NV9qU/gl)opF(PHDQ5]#g%'.F2\SjK>aB<7A.e7=me$&#3f."M9g\=a6b0]7]PS*>)(RDmqF'L5htdmoXtYp2fmIa-kt9M`-0JMCOJ#cS5@/)%Za7qst5E5G`'%%fg)A2OuN>kXL(,L`Alo;bRO\IAe*)QNC%6oYs$G4^P]_TUgtc@6Ut?Xe*'bpD+sGm"jIG1Y2'Xr!L>N32$EpLU6\.V]3bt]m7Gq%dm2B_WG,8Ri9HQCi]pU%jo86c"Q`%]4N,lil+K>m+K'?[es<Z+L"Cu4K=hMa[/4ZAOh%;[b`/uq+*UBj#lan1Mjo-'k1]jF@gW4G%OM[0K&L;<^mpi0B$73Jde34I`JC4[MM@%6(nZ%<ld=-0LFii]ca$*g;hh=@P,<!br,Y]&*&=^r',cAn[1Rb?SZUeQn6'(]c]TVD9%!\`+u>BknB<>BLf0cV>#TAB'pR.I^Lm#W'Y%su>\LadrL%Rio\Z#q;;3foB&huk4@/@T:/@(XD0-mf-('2]eG8P_3$Ujj,u>j]QG%=p(FEY`/hJ!7U!<`K:e4V(C\?5,H[G/>rp/*(W0`HIPPpT9FnO$sb[QIIeRL6p)n`$<T*?R=47qoZNMY"_?EKO9"sQ+J9bJf$kA.%RoTO<\c%A-A=INOlWT1*3^F8)&uL]-0E_e8.5Ws"DF"Cm+Yn4f7X#65DNS#@iBn7:4sIFm3jO"&+kIs$D&g%CYB)LVehJA\I4Gqd%s.lQkUI?<Y\V[Y+"e,PWgV-#&e9e=(/F8B>R#OY9r>+75DG$6B`]R'?A_%PDGClR/_VI>m%N%ne^tSE0<XF`kc3"X`;iMuM%nNsM%7$%75AW(VYbCP.nH;XDD)*C[)#$+hLOD;](&B09JG@)2LXeh]0T6.NJW(M_)!nf+?:a(tAW=jtHQkEN-!([Wt4AJfkJXo_fp"D9H%"_NA%c@SKg.stH#NQ,YPe<RQ!,/t:<,dV3nb[5U@Wfb8TWir_S@psQaSmoAiD<!.loKkH6dfPYeq)%Eb8=iN]9P#dANYGJT3"AS;%)c1BblZCF4JIM(T-/$NfIO2M\Z&^QCLH&e"[uMlecgC3%4ChlehRgXn?R+;h(SZ)IAd'MF34&L/=>a4[a:II=f4lW3=%$a%",I#j%+lYHZIc%[/VWY>R1@"q&c2hH7a`*,+/$SK\-4=6MB_d3:@4d8E#Wi>i<ld<E=saYU5HT-h;GJ6';'ZX-E-Mp'2@kSP3;P#hqbh,P%!'^`,,=k&s!%GK$=A&\pb73CNcSFB.F_Y!l4V4K6XCQnj0tA[;&c`Zi*+2eKJ?@<$e90j3.(oWq0W[k_.1ecPA#Z72"J@CsE[Q[I%0!$9)"J>oWdP.=%.Y-.a2;iKtnPm[##WG/on,O!YDL"[n%7-6:["4,Wc=78`)G1,V(o31p:M1\^#C#Z==t0qZ>`]uPOJe<_"3_FQ%L_914T7q*.I;Gf8`CR[nj.k6p.6T%l),juT0I8HNaIV9sMMU82`3:(M63tMt:$n08"E+I/fp%U5YsOS9oG[6VWRT5"JW)eBK;FYA%AV!u0!_U"'&\]!j<=t/JaNl;e/Fp.Z_04P<gJ9[?EPb<K"#Q&OORXnn`:VQaE-t'"R8X["S?rMhb^T,06n2EZ8Og9qYS;C]S9crA%h,EJP@L73BnYs7k8uko0*kW_hos_JUUah:;V>[[1>h^(g"k(*QeP=nRSl6J$Q&u,*`GH.(\F"j0B/LtdL)2.6*J:4CdNO6p&4k^7%eKPdG8?I8+jSKM+<hsHH)_s!(\S^JDWAL<E,Z%n)nfaJr#b,N?#,lU/\6A^(:,s./Ve!Tl$[\1S`&fqJpBWS%*>)5D`L2(mX4*V-%;CoI#b&CS\[JO[4[mBRGaRp.%\`)"njP?JV=W+ri$fbC*5oo!B_A]96K.FiaO*iJ(6?\DZ8lZ@^7V"KB8^`d'M>["S=Ebrl3p:o7%TfRQ5.2=qCJ5Rk?GU"DhRiJ;""5WWoUn`9_G^(-)H?aBU7:LO1_F3s?cnhL4FctR,!^%.LS^lsN0S<P%IYLC_LBg*oWLd98hL^uV%^O,X:Pa!9HJOnrO=dA(Z/*3Bk;#O,t&>Wf%*tU.p5qrpeBcnUM(%=@@W&\:;Jt5j^4_P;G<]#N7$8;>r#Umt$#rmQPbqob=#!>9,%_K\1j_f%19`1Tpd6%:Z6fHjjeq'YoEr5?A?KN[e-%rdbgCDN+M>eaUN/n16b$s4"#*]3.&_sU'rm\j2N1pClVpVt;/UcGLq$qN6;%S_njU-/RW.9dOd<,93O@F*=*T;a`K,5j5*q.a9Ls_/m+G5G7SpM&6<]1'kBZ!Rm$k<>WVF=<qKYq=:AGc.r\8SNY?`$Dlr7n&fnj%QQ^XXia<uuUZd7YMeU>n\KJ'I-fim,MO$]Z.[FfM:kocg%"cLM]`t0q*.5UeP4<)N7c56jbZPW2ZXUW]PKjJAMchj[`"V9%kN$nD%EBY4'EFG44DYPc'3Sb9PV8(;OR3=GW3FOXTAN/,\KKF`sF_W%sX]?A#0>5fYS:`G9S54p!Ni,DabWa<rAA(/DGB'eAbac28gR6<Q%RrJN^_rN-dRG-K%O*eh$*-4o\F>0L,1PN+Y%2#pjAS=heZ7_h.,PBEV]Y`;7->P1$Ipb7Q#q332ZWa4[TFMG/["=JIjceYr8;Mj8%>W/T+=#oZG%*lPJZ'gID&_$TgDWI#6W?dW?V'thZf21\hK56"F>t.gc*3J<ap-J%QUuajj_'.f9&Wd(Y?2J?&SIF0TVOKQ5l$tpE%ar+%dft^0XZUdGR$]ck`%)iq`U@p%>LH$l:5Q^_'f)=C8*T8u?`Ye?10V$DMN`J0"_^6/8X^T8-M[BZ`;WdB;nq/Q%?;UI>m2hU\%>8*<$5$9ja)7qbW_ubi8&kG%E9A^8d?I3k)+p5^m_Oe&d#YRK363hU)94%aWflSXLN+'iobm4`qk.kL(-LUY+*^l&t5k9..#:tU>%*4cesH!7a[)):+nnD/2)B<iI#$S7<JqEq(S=oodt/=SRsQnd%Fkslo3q9Ycm`j@C=&kN\cgRXg^;,rt`1@0DuEM>ll,R:BQ<i">;%B[7,Jc$DsfS]T4,9[GQV61";En:crk&W!FO&X<L#mum;>d:=iBY0<%Ts1(N]O+IGA=^\WOL+0ual4f_-J*j/C1,ZtK!eLb6,H"Zs%=Xr6LQsho!UDgW>AsqYkoEe47$f?q92430c_%RLtAl[]K>-g*k*ju?o$^"oeA^=Ob6Mb<+GW/As@#V8j<_WB0I89tNMsl+j[$OM"%#)i%[l(le!lF9F0C<hUbm\ja3S]u7L4/JGN!BP0Y1NSqA$_.3/TI(%5KInf41L*X4VI:jT<u"igBpY$M<?$m+qC][Q8u#_/16@9r%+<eFo8(:3PKtrG.?4\WngZ*"ak\d)th1J%^Z]IlX@JR,0G;3X>6U:$,q<!]iAQ>.JdOa-J.?K"CJ#:TCjeetK"hQ!=-\uTXbt<,"%+3WUH0ZnQ[T"'mMQ\gRnb^*Mh(DlOYaL'9_g*qMk(npmXkHXqK@1G*NctA75FW]%(@<,/mZE#S/P6Vt\IjuY)_hSE7@G(8;Sh=EK%nR]c`(55Z'B=;W0aH,^0TWN`YaL^PPV-2*3I<:TIkD7iG^KCKL#f[(sc#UoP)4j4';rO/6-8$gI;abk"p[V7;RV*1_@GT#:$%m#5%%qqU7@u=(nYNRb)JdfQ(0N"Pk%kC>kc+L1p9[n2J/]TCNb-Gmp7<>N#;Y@nt$VRkjd*1`I`)o(F0aruK4?JAMmqQEsO"20RK9pue%T@l'h,Si),9>3=aodVEP5&Rb9l43X'QZ_0,07jqi^#bkhYX<,79@#i6;-)$_TA0P2YueP9HpI,=#BJHV,m"TA<@ntO:(/@;nV@2k%/i<G0,a1rO%?i?fq9`E`L`GO`=3La0Cc@DXfITAD.;hMDK<M-+b%S+s"O+(r15c)Q[3/r&0E\W8#[2(k5?7(PZE;Ub;Uf&U4bq`?%T``@u/6udBO$+_Uc#G!nO^ZAFP``l7-EVu:GFHkWP%1?-bAi6q;j2\IS)*)5AGEbF]-Boj[=VWnHtN,AL$U'Dh=,Fo;ao]>-CjK]%%[WeraYB.p7S=7mSb$S#k"tEg@A(e`1KooNg<1tkE3*Tth$RHjWYVmPcHD0.;;Qn=eBFj!/\VDhj$<nOVp)kTm0VK8c/X-&&;_^J%CdslMIW+adMHU1lfgAAn)I3OgM\3k!dqVib&E@0`U-6>#`#HS76QjWkIgZbiZqUp^ZRJgdkR)uqVf"s]$]0RC<3f@9A&&C@oldBk%hL)XpaRIDt<AGnAfXipVK2s@Fah-UaMZaTbBU95S`=!g!HE*Mb67<7?XdOk\1agWS8,?if@jKr7_$Lq;7+DmfcqKlum"<lS`LRU'%Ghl?=mPDmW1bW_?$G"Y-ogH&`m8WfsfI2''7HoV-Mq]ql*YPNb\$Hn__c#h,ZI"N`m>A?XkW!@UQkN`%B'Q_4PRGl1Er&?/mq)1<%-U0nLUofDIKnSCD*[TPt$rJf-Xep'M9co?cml;*&iq#>KG-d7@0S]'66dXU>e;6[k+J1[b#K4E52*4TV1o<]"=enoYY+^$5i!"i[%9+acS.=nF40+\Z9@Yu]JQIeaV:Q9)D.;5_M:cbgm<gIVX9GVE/JA&-6e7eWY?$_`aCIh`Ib&'n^hM-9g#TMOBa?tnW[/`d1&?[E:%!M;C)$s%KT*En,"1BQVP_q&48n5`#9eYFE&Z&cYM@4SnB.1&ZPX_%Vp6LA=$1HQ;5@B],pLD?W:`.41@q&o8E"U.fd-.6oI!E0\3%;hB9%'5U:/?ngPO-UZR!KH)JWd-YC0VL?RGCb\?ErAH_g&`;e6Q"A?D`8_$.^#ZCgR!!a4o8UoJ03[dTWHAU*ZK3%"G0D646s;2C%g<EW#+"P8CcA^a98*,dK9LqR?!@Y?MJ>J'PCn!Aii/+Hr%[pG+.B<2P?of(`(c8qof%iD7/$0,R<J?fSL+\6Nc2`&4N>oN`")PsN%()>G*B(+]d^7NR=1t"#a1G`,4G_(^U9NgXhr8'\L@aX-iO96qDSSmR2"OWVs8);f-$8X0V@?:`A)1C\iCqnqglCNt36#.5GJ44Pq%n^\"&GJ_B&7]4-R2.1Lqe(YdBbS\>GDU`-L%Io0_f\ChQm?e.U*h4`pAH'j)llhQmH#-:/G@JQuN)ZH"#!EadjQ\3`aH/u%)7I$B%b,)45,-sE4MSHC7XCbq-[8!l=p3`>4&RSP4V&IHW(L(i5p1M<Gl8E;$o-2Sr^PSJ(<pC(nV-k7OP9\4.`;-^K#ji&sM,2Md(M=JF%DA%k&3$?Xn%J^\[U8Ts:Ca;pF-J%u!Um6A!Z.@3-:i<ck@h:hU7DIKlUiO@$qZ>ILSEKhNjIF7WeBYGcVA#)Jne(d\>&9@F@B!P=%$.U%#T\DjdA<u8\=eC&T=$^JEPd0XhE*f+om]ja4Qtf"Y+Rs0[pq&EH]/1jY(J]L&PJ#s@"`i7s;5F$3]Upeb!NGeY$XpFs+D(E<%SOY](<#*oX9cafHF1]V7^eU(M,jBm3[+GG,JXf>E!4JAM\6%io/L-1B;0^p9dEbc>A$J'!-``06Mmq4J[;47P0dUsm't2inM$O=,%m\9S,rdMj7)sid)3bs>YfP5%PC+7+%r3a6IV.(urgnhd@Y[OkW2Ueper(K$*-K8'&/61*f18/p&e2G6&maCW1'*B?&B)8V$2'CpY%:K$Gm8mG%%1pmij.$R[@JK./K)2Nto0.djiDAoVk;:$[ldpK)T!g&mdBs`ehg!sCOY-BQHkuCB-#1%@7V-7+'Ye!Ur<dM?1f;6K7%^-,u#^/d..=9l9U.C!tX&NS1LGlkY0eL"SA#U%rf<+Z1CR5V"mUjS7J=[ETCY/m$ERIO2+&0SSh9U\iM#5e**CCZJEq(\VTB"Ga"%[!-FX8smQ^)H>Uc!!GLTDOEY*ZjDb32t_!+-<Vi>#cCQnM<kij_*;8MSk:LGJDJ:oAS2(*GqF?\NDX9Y@NfWp=q'U4dCQiL&Y/&s%X-S;F'k'5L7Rjb`,Ekf<^kPR?%!"U.UDK6D%b5I(:mPf+f^9&B1]TuoRkPJ@c,G3E8d&au8bPURLCHL,ai,R@/=4/4RsbqioZ\^O%2GbO:\6DQu0qogMVZPMql77cC..<)W8=<a!fO<Z&f%\08n!R./4t1hjhjfLpKc6;c(s%.g+JNL>G%Y3pd5T60%H;lHL!,&Wj@FH4%24Mk=VIU&>EgYBYp2X+MO>AJIlDkPK)r=H-+S)^LS-Lp>i]EJ5+':CqY71B1'LEq`O112./d#LQ?REep8hG.S"$%H(3JQXi!7l"$%aH;$/%\'AD"l^tSjq%Q8AtMX$c^"B-MH;0#hA9QX"`i"`fL.]+kf/JM':-&&<dSg.&NrHG:A<bpCUEA//Dh)Ee,<"cC0Of=Z$WI#%9_6cE0+2>H,j`.`$]JuZh!]q*78\SFH-QDt+a9LtDEt'r_(T?Vdkb_T5#o/b:_i%J^Ym]9qr3B*IR08>WS*oRMNDA%bg6$,<kZGb%Q/JP*c4*R1-H`(81qD?Sd%&cpMK129^!!fIV@XhoZhfUs``TV;`<,N[0+qH_G0:^Oa6PN_G]CbWOHpp,7&5Ab(G`#0\-#`kB%3BN%e"39i)TZV1EUL,=okN9c?+Q;SbD7Pai?:-@T#0d2k%em9%Hj*)]@p+qVjYHTr:-i]N]ZW*TuTeIaKZ7dH9d"ks3&ch=[<*S:4$CQ%&qD[a4ldZ%Yj)F<:]c`lk[bI<J9jT;Gn4fnB!,dc5bOL,Ipp;fT]"40c?G>H=@J<6joVBBMNs*%aKU5BoEM<JfpMJI<LCF<JtbNQ%n49&a.q7@M"d>28*YXSn6*7'05-7>O'X,h&Te!0]<'o;N$'622Zg(81U^W,YGnCAedmTV('ld0B87ZsM%Zo.#;X=nYAD'`N!$>1h%g1Cg'!\u>d2395dhuQ9^%Z?ZOfMQ)Ef/"Y`d]RTj;dmf1"gNB@'mEf2MNFrZ.?l<gIMbt:^J>6V;V9MLDmk8(:^0YjOG@eW_It"P%<=l?OBn@B6[Yh/3`#+S]Sp+^`LW,0Slri"C]bq!PPs$n\'Z3uF<Op*oh,#,0=E^1niDp+BO-rA+\`u=\ADO7TkOEbpCU[#*:9./l%/P+4jq+qQ>Y8W#0rJL1m77^gN"\aK";&1k&$_o7\KHN_j5S$hAIs]1!rZTLG@k/W\lKpnt<sEbXD;5a)G:V$\SRE\#L>8-fbAs$]%:BSl=gG>]V1l(Wkh%7<f?D936Biro@b\Q:\G^k([5-f#+0tL;<Md"AqX'"%/kH,l]8&u$AOH^Yq9dl1+K=]6X.@)\j)!1,h=]SWY%n!GYg(An9&T(]!/ZO/%hIOfm[iQo8c>H.alYsILB6OLe_Ppb4iUSMI_:d\=BD-TAn;PFjQ4bImdU;pq;FkA.@Qb!=*lm>W^:qc@F%eMPk5fsr9Urqc!lO_+KG+:dLf0U(p1m:_-NT!oJMAS!o):Z\Q@FDnh#Te_30TB'`G6o>'*92]iLg''CG[6p6J+KDk]e@I#k'[iMD%`hF)L<O3AVFacnG9j"gK,pE?:3E,!t+L3)le4B=Sll#V%:[r[CS"0IN+_tUV8;51p0Ej&$DJI_PaBIQd;)u$fm;9FLkS8/7!pQR_%8O3H6X6X^u:a)M.BC\Fp'5Z0&"2YA\#-.r%]>oj*,(Uo0='[99'f<8OGqQ3OG\<_dfrl(1C*'UQ1-M>^[EXN#Tu2^Y&qU'o:HBI,%KI</t=7gj[Aua_tcmOqp&QmdE\[;,3d&b(ZFP7tOknqr;mslEG$HsMf;*P8OJfse-dX11D"#hld2/6:PA-Z#Ail]pp;bb#Z'cqmf%jpqgJEN$'!\9+/CQ[2qppU=f%6a[Db/r&;(QkC^a",sn[0O93NB40d`7DK9kIhZ<BeOh8tA>/#??/dqrH+N!Ta&MY.<Ln[qrrS#/%;4ZJZ!^(>k5hb2fqSH>U3Q-;8<1T4e[_T]F`iF"0cW*B9;!b'M*MgJ^GH"Z\\RR*6g1Y7,L4aXa%<X^?LuO\)a^D#&]u%tM[&Oag%?QcF?lA,c5]N]rHTmEW<faP#mo%t8^2"(IeR#53jN!LYZ*Dq5cakjhY.PY"fGL0!<j:.nfYskUgeXg7F!g)6pFs3qEl\O7DnY0$K%f3<hbOC<b7mZ3lns4gAhpJt9XE>>e(aPgLoE&6Jfj"%C;=]/39Oi&[5MUg&c'=9]&FS:sNj99RmHqm*<2/'GIbPfRr!R0g:9<\VK%1e@io1,FU-$)Q0g9IhB`;f&pP>R?KgD1Ka]ds.g*bbG<c`2!V#?<&f'e3N<`3eS*T)A[Ae%1lP5XdQ1C"5@O:4=k@X#TZ!gWJg^[%[90)Bb5'1(3@(o37@GrFYj"f^9i9k77T8;RD:6%7:T7_+H6R3Rm@kp3dS?'/W&RGm82FR2"bpuQ[mT1T<<O9sV0N)JBur>)[1#2Y%++ch[\PB\.Cl/Yj6BSC+n`@gGnrUe8*j-8C]883haA6]1cuRkt:T=lUNZD9;VJJpb(*QH;%I*$XJ9+F/FnA(]"UOp/f4K[A:R;+u%YVEu1aa*C!)lGK&j_9s@ge4UR>RE1SVh4VZ6`>'#@1T@$ga:GOM<bMambNf]\^/M\SQ@8ef&T)B:PD;C2[=T[r]t=Dg,1NHVKM_"%2!"tQCdE&771fI+SIC:klS\*>'i%_U.$PnP5g`!fQ@LA15CCO\n&cnArK<[]*SuCS,_ntKr3g\$DAtke(BoiR:][n6#n$7pFZ`B1%#=qj[:>kc5fEnR@!Q&dmCMGRsUO?>4TAh-a<\'1lW_pWhIOYE\G5^&*p$7A;6qS!@V*DM_VP<@#(04&7`^@70'>[B+jj=*j&)Sr[%+J.K.:ggJAfGB@hmh,Q?Fn0l>0\d/u7Va+.Rg)+Vk3[72)+:.*rY71i=nT&!F4-WNVP?loU^l4B>q3bm@Gec"3j>CRAZp-ib,SBl%*X_F5GO85h/+7I4qi@BY/5p++Lrh.Y[s^`e<U5GNa-/54=I%^DTuQC^'Ih3-[+WK1ifY=^jQCS8*O?%aHd07[nBY/GYI1MJO5^:S%k\P+bQm`d-"L[3oiZfWrYklu*jGe2<#EZWdD0IgrHujcSgoOOPNgS@1Qf.;>&sh=067lKKYHdnI3B,/5IDaPN8Y^Pl9f#e=(=nbZ%9CZ6)l<O_9l:[u(*W)FU#e3d1*!T)*oK!L^*5mEc'o6B!QlGbh-,pQ#4DRHLa%O.JegprCBk!'LeaIEPd)RqQ8f_V]!&5r7#g8qE%flT)I.5,lDht0:R9[c*uemT=RJ8VZQkd[>**[\jfFj1ng2sdFA2KBcbPo1>[lb$42Rmmk=lQ*<0if&M'9dIi]-o_@-@l'k_4j+D>%L)kZ&R-K)1SHL+K\`\91JaV?;8^TZW^%O!?4sI:taS6HiBO%MB7I+^>(s)%6Q9&q:@M7-TlSR/Xh"?E0('>Bl!Fq?$!_@XG0RsQ\%3(%neWs?hn"?jZ^),(`HF^1NBO"W5gVf54&qm6FaH=t]<,AP2_im5(q<f3?jBhC*[2^4'D+`]CMP$&V.mt!0D`XCh^OWM=r>!`FA%Hj(r%#7>mgQa,9k"O&-kf(0/=jkEL-*R$O!1u"q(ft5JoV/nR2(k?:XqC+X8@+VVjof-(+a[.`m'ZXsij$_AYZ=C_B$"'*']3$t3%QVE)/Lgd2YYqM&X?6M!Am\4IS%=t8PX0b[?&/mh;?JTQ<E_mqL1c*9g6@:N-k<f+J$4+'eX%W,gKM=#,C))#dBB=?:L9=TQqiS-_%@4bno6LKT-?CP"(?8^Q?Ui7pjkEUgD0fZ@4]GeA@@We7S0*W5[<P-H9I_CV?!++sVL7QI/&k3+M'QiZ>%tr1G7Gm*iiTNOCk^/bQ%>X:!H<,!t^lVqu\a,B3&8,;1pp\)XWpBE]7!r?T4`kk6s_$Ng`O?`Z$5D=LT^]#ZKg].1I[m0_t?2sfrs%-f[llL.hiM4su6&2!N%hiMbq[a5t8%`K?*eUUsH`L,s?NXtXFdnP,AeVMI,X]cBO?:^1(@\D=s5Fg<)<g?^C3m?_g@Q6u[c+Gacq:2$,i\^^_*dN+:>@@^#%a<G8>YOK@_OhSs_i<CKf!3dFf6lqeZ5YFpL"\n'7i>M4R?bJVM#Q7I3-*:;m<MEG-fr^Ypl2RC:8ABNCHB5&f3'$@K"sG&hc]ng'%j4&j\\r!H*ine,/m=(rpEU4o[0PBe'-r<kM'-HqTas8`C*?NiDZ4Xb@@Ji+RWNm%J)ql_J!;VoL?&'0O<+$;%X?#or#h4qB0Hi:L%:ZPKkg3aA\qW*ho'jC2-1bCg9+^c*:qT?Bb5DVn,!liC'#SB*eWWW/lT&.0j+nZW$:8_eCT+qSAU4/E!$_CZ.2a*0`55hVYiK%?O%pgLEEU`/mL.-gs[5b43/p^:,>r8$,6NTJ31]8\+'ZJgnO*!9cTRKN8UK*CL`DpMu2I_>W?0"V[/J3Gb>20;bnq(G`Eicf>,le.-j%6]QWng+8PGMJl8/?k2;sLAuN?;3<^;S`a]t[NSdK<Xt<BD.E.rcBr!D(lJ0^'+o+6V3T9Ab:hu2XOA&Q9]pZK)3-P(G4p%'5JGj`%A:R;Ud*6YAA*PE9+mr^""R_-i>C-Z=6BbZHEV=uQViTRMbp$&T8-q5Q+IlbJ&])PE'&&,X4!SZk7i97mJk738nT`-Ph,tb5ErUiD%%8NsQ./Ka%f+K;V=H.=rK>20bpg!s;L6)EB"R[6P5H4QW#fl5k$Y=F"=1Kq+oZb.c/[lXcWV.Q@_n^Vq'Dc_0R/=Y1r`?i4qnGZF%/p!3anqTP:(mGd-PmDA<H>ZPa_@kP23tWgV>WW%LS5U7P9*>5AK=9=T;"R8e1*'Y?/'[+E&a-+Z29U;M<C!-2iBH+9R8V7s%c,.X%9E)PV&G`tegl'q@)udp8__qt^B/-,jc-h(X;UJj%QS$[DDuud9LSke;R_g9-l2Ad4/Q$kK[Z<*,X?9H^q;'f?HTT"@i?*LFp]&k"%Z[MblJ$XR98T_`_0uot-$g*>V)<IK"<63Vl"U!RjEB]1!.QFtqP*HX&do:g<pA^:n^M<#gmf*8B'J;11VtnL6J9,1"$9u,%OT%f'%C$pq]kInaFmDk.aUnmJ!ZWJabpBNE-d5hJ"eZsHe_3=E`C9'#2Vn^#f%J3$P39peZ.q=YGE?FK/D4UZ3i[SpUQrL3-H?(^\cR(h6%EIFU4l"3&9Y:@Ls_V1Rh:?&m'nf5g2Z$Vj#`/.3BTVKB%gXj7/KKs6T?4QO?FktZ2=i[UMo'KHUBWXpio;7Dknrpd9nGKn?bOH$b%8oNZO5s`DJJHO/A5i]kC3$uDZA`?`#9=ifo:?<<5aeHM'UOU@"X12'U4]ch^Wi5++ielRO.<e5u3(C^lHJ"rE`kl-i[NcP,GI6uR%,'94H]5L0o^$^_%b*+q^c,XZ)jaV-WUhTDpO)NLo5Q3_oo\6j)qZb4DXO.u%`PH;>Ir*24K\Q[3kR[^Q:Ub9Blh1:InRRJKoOnqd%S9:;@dU>As<rLQADBtV`<?DR`o5l&9fDO!9&:k4XoWHQ'=[1o7.q:;^c.4Go[@Ph]<C=YlWb,t5s.Acu;hK:Q#d5*gqe7qM==i;@%[8YnlgJaV;+D4\MQW2Vhatr\k"YPY:Z7":8c`Z-dj7d<]i-i%9P,M+dN40WNJb"g?7;/Qd2?cUW>3q=&a4mWWJto.OOb]oX1o03`%<:9QEFpZS32ldX&"cMe9[=X4]=:SlJ1(/g+^+`l<=\E?96i"`O+[IWLZTE'4rp>!E^72KPY:KA-Q`)EI=l,<F/3t]*Cne*U_/UB,%+2^1\?l;;ISb"hh?W"X^i[pAs4a,:m-!%AKB2t'8WdlWt>"':JW*:79]Lb:UrC%bRP4q"I(bQWGI]"$qQ:`A8hAD`rhF)Oe^:G>E%n2_N3fVFuXLin%`o"2YlI#CHXD_FF7Ws'[F'Pm^h3QD3n+sIG"&+/G]\cMHP&O?\^f!&FP(*pN7B>U"@=eVeKeb8uOi%Dt&8%+kP%5@._>0<iCqm`;TgT!:@t*96Rg9)g)sC6f&F>P?PUZV^jt\/0bpqiL)2iA]sFF0-Baas/h,nV$;K+Yhd-T\\r`Y99@IL5fmJ9dUq]%6Pq-38)W!E^MYH2>jm$lYjW*)Z[I6lXLEN"LSo%2cS(lqh^hf[oHhL%r/(,Q+.1X@>Fj)JR@sUPA6:E[)Y37e\m\VS;qsNc082Nj%,")oN=UH'rU\#k-H`>[,#-rF6s$=ql0Q\M@f_B3+[#i-t%*o[1jgskdd\78I!u&olm]C);-=VUR@Q`86%nmrn)%k!665IsH`]/]7%d]>iU+@-/Q9W*-_B)L<1Wn)4aP4lT"dj$!61M,E+#>eE6`<;pXc9ps=/2p9J=s"r;Go+`sWDGNcpsNG84WYW#PkT;@k9sTJ=$&dE%h!Z]mr*2hF-j>OZ9Nn<P5b<nZXp'L(+bSV_'n2&J"CCP!m3_F[:u=8"8c3j//$M91V4WoImB4E>&21=AA16<TOdb7Am9Zo;*Sl/D%FpE,0s6a_Yn5c:gq!eF_Geag\RPCfQLq$JATU`_dkdqtO1E_EG79,V1Hb*D44@q"9qJYB%5oNY_8Q(t"YBHW[Y*K8f@UenVeY0('%caQ?/>V3.EeC+hPMLY]2P`s$(#s^A6VO5OOR4*qW7H2Z'J[V:r.d6*K*P(&)="bVXC=6W#.J!>=9(*@fbR-"YU=j9GAL0h(L]tXO%Uo2!T^+1CqZ3OWdHO>V>An?9\>U<*5U#W"Z>!)(&<$k_i%/(hIHQLVl-TT;!<J;REh2#;Q+<i@eg-f!FK!RCQ^"mB:C9tK(&:>qY%<Y-BX@3E7$mG\h0VkoHu=^4238<oKGa'[p/l7S6/M=!`/):RU4Jnl;Ub#T$s'7ee02/UUh$A.im7<o:NP!;8ZO(=iI-'l64[!B]0%m/iCleWJ1rm%'c3;OJ+shlARa(>Bj`%#hSu;Fa^`_piNmCotj/fYL*PIXg##9NM,tOL^qMg%]&uD$5%k^=FH+:pA6T!)KD\-E[#g%-E\9^/ZO!iG+-Znhq^M<68+S2T18G((6?KjI!A2t18C=joAf5kgb/Fdj,=eB/D9<7D+Vq)R`:Tb+CMf[O,=UOR56]WWi%"bb`cL;%c<Vt(MKt@'%W'RMlli8E;$;t*ngc5OlDuJBqa#%r6^e)'Y$dbdHLB81ERG](U7L1KN/LUPA6&5c,kjZ:<=Ao"LqYTqY(I-sn@/p'%dA:P:=\]MK2!c[20WiZVSjm"'NOc)BRZ,J5?Cf008\p7)MYr5aIm!EO6=Ei(#SE`6m;u@hAp>iPQru"?!V%KMmlQpEW8I0Un@=tb%'Zi#7(mSEP>#L3_n?ejM)*-`odh9XFQF4q/U>7p`;tlU5AP--\<UH_@=l*PcU+8H[raDdhReR.C@h<+5"2@_H+aG=5m7^i=`Th\5%at[HC4-,3g'br/OetE5`."RqG[VBH0^J2'O)O&<o34<9G*;Pjd2IRh:L.-b+T"CTB[=tG5m27+?>Y^h8FSRBW)(("<-B\82Ad,&K%LBoa:2$^/]fPGG/]jih"DQGh`fLeKF+cKm@pI1PCLTVI:EbjkX8/;$;m'cfG!KgadNdX#tbotKXm@_Pfh\M\%k+&DC_3LA$+#'cT%@YY6e!atB6*>p.Op7`G$gD_n;9g=u1=jZS&C>"QiY1Z)s'hS:I*/-PIgB`*23%TMhIKQQ"[^1/#]U)CR=gass+:G)`k=mtZQrL"'%_IFc7Y)Fq`GW?FHe<pUL<eT9HlA_m/l^Dfulh@:J9N<jJC\EL1`2G:t&"2mo.bcO05ap:#.A"UqKY8*WDa]J&SlULks""@HC%'SC%fRPZnnqM626=o68kM%1%%AMH,>A9gjI8-4cg1FHK,YSU5;5H2oRot\&O_7k0B/3bfN4!o&F=f-j_\4B=^c3n#49;6]es8uH:W0p2%9A[[!,5DT+8c)<&WWaO#O^IFRh=KgRBQV-ac#S_FUji"1N.!frB&U=015'MG@JGW];=P%89Q)TZN#rXY,s$aHD%D^moo,7enI\sS%aDR9mCBm>pji7J3[tg8;I\"HoAOF.>0jd'B^4K1<rY9THar-tf@5hm9Qg4Kl"#e)2s8)+#Z\IJT5tm"YaW"jK`!dfWfs'ab&r9*9%+#)8FImSV_i[O1f_RA2YrZ7l-U.'N\HcA5jYdl]fX:G*mQe3u5RZ)CWoge)p%o:aOg`+p;1.#I<?bJU4h]K'ieVe>_ilk_;&&3FL%q(Q./Nul;6m'.iLj;rf%G-6;pfkPs5$I#r.p^4WEEBR`S"9I/i9'aC"]E11Tr6H`!PidH+`eFF-`Y.@9&ahImk>$`35@GWEfMfZq%piSX.@JW'#$4;Ern<hqrMM=k16suf_#r?(q#-AF,.]I_R:RR\0(S+GHY>^KNrOY&J&*9B795A)6,^X>Qd(sJ/[kjk+L1N=7l]_,\%RDqA@@3d0ukn<9Y*!";ohVXYe,jfk59A7gu4k8VbHntDEdt*E3Ot3_(g,&OJU$[Sh%><M.Tnes]V<e)\N#`N3*,Vr:r=F^j.Adn9%FLiMSd=E]pLB"5%&tHAphT:!bX1^5@;<^KVBG(kuV5[W"lGiMkrjI%Y_/@.-Q^*]Efj4feREL`,!pO`7hJ>1I/]gmCOF$n_,3YZP%%fRpT<."(T@6oJ1^e`,&U3jlHIC()H8!liPq!4g@Ff]q(9gN`O^;cJU.9EP%A'3E8dW.n>$8O)B2]B<%LZ^=F6%"ip(lP'Z^^-0=%I43\L2G$p9o/n@%m4A8<(-N;JLRf-Ngqja/=D\W%etuI8WY&'7&>.6im+PF&[uf:AmE(%]ZjK$WQf8e>pZ$a>52\!nP1V>n0j$0-%63ds^U*[D>0UJsOb_.C$a-$*tq2Z<%/H]WXh>6[as,!Fs#Irk,1KT\pr'U:;9W</N`>p2*GMcRjq@pXBH\tQ^BQY@3i@;^8=.$JA%=T$&._@SGZVm3tN(dFq7iimBW,#"R$'Vs@Fh&F5aOMB?XJCP3^ePZZRKpNL:!D>t@i$>N`jM2sDJs8tH9LZ(Q4cS*E:HBP-bj]9=%PiAi`!_IGPQk/KB`B`t]1i>gdOn\>iA"3:8&;Vn.W<+sO9]L9V)DJZV\ug*<e`^FUWMbI&msVo%/F4+&+S<j1kSTRp*smjk:[dn=%(4-PZ>T`pZ4`um<pGf+mjK`u4:UML5(?h.6H:b$MpjFFI#u_.@<qM+Ncb!sB)NmZP2e4k=c%R/nkOBAQr1Z9t%RQ>^3e10&1a1GT%%q4Pt5k3rAfqn#FKsaW37LtjnJ2p(e!H+f@8N0%dUOYHuc@3(DnJYmLju*[462VI@DnD.3q\>FOill?<CFlsfTY+>C?L:]Mm1&Bm%I)mEK;hVA\MSP7blPKHbpQ':7d.;e@F6Nep7cJR2,Z(_6Zh-H:I_GA8Fss4;0Hr&9Nhf,_a>.dPb+`-COf;O_:Sr/]J[%=g0NBUt%!fOM9i[2CTU+Nmd/`HC<(2Z@FI_LR'c0is(>6NW2h*1aC.'$,Okk@Yqk79$B2,CAFm\T@R,+EG!_Q)]c`HMN+bq+nm;op,c^%F1b%Y+]s2[/k3%2IJdq0uNH_cdu:U*%9$>_g'%=>F4P[@J@41%/^IUD*9rU'p^dd`\K4$R\FCnqfr:L@WB"UDYF81Nce*AqLD;aeIS%W%.-!9VGQC`4j2bQJ3nQ6ciu^G7]r*@^^BaS(829!?PIp/J_Ef$Ua`k=)Pu24T0r9O(4@hu@kAa!Al5"c]-*/OM-hZP_`U!7,H-_hP%@Ce=><Y(1U&6$]i'tl82N?MdMl0?CJk34XMG8UX$)0r(SRU4`b.YS$2O^^%![j\aWKUrB<hVXnZ*FYFtk%GW69D!\C"$]9L4K_,R%5hA3Ba@Sd%j!HGNIb_Xg$llAIRDb"\>U]*LF!5XhYP".m?\JmZ[>LPZ:!4D==!#9fjrlP;I;OYBM6&.EU@hd.0(G5NE=Wmlh6D**%NNZsaieHZ=$RhP[$u_[5CFl#=oQ?DY20Nn20@riJ[>!EE*oiShC3s@rgj+UMe*Vl5g4B'iq#UP:jt#D]Xnoc^gZ2fX/ds&-*tP7g%&uk/tO4[2K`,saZ_UTY6R822Lo`H/.r'J!9LeANl>?>sF\m2tfr8taJeN!O0Mmg5dgjFZAgYFOVf3#DN<[@)Z[cE@*8\jObYSmR4%2cd[=?f3<PhX8kY8TadO+K+-(+pD$Hc6t;CShT8@hkC"mZ7E#?Zg;E+h%8tgJFZm8U:PT+jh1]$Bn$HNQ:%K??=NZ+2#=r)Enc%;%l>3Z/]_aJ8PAPD9&.[cHQRtIbESfe=$ppX$$1l3cVh;7[[mt6iPs:;gmZhACZsLg7dkdkb^QTW]9,8BCES_uLr*D&@cI*QL39DI*%-L3;PXLN>Iq`5sNX"V]crmd4U#OD,MA?kRA-!:Y;E/g/7SN:!?I3EA7):M,X:]<7JpM`Y==NCA61\;p\0YdLID*#rf*^oj=&hKV.%D=`r,a42ptQ0A-F<S&d(4:UUBY[CA_^>F[)FLK:#ZTd_^Xrf[Y9sA#sjN)oV'ACa"Q<-P'&MD:o.MM#<>2fsY-21o4/0`Y(D$48-%7o+JF4a4eC'`3oqIb3;`5gDOY9fGHf><qGCfUZjK'pd.9]dQk<"dE5/(:j/Hb=rRSYd`4dC5[V;<m,80SSU6d1R-U6!b6hp[X:-h%n;I6oZL(D)GfT*%<&)'GiuM(gp2n>LO.!XjHRWS?/#H5bL00QM(Fp90Y%[`FmHmQjYPa6EE(Ef4@+!PBs'K05XgEd8Y\:XQIGC1A%&h>^aYl_3!/honu5aZ8Vqb=6/Df5NdcgNJapY3/CeY.:Q@H:9VT6`YE_]C-$$gMW_e+1)3;/_Wr%FP._.'I5)`@EM,NX<S]EP0;3%>;)*8$Hm:A1$lZlEnb#m*Nu]["#GZP8B-oP5G1Tnqs%HOfCumGBYm>"cUZ3N9-8)nOoKrgQmBu:3>BrPcKg1c;a"VOqkk6mNr&jl%f8NSI713!8m7D`X)!]cq0_g63^5V%;;4bO0fGX3pI:7U#YF\ua=MM=5Mfgg.d:0;F'Gi?hMg]3$a?nGp18^2:T)<GsDW23ZY`Q>A%+9)nl;VuKkK/'B<F2Y8mYo0a4"Gq86GXEJ%H]f:rp#6c0UkUS-+GLQdOmMISlm$d;]RoB<nodD)e*pj,1!Kd80VRJI),lO3E-=WT%4a2'/OI[DPI3`IGfG-@;Oe5i[3'6PqS/mVA56_\gleIS#Ib+b>EGLkKGAMYX0rjgi3B"Ue;Hl.>^;-JF>GT!KU9-L3?=J5g7u4tj%iU)F]$?(\Eg"VY(JpTTIQp$eMTR/cgR(OI"HKW`cSaPmdR!Un7>CMM=@GK$8WKnrp0bTq',gXIHfW\2in8*K'79fM&I"=^jpM>5.%79f@n]S<H*K-dHML*jPRK05A]GrpE%ZF;&SY'E,"GB%QA"/`rAkrZKpp5[8LEQ@/-=KBUc)6j9"@QSNpBf3M8isRD]LO1qn^nRrX%2SQt)>Br-@^nRrX0j\=)#A0p'&ROmc2+R*&a?.c)*I2hah=6$Ch3#IF]0#GJg`:AWLEe#Rm>Uhf^+`MY4ndt)LmloRmdQ\k]0"H#%'CLW;-7=LWbE4NZ1+[>LQ0@T&5Z.Rqj]>5SOggJ.*KFZSLLVFJh%;6VOV,9>`5droNHFjSDtA&i5J'#*4h^RB:a#dYG=6H?E,@Rt%h&VN(,^7:D)&Gm:md?)m]'"']AX,gH%]`"oZ=0"hnjQY,6G<_PK?G&==GnkC>,l"qLufUGM'QJ^Yp!t;0M8-8[%=m<1.p=V)'rbX%L:naj[uAu0[\.bBKE:'?b`<gS5eMiGV&LPk^nRe9QsX7X2N/(uYrLNV&.c7S8urnNX$f#(gt\!heu]R/X?IV@@?n?4Z:^q)0!#\0%9NHu]0#HHV_F6q!\B(&pe7!q'!qV=7/.c/rdFKl\?XTk8D<f_TZup0%(RU*s)3]F[<f)nk_CC]/Mm,h7q/r`+r\eY2Geg9TVbb!t%]4&'=g`]fH@X3[D+Z<^tC]c:</a!tiCWs7X=<P>nU9.WB^;-JF>9LYqU9.W=?=I[XAuM04I%)6;9;MM&k(Z"+DO.eBp0@H?DO.eB%;7'T+E>T\T`6O12lO.dm,0UZC>_H6(#o@$98CpS'#r:Y_KXd&[i"/t57f6`AR'-J>PD]_4pQfd'Y/VbmKJ=WRL;>$Zc\RW*@iFUs%aku7F.Xj9KUe<bm&oml*=i*U\A<ocL`4@,)Tpm@@pKtW/`CI8Q1iIR'f4#<q)b;ecQE-eS-=sFlm`\-A&TTc94%(V]PmVS"g(&-*%:p<jKF+W+A[M.s7imLt^(r`&a9U65)FmsPiZ;,"XN4CI:V`>DlgQc:mN#]N]%ab`jp(.TAiM8LD\s@1J7-]HF6p`aN-tIaA2T=/N%L/1h*4]JLh5M/qO$FL_8%mhU>^8.2)WnYEf+h99ThL8ATFfk?6psX:g.K8,TX%a2YF+gr-1u2g7VOOSIJWE+MMQF^Bp;MGq5>09j%?sAi%^"<(9*+`LEhDI.@'5:iH3.80?W-]9cdE@_K2TjSW.jpsqJnZ;u&b$;aCf]RQhJ8M#/5gqS'86\t(V,@;M/mBUDG&jso@d@S%'m2le5qLpmOWTL<]H5h>/Q+>;$1#_MY_=TdPbqeNf4snZ@90U&ou3fs_K6?]9C1jQZgV"=5E\!/dq2VGQn)Xu@3l+XE=W-hB=fBh%<6O"/-aT1A*W1^[9%WVu`o6MDMUhQ<qsO&faVe@e%_#$paB<N#gMp0rhH*NTIO'7a0NQp81S,[VChGTM?H)su^sXh`DeIf30<SOj%>S#A?_1N:nB7t&)=]qfBTXhH;?hTu+3f<b&3DTX2kF-Ggm5YM,W4$m9r`n\g[*7k"^n.uS5pJ=lgmclfFoXFi@:!f+ihMi6?'[Zm%-4:bcKs<+3R3(\,+$=V,AA'2#&,XI[kHkb<eYd9ODFU%Qb1R.V(@]f\N5W>;00r&coTX+G@f+[PhlJ]Q<gIeDLIhXgd,F0H"DPD&%?O?#Y0#LM/e+jG5'QoP,*Qi-n9LgFBHW++$8uZ?3GjQ9T_m$:bTeoE(.B6*m1V?jr5c27I^m97\f"muZb`!Q",mf,uV=:EEgC:Z"%^(;"Xi'7._5PtE:ri<g1r7f!_S%nsImsk?15@;bZU<*7GkOD("roO1M\%hsD^])DpJ,&2Vrb%jqJ+qtVroS-KK1Gt*g])@YpqL)6%Q`Pa<@d/1E.f,jl/ZdE9ja:2rr30o^"0#6Y7%$9#O:H0*ep.!XCl;a;-7tX%(d4TprHj#4d)Rg2XuYLjX,cs6pd(u#U^n2jIEL*]%^A#5PA&t,$lf*QLcHss@4dYXeL?4AM-8M^@fe'Hd<pN)"7B^l<p?ug0KQ_-T5Sm7&fs5XC-7gcpmnGKLSb8"601pS7:=3+FS\5Tl%r2ZBZ&F\&Pl>\mVU4-'&Dh.5qGrq@cmVQ:`glB'>`h"uWE_q0GPR'JZ!?>V)NkL9+d;nA:'m6a&J?H4;eED!D@q<:)gKBP6BG/pb%^ReYR"1Y0KY)isP`!W[D<J-]%k5@cdF"2"@DD(.H.dLt2S1p46Med8m5>,7H\Qopd1pAn'\6ZbrG]D11%(4RXZ<uW*'l<9co':aQ%q'?a5%4#".TnA"t7P?/%"7K![o*lR<T?)]r(^uFFhLq=(Z1tiN5&2@/N3jAY&u@:@_dm!g\ajeoRUJMm'/&<*G]H9qOriaefDQ<f%Z-R10@cJG7AD*bO_qJ.T$jpO88PGBi^a3,tc$#F)M>'&I<4"#E`iL]"+#aKE7o2Ee1/-+#G+/&?!dPb48_s\A.cQQXE=0tA+-9tO%hm0mZ]uWmq-R+7$c!`P7pS=@uJXNm4fgVR%[@R5cCIN#.QM)$GMG)!Yc)fYk'oUO'WGL%/+&Z$:5,nGU<?e0sFql_jlZNu)gh+=9%J<O=%_,_-eB'g>@ch;AYo$tVQ6PZ3NW9`Ue).fG@*R=8N?XKgW7\lW.;GQP5.f;Ad!O?6]de$ta*-N+o\Mm8.=*MIa9V8=*^4?+2%qtUUl18*=L7l=`7LSdhSJ6h5$_XBM=P"K\'Ds,3IbTgZmH8TtD1=4_[-72H"'6;L^rPb.Q3H6Ang\t]hbJC<tbNdS7UCoGT?3&$5%"/-.`;tO'KKU.YE[tGnt!3ET/-e*^_WO@9%OABJ.=G:77MKS!iUV*LYXP_3g7^[P7,JV"NqqJkoT^J\pou&.]N72:o8mU*/oN6%&%ODS\'$]DKST&Qm4pXWPqhEZOGo`A/Y%\t1NOH%>.M*XA?)I=7im[sI@2gkI3,Nh+tX=!A]NK1_g[p$2'*Qe"$A_XPMb/uf$s'_,!%%n2$B]e>=)9=2Nc]+VDO6CP!hb&oIUb0cE7"-kf,m$=T8\7+hcp5q(J\Ie*,Vu2d?,4ZdaUegINac]BuaBbPiR3G\K?q;sL,@fYC%Cs(<G9R_NQ!`9t/+bQpB>"!GhDGQt]e@>/cM#Ens50$4+Q?n/]^ZV4&TN,N4>0k-f=>u9o7g>%BAc!h@[>jA6_GHd0<1Wul3j]Gp%83[`nmDpYV<*.>7oG">sY)XL+?W/J1<'>>Gj&E,G`shck91+T7d]6JGO"^6A`DA3RH057`Af4VX2)#[&0G.#IX3Cpe]+npt5j)W'%KE$6'B"Oh8N\\JDe)1[f2rR^CQh:L$<Qd\WcP`D9dDk5XX`8\X:N*/Wm%%j9r5a<>MHLC:`FQoRkJDTYYE!(cqi@T0&?cl\`>$7.%#UJelK\8,@Sp[Bl?gVW;j'TSm%f>ublLIZ]bU33WhIc;C@TUO8$m^8iK\<A]Smpg"n"o[l><e^:iur_@8Gle%0rjFdNVrd)^XUK@%Wnm>l^W9-'/0;aMjdXDtFlP`#J\nu0UuGi!nkBiF2A\.1T?9*XA,3!ZQ4'tso1]spLmok`qXcuOKU_6F%$0+i;[k"le[3=#S?Z_@%3?6.VCd$m\-TVU-YJWP4bbe)T_4!.*r,[VRRjpW;mp\FC^>8af!iKnE'X>G=UGbcVWhS:u&e#2j=&j^LGke[-Ekm,U>u_\/@_:,!%MON3%B0U!!^8fa_kuFg_a-XDF<D6(.qsCC%?:$eMi![*&Mm:Pq#P&26*qHWp3m%_X/t]r;b_6WTod"_3okXCc?W@$G)RT80oP1j^%aqmR^W+*TEVS6FniX9j:[Ye-VZ-`I$dVal-MhbaCHoD1iG!j,_%7`pnc6(p1QbTM9[dup&h^Gp4I)\G"a%i!RM<H@R:&J0u>d<t^%WAkrnVhE"W"W!kjT%:\q0DEfdQ>21A7Ii#6N=G%EFn?m]ZJDYg8(&]kYdeEL=dKgH/BTkgQdimbj[.NE'j-D=geffSVq:aJ^SGNH%A'EH6U_[RS$"h%<nucfSfUfMtlrFN^=\fJ;!:l-O=PGT@g6Scahj3Tkeg7^.'i1ZMZ(<#oNX$D\)+V7rIUp[kQ53=\If73,Vb=&W%Uu"lXmFk44UHmB^PqcPsd?3<Nlds]>[DinVV0B2)*oB_J2G++2EP&&&B)<ZY"/Y-966stS+Lur/[OkoQY&0dmb(q,b$hK!]p#H@7%s'"2UCIIJ#)g!&iO0@\!XKL,+[JGd@5+9KVOH?t3!qY.m3f4<dIk>MmGe)H:0`f!/!_D&h@CCueUGV>l]DZ3JeCnPT9<E&C+(4K8%pl'd"O.@t/'%'Q-S+sCu\74pI;fOuh:C2m8$S4a^4o)l8?LFHQ/]A@s[GGdM=Ra!rSdtdW\gCXqV?0?@eAD-h=ie1O:aN)CKW8BX%$O\O;OEF8$[PYR(Kh@Z^p\6rPp".\NY'uUa];?A+_W/"d0<sOKIAoWB[4`,?WJJoGWaEZDl+U@e&lfTW!c<#n6>ueW\u+&Oii2Q&%f$i[68[18=j2nc05^p0b>e/oN]kaq&,rHm%-(^PRL-'EOJZN'*A%GoG:OW>Hhcn^^)HAo-hShO%GWEM."A*<#ioc@aAuZR*fOd/g%&;`Wp?'cIbQ1J9WH-"S%.3X/%/1e0$kfFR9ppm4p`L-"[2/MaDl/hQ"UT^If7;'>F<a/od)=]#a0OMlJ;(VD8\[3O>rSjfD"7IXg%Zlp&ob;_P?V>g75^Xu8g[T_HcCT$uPMJX*#16D.E'5#E33f9aI^QoX;D#\`0NelmJ+n9o1`MfLY+8EasrNj2:(,,6$kTadh>Q#OG%f"8@pNV/"@TmcR&eZW%DHmJdgV0DBm6.t>^bl[CKZc+Re&/N"tjjUj>'.eUGlI0@'?UrWPj$Am?INcDsX?Se0eb/U"/)mV-5j\6N%]&'Ka2lrSXcJ!)8FsPi?nl,':f$i[Vh/.V&P7bTpD13L&%>ZtL"5ANkrB6QN%EUNCr"SODX!7l9f94Ah]\>!^ZF\^gW%It8+kc"e%Sk?1q4[$O7h<*mLnK2t6i?$10FWgu&Hc!GV5W35VLYPW>*G$MOrdfVphgAe^'COErs-s,Cl5'u5EI12ODg+#7q>/0E^K<;>1tG>i%I#Tc&=7YW*<kJB:g(OC:lQMmR[3YlG>9[LaOJA^Uljn%/b8^G._R&?BI4=&VlY?]f^3RS3AOK>!HK+\I)Y4VM4lrT[l7!nHH\'/7%U8Kj=qtp?d]WD+;s$AGE,Te2XoD1rpW!A-)EW^<%QhJ-Nn1.b1gViJ;EP'JNbO)kO;(h3>4a/0ai`L9#D$X?5%+,R**.HuQ'Fd9u%qt`AMkeD"u<7QRd-NEA5<@%-_X2W-gI_7O=.CkcDFe:[r<^XtDjJZ[,ZZO+m)O%:r7TJ3Yds+IX'eC3S2F'_TJm--JOC+\^jNt.A%$YJBd`M:5_'4[Rt[_*<9[^#>GAEQW3#L_n9)M4uc@(KJ$3"<9eW#.>YQqsp#3?B].gV%#lIkWR7=oM1[gop0IRq//W'-XaNg/8[=%#&"9qDd+m:TZi#j]4Rcjj?&J;Z.`l7/V3k8L037&@+Pjek4P7#+6jgG/*gZQ2C4ljEAeMZ":mc;:u)>LM3o?b(tMN-[Ge"p3f_?R%5WUAb?@Sqb&J4LGYJC<%#N+3)hcLb145#Y5\q0LnQNe>F2$P2D4>h`-lGD03E)#orKk$e5T,&SNHBpH.!nb=lOI'ZhBh<o^"ngMS%@d3WYqKr'-6tG_ph_QPN4A`T\3*p)#P!$*#(5DBLfDH+tdTf:P70.JZY6Mi\H*%$CGp5/F<kIah*UVTHFEe[.$V8rb85R!k])X)k%0^cMp$V8U=\jY2*j6S(X(/.5(dlLfFUhmjO8<CP8J=R(m(GZPfSuKpH3>(o2E!7Ip\hZ$hI)AeXM,OR(Hr+CZ+Wq<p&G3&E`d$`S%CVP;4LTg=Aol^K$cK"Ws!_[TbU]@4'^;SIg4n\RAMs'_.KDI;aUq;=(Qf_3,)Ci%FAHE6j(#'?VPgFPIe&!5W?<;>4#-+V2H7qDf%<M%oa>RLc=Eo^tZDPBF':[pQbeDYjGhFfr"@f:)K'Y%q1:Xih'53b\G^>ATP+EQ/IOPh%JP?"^XY,Fbt!N+9F0QJE5=:adIMo0-<%N^j0;*4]5V<#%oahqGlg>feR_s$lZbk-chBSB>QZ7V>d:C2.m-QNMg3@p]Lr=Htn0T";)uPPa:f^!q4YFUGX%0K7Mc;&@7S@"#M"%Oq&bQ2&n07,b1?*kLZuoM%#UUCIc-'iI3B^6SIH^=\m"'.EFO(c>V%Pl18?"on"0]F7;i^'`O5f[$jk/rHL;s!jeaGDuI8j))hL%%>&1iZ@K?3P?=MLXqt&G]G72=Wcb%hlYX@*.=5Q"#Y#F=;<i=@L51l/P;(jY768rNIXL9de_c[`*=C,EO-;eu%+RK(R[a'rspVi(F%fH9@o'ibok<gI4Sa/)DX@Hig9E9a[+QVPs:b6P>'*/kOGiqBl]bjR3rH^]+IS(68u#j_GG;NY'qoG2g%<d/AC3`LiqB"lM:\<LDf%&kFkO]BJjGF;YdJQk+NlXI!r4k*rq_6AA+r?0q^ZaSME9e<l&``k:`qg_6#T;&=8\""!n:c]BCla(.]/!7Ij>d-^YQIt([)>/S_P%B5+P(LpET%MLcehI)sqt=iXQ]o$$\nHSmNO,`?P+5+l*P,@_H'Z-=)8A!^Z_fO`V!AR>FDs"o#LT0_Q><);TJK"S2X%R<(=?P@U=%:]!5YlNl9g;'=GO'i--^S4XK)!AU10No5h>Z!aB*ia&^JZ]4PCq2HJW18l?E=Z0)F3%rOlddBF?f^.u_QG1.5Iug(->\XOspFDI'%:YaS1o.0I]40BC3mXVgqY$:KY06#1=M[r8:q"T.B1nn4+WE>PA(^O#2)suSl6cHaf=I%jHO1V+G<c=ht)ru;u'_+`H)Yhk1-!;;H%SmUs8Qf-C4G0nAOEZ/L)<((i`Tt]l:R4@t$,gjI1nCH4Eds??&W%(i,Mjj/j$TQaC3S&rPdKAdie9,c:X=!Qsb-6oaV2'epT!D4#%*OQA!_W.-!>%sb,m-ZKo\Ubq#8&A[6"`r:GF:9YD3*h7PHDV?h5U?%b_4F!X(K6R?kqL8R\d2QGQ#&;c_s0?dnej#Nc9lCu='*Jn%h"?r36k.phj]K;U!bRmdoLuni!Nf>GLqg0t"M?!_oKke?Og.5R\:N]grdoR[;(4]9]G*%TMFHbYb',3F?;$Ze94ef'0":SaKsa8q%-77aKSB+uo%uoF9[4@\9(</Vs:`u-_mOEuV(%22M"M)IsDu=X4ll-C\kq!`oUSa68SH6dpH+/uFY++Lc3-GM=g^(U7(p5YoB;qh?%Hn`0X+Pi#,J&[SCGF!W`4cRbU(5u,bW+g"uYQlRkb#7*cdi]]c>01%J!mtH's%X4-Z]qZR@p%l1-mh3VeGW[3YLhq>knNe7a3`Ej%R3AunmI#kWGL^tq+acHarpdY@LRB)fSI^F?[4p(8Y$4O&P!dDb88)-41G*A^Vs(_On@u+frMQH&?*Y5*37%NPe1p/Zei7knTI(t#%S;3?0Uh-7YJX#!;ZI&E-FT/d?`ef*?3qI2EY4HZa-0\n!\i*<?Lf1Pp&8KdJ9[1G8FcbRMR[*j^2/?X'AmnHUf,"c.k,h9`$8lT=%]5$o6ViVRQ,MgnOJP)u0b*_k'EE&2K:O3d[1@6I]/53jl?%:H;OB8%A85/Hke%i5r:gD1i?;?QZ_8J(5*B-Du?EZbkPI0e^XUJ"O%9iRN";L$NW0kG77%5^@1Pp&ApD*KP@*OFP+CFbb=->,LQcd.3"=Y=PeB>K61(FIhC__*YTH0Ig_$SJ.PP4317YjDdN?MiA=5br.r%Z[`mrX*#1_-P*-b95ZahXX<^)8[sl-Ju?H"4:;]hKV&Pqg5go`cN((])soM;>7/oa^1V7,C"%a-"EfO)L?ih2eCd-"2;1C"Yp*lK%gs>U,K?.`Dg90bQglO,ndktE^V.$bcZFmtfQ`oIs_M\.k-I+g2ahHKfPi=:+p;DX(E6MjP=;,lF$*Lf$BuQZ/b?cS,KrU":.inB7%dT%[?5`-s_=.SiFDVQ2)X$6:Ppkc22G;VV'["Z&XG"K7nKYHNN3DU7L,q3[TD6_ELT;ke16;!^QHU06<,c*)/8SMiel//;D$$sIj%[j?T"ZBU<;Qo=^;RX)4Al)AnDQd_P`f]=s&ALZ-C6V^:AjKqQe^'89ZOWrFG3\Er5P+X_Tm!87$e9'HB$#5j2:2OqVC("6t)Ht:B%m=H7&+0rGE#_k&RoYrFJmJ>[h1-s*mSr/kS61+K5?O:I/Pap<C>%>FdAi/J=RHJgS/Xm@+P'HXG[VSF6m7T!H7VaQYYdDM\cFo^0%!a;N#o@r+\c2(KDB`r_P2DB3u:4J+1E599@emP?uQfiMip$;VS-KbrM^`<0GS$,/H$4JO9EMhaLD"N4.NsElfNkCj2c$Cc2Og&U0%f9`<mm=6elp[IiVli_2cO['[U.G\GIm11DJ,FLV&=9F0aN7HhCU*[$lNpD)_hLVo^7uX.(qXm&'2QR8&#Q7V3gV1J9XW2*=6-Of:%&hRXLMG[Wjq-$..XKfX!kLb?$Ju?dLoa9FX[PrXI#QX#s.G(A3qa.H(<-PVIXJbu3_b`O:_`b105@,7AjiIM8<QM65>r^D1GbH`-%[U!)B[45RuXsb\aTCCdrV/Cu[jWmbq5^8oED=uC,hYKQbg[dgT3#&F+PhR@pL"MF)MFf+:F!(WL*"0PECe!5&&$:&."le6ecYput%'c9ECM7GI5*b5)P+EU//.fMAie?C46FU9uH]\q3FjHD4290sZ`.E%A,qS'*qOZ3Qn0'W&WPj(I?CdK""-X;&k%\EX7:EaPYP_HoJ%6.b#)Yk9'1"=GeMj."#cLNNo`48bl6d2rZ^Q(,nG=AY:h>7I2'CY:XCjJ%TL+J3buD;(*N'Oh^<.5qga`eBp:#]K.o,R0=I"><dX%&J2iJiJ7^(.Xph!V<1,6i]*<PHH6?J&VX'D\*(5Y:Q:lZa=4C)Ij>GE;:s8MjDN,dDF#d1lr&hf:$-#KJ\lK<2$P4G<!PiK-N-[.%9#8S0loA>C/6/>ePB-/`>g&((g?Hg:Eu?fZaGK];X?/j,42_akM6;K=/;-3Vb0+g6E5muoP6GdEQ=pL`S.-`]9?01X$[3""Ce$P,%EHi#@iM=r:?Q40X2';MmXg9(_U._:Gele&^-)PfLl[,$T<N!/eY]SGdbOm$kpGe"X#jJ8uBV"F](HT@4p(@K+!2^bH((q5F'K743%7)@a"!5J3NkI`&/"Ep)?5V',WAIQ]ccNt]2pD8`E]EkJ!g5nUO#U6&^rE'olHXc9O"E3*`#[!e>'TVp?rl#Xr<=fB*redU=apJ^k%Sm`AHZ$2k=QosMc@.0ZZ''6k!XX_Mrpb>O,5t(AB@8,Ch$"D;)A9VWNAo,09ofYrVLAg/uqE>s39$>&:h^ceg(7*Mq=;>#AY;'tm%6+=Z?rk6,*9"=<4_$aa3lhK<Nja[rCUsk>b/=?$<roJ>b"Va;efZ1l"6H8u=gTo6Og;,Ln['Yp=Pi"K]gI_rl/Itt^WFruaQI'Y$%G-jW<+#m&]E*7gD=mIKVD(Ri8?>43h.bM;9n&,G!3h)a]9c\!a`#JiP@45aao>T>"Ju?-eQ9$!2"d'Ze'"5M%/Vj["H\m%&n$KFD%4'>B?p\KgNeFtLRiePlG.0eRPkn"11B0&i\Kj=@m6_s4eRbBdRLou:lIP`&Np@kJT%>39=5D.`Vcpf2(A:m*T+kP7k#rIa-!fJd=%,=(23jI,?Z^\1:U.8BWm+g?56F3Oa^E\,HMK<VT*?X[[J:g]#IgBt#"n1Z!'Wf/b?=qm%poJspAMoq&"R8ETb(^>UP2"crA0RY:9%LVs8spbf;R'LFMk8V&2%_>Oqdos)e;?LYc$"CD,=J/WQi*F]2Q/B$j;/O5am^gOTf3nXo9XF;E'<mj>*aU,`Y7bR)2k+VilH.\"a%eupl]`DS$FGL4!Qcj'h4caDUjOUZUa$qZJQ#`:1VBM!)FbUffZU\>GqSIj)t(mYF4'-W3Af2L:X>9Nt4QMV6/\]M%#[5,hBY$%dk%(NDN1<!@%h+]k_U>>9fr$>(mV#9_V1FRjk+#'S!ZBKh3Q3J^Rd58+YmA0h6J%e]/;@9DS9GAGgPDC^1Qp<t.\48+f@ao\k*XmHPE%_]GHX1J-+-WLBZsY*3XqqAS&@*RPRC<n)2Lh?9^=DQ!'/")3Olq#9G=(&S8g1$*%m:nWN[j9p"F!'Y,n.ueS$5D0m=@b1T1=A;a@%LJ<a@q&g(+_N(KS:b]al-hl<$^1<-jCd;LKRBOH)<K=K%du%B(/3Y_'>r+Q#>.%RgpWO*TKAD"kqY.9Id>f$h2-@regR\p"=LTn?%ph!6fa>?9P=u<qLBf)+%MBB?IKPi.F!/ut$eC%p>Y]XsF2sH9GM647WHX4BhN]Cd,jL)<`iKc2@8#(>A[6:H&U&&INHgNpio=8:S%]5<V+he?l;7,OF/8#Y;^-&pkC[<M1G#.C>OkAM5%K^1F5cJt.@g$t4J8&d`+MPPdL/g8(9G^*XmClE/;9a3LP't'dFQP=PD%A\\E%C^5qM``H.n_4g=NV"_ptL("6D?q>n`nW>L@p'j6ED=TOU&!IhJBobELQYp1m_sUp/]@IR'oGkF($&TS**cO\p\G1X%J^r\@D:\pW%8F(mL(['uYgYPVB$g_A3kpG,XqObmn[GrSmJ@a0hGUF7nEK08K4g;=IG%c9dnIf$:fT&LVD'ZaJ%U6n1O#-tRfjn6@FcQcn7+c/j%4#)%W4't?Gb;#Zs)P92(5$T=pHVO1CIO'l*]lc:2*)EW%R(*%>'Sf$0!GZ9k(T%pJ2cFELelZHV]#l#H\bc<6Y[/#CNkSoT/P>^t%(^3,tEUG5i%5V,&&Hq6$7m>hqM.UD;OJL5o+`iII3<5/S_+XOu((fJ&07!L8;?=_;H@U8[-S&GaUh+c2PB3sn1I$![`ech][k'j'%nS1nWN_X0c;t%k\`(,qsT]%q@Z&r<NDe#0\<4(+:=ZiTJclbu<@il#02&>%bK`$104Hj/U]0=@c0]'WV#pJfL.g?Fm#(4k_M^Ti@%.aA*]0ASX&,pA'oUt]ZN#S;Zg%,F_j-MKD#UN,;?Ep*d@D+a.u:Z7"ehjNG@%0>tB\ns9eS=BW#?n)6(!>5l]NI&]&/8l0j[o?#o%H&^j]D$NVMD3aigh8@AG$oRHeJTRo7T=G8l(kds;\VAI"eo1%j&E,G`IYGZT@R_J=g>V5LK!*"I0m8B"04jKa;J)%1-r8ZqRrTIO%Vde$/_L%k]/Zb,eLrpPQ#a;!4,j]gh7Wh)_,%EQUd"s3A`H^5[_0]PK(LgP!;jZ!H`jSfpN.kL]BsW)jK!='LDX\2k3YcXQ[)0iO%3V(9k!AT>I;_djDVes>KI<n,eB=-.:97<_T#/*;:+>d3(BJWG0B-<"50MW0i"//6j6W[[(_*5AL<%[MaAo/.6^5KQD=P<D3f#M:h%)OQIb@0f*].&P)gYme'Lp/VkK5#j9\A#pMJNn%+Vb7qJH#FHLPe&;R.ltfMJkLWs@]Fr2//<SOd]I#8P=jE0W&t1@\1Y6/I2pY[Y%(Qg`KP!C@HT]$Q820)595aX+!H!Qh7f/ktg].@4Aes$Nt&2K<LT_qmr4#-A-E(18EA;iA4-nJ&Dr-r7/@&C&4@T/#tkDR<s.!)o>%HV5IB8&BX0_=Vl`9B1_:QqUlXo_"o6IN$+!HO#:s!+?uP2V9X]KLH&AWZ\O,K]0Q\9p*&C;Z$Un:5m-pE"7$o%X0<le&ktJ!CHtS%K%<<J`_['#3E/H6)YB.7\kQ<"@^U=EqqLCchb5Rd,sE7B:i,`j6>WGrRlJ0ZA,.]"P;Zu'^j33R@pthZd^VB@Afp1Sb6>qk6AQ4Y%h/rdi74(68M&OIU6IJJ=1048Z>H>Mk4P;X,<e#ljC+j;oj+qNXh,]#5I8^^TpUA]$e)FHtfUscr*b.I>3,CYEBjAA3^V<mTZi\+`%WG6:TN"ZCg8_[rY6JSp/1=NHi&C/j&V>?Nu*DZdr<<u?V45p-TCl"&oA`4>A1!H#?C,_e<-Ok2PA!Ti5oF=CFJBt6fIB?nE0i:,E%(Ba,,HK>_'&5+c7AHUR^U[qFjX[*516`.bO!KV[uQs-0D_33!cgcuDd]doa$YY,tC8rN]I),?_k/JtBg[./<$,]#&q_kafM8<2.M%B!FnbFl3&*/X!ot,)MVj8>>i\,Vb%\8/;sK!`PfYi[&2RAa!1V9j\C7F<>#9UGrj<[-qe3mr&T'RuY8p7`h8M^M@6Pf%5I8o)aAI%WY(q/L;K6b]:X`GWsbD/[(D!G9=Tbu,.f\UkK$f"J7?U-?D-VEZ653Wmjps2g5>P56W#?/]oX5cBSXQc0^oo]L";0r:Lk%K3FETX%r9eS.lb(lh(/Mo]_!P8trV$0/iOZi*W,;BGqiS-cPliMt[_IQ+SIXEneZS-MV['<Ak;9#j6H6gs74,r!Xt:%e4F"l%lpb'qque/>%R.AOgAiAj^om-G!!]BKC:plR41hudpQC!3sCgmJ4mbM[ql"sh0APgTDCqV$Ml"M*k<ZJ4)ZAl7,#7L7L]FtBf4nJR*C)87,o^*T;%NF6VAKWRrRl5l;kT<Yd9EC5[?e%#m(N$[:i'M-L.Am0NO_Yit3#UGJ+$RlMuNSK\VM')5m*)uHOPfTqJN%im8<oRMG,-D9#bY>9s%$Lc2W9<WshcI\/]V!j8Gk2ER/#-N-aFS3JAeiZ)%W+1MAmA/bob]LM>.Zg#Le))L)^fjY+&C/L)-&3&l:8`-2GRFfmDaCPc+`uG*%O%ahO7=T2fcRKtu$=h6i`K4BCH[`5UBS=i[lSf8k@4m)Irk16pVnAo>YfqE;8]-26S;Ehg?#mYni3)#jA8-8rEt&X\r(5St5O80Z%F_&:UTmXb&.RrhEhXgX?Z+"YE;mA)+*6F7p\Z+]%a"P\Jlg%SYk0eDH:H2q23RUiFNNn5ET-XooA.bY\q'3,Od?qXCS:nk<1Jph\%*,GLJ"Qo&@3cN_7$+JKBZ`nTHYEjY'7d#6[X:_NI-Xj:S<qkq&Ku%%PdL9#1XP+-E9$I5jau2at,mN>,<P0Ze^'%OP5Xb,>]mL:X%j<oM+%Ylh=nKVIj<s:9]oZo#[Lp<MXNDgI0jHCp4`^m;2p9)m`W_h;"qF3CGl$b_>-p$E*k'"E+Dl]^An`X8YSR:k?a1"spQ&jT8%Ea8jWh?GG*&5AbR3S$%h\bd@L5$ur?1O"M^U+BYL1L^-g3ANH*LjXNOB$rfe9'Apmgl\2P3bD%0>hDq1G8,SF"d@G0?j?b,6d=C`%hMHtc^M/3pQ<7lK#<$3jC?C,6R^lTS208HZC?Eh5Z1Ol)VNHV%RGK@Ab_7W+F(]ZJ)2_,4"NHQ#:bt,`$jUi:F(`^"<\s:%0&>\]%HKKh1Og3@aqZR[h#^q4T)d0>_l%bLo,&dZ=@k+#n$X9OMC?_Y;lJ7M`(rA=&()."no5]PDIOiY9n`Oh?n7VdUp^dE$YQ*Y'Dgq]Q%n,LAAGl*+XptpSmQbWJ`J,c"QqYo7,^]!8Dq9;^MrUu_qrbG=]rUrH_s5i!Brr0D,j_t1]pV6\#?iKN/q1!p":&ONGpk+(pDu\):%rsNJ0gZ&~>%AI9_PrivateDataEnd